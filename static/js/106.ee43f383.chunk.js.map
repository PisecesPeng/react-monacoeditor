{"version":3,"sources":["../node_modules/code-example/txt/sample.javascript.txt"],"names":[],"mappings":"4IAAA,OAAe","file":"static/js/106.ee43f383.chunk.js","sourcesContent":["export default \"/*\\r\\n  Â© Microsoft. All rights reserved.\\r\\n\\r\\n  This library is supported for use in Windows Tailored Apps only.\\r\\n\\r\\n  Build: 6.2.8100.0 \\r\\n  Version: 0.5 \\r\\n*/\\r\\n\\r\\n(function (global, undefined) {\\r\\n  \\\"use strict\\\";\\r\\n  undefinedVariable = {};\\r\\n  undefinedVariable.prop = 5;\\r\\n\\r\\n  function initializeProperties(target, members) {\\r\\n    var keys = Object.keys(members);\\r\\n    var properties;\\r\\n    var i, len;\\r\\n    for (i = 0, len = keys.length; i < len; i++) {\\r\\n      var key = keys[i];\\r\\n      var enumerable = key.charCodeAt(0) !== /*_*/95;\\r\\n      var member = members[key];\\r\\n      if (member && typeof member === 'object') {\\r\\n        if (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\\r\\n          if (member.enumerable === undefined) {\\r\\n            member.enumerable = enumerable;\\r\\n          }\\r\\n          properties = properties || {};\\r\\n          properties[key] = member;\\r\\n          continue;\\r\\n        } \\r\\n      }\\r\\n      if (!enumerable) {\\r\\n        properties = properties || {};\\r\\n        properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true }\\r\\n        continue;\\r\\n      }\\r\\n      target[key] = member;\\r\\n    }\\r\\n    if (properties) {\\r\\n      Object.defineProperties(target, properties);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  (function (rootNamespace) {\\r\\n\\r\\n    // Create the rootNamespace in the global namespace\\r\\n    if (!global[rootNamespace]) {\\r\\n      global[rootNamespace] = Object.create(Object.prototype);\\r\\n    }\\r\\n\\r\\n    // Cache the rootNamespace we just created in a local variable\\r\\n    var _rootNamespace = global[rootNamespace];\\r\\n    if (!_rootNamespace.Namespace) {\\r\\n      _rootNamespace.Namespace = Object.create(Object.prototype);\\r\\n    }\\r\\n\\r\\n    function defineWithParent(parentNamespace, name, members) {\\r\\n      /// <summary locid=\\\"1\\\">\\r\\n      /// Defines a new namespace with the specified name, under the specified parent namespace.\\r\\n      /// </summary>\\r\\n      /// <param name=\\\"parentNamespace\\\" type=\\\"Object\\\" locid=\\\"2\\\">\\r\\n      /// The parent namespace which will contain the new namespace.\\r\\n      /// </param>\\r\\n      /// <param name=\\\"name\\\" type=\\\"String\\\" locid=\\\"3\\\">\\r\\n      /// Name of the new namespace.\\r\\n      /// </param>\\r\\n      /// <param name=\\\"members\\\" type=\\\"Object\\\" locid=\\\"4\\\">\\r\\n      /// Members in the new namespace.\\r\\n      /// </param>\\r\\n      /// <returns locid=\\\"5\\\">\\r\\n      /// The newly defined namespace.\\r\\n      /// </returns>\\r\\n      var currentNamespace = parentNamespace,\\r\\n        namespaceFragments = name.split(\\\".\\\");\\r\\n\\r\\n      for (var i = 0, len = namespaceFragments.length; i < len; i++) {\\r\\n        var namespaceName = namespaceFragments[i];\\r\\n        if (!currentNamespace[namespaceName]) {\\r\\n          Object.defineProperty(currentNamespace, namespaceName, \\r\\n            { value: {}, writable: false, enumerable: true, configurable: true }\\r\\n          );\\r\\n        }\\r\\n        currentNamespace = currentNamespace[namespaceName];\\r\\n      }\\r\\n\\r\\n      if (members) {\\r\\n        initializeProperties(currentNamespace, members);\\r\\n      }\\r\\n\\r\\n      return currentNamespace;\\r\\n    }\\r\\n\\r\\n    function define(name, members) {\\r\\n      /// <summary locid=\\\"6\\\">\\r\\n      /// Defines a new namespace with the specified name.\\r\\n      /// </summary>\\r\\n      /// <param name=\\\"name\\\" type=\\\"String\\\" locid=\\\"7\\\">\\r\\n      /// Name of the namespace.  This could be a dot-separated nested name.\\r\\n      /// </param>\\r\\n      /// <param name=\\\"members\\\" type=\\\"Object\\\" locid=\\\"4\\\">\\r\\n      /// Members in the new namespace.\\r\\n      /// </param>\\r\\n      /// <returns locid=\\\"5\\\">\\r\\n      /// The newly defined namespace.\\r\\n      /// </returns>\\r\\n      return defineWithParent(global, name, members);\\r\\n    }\\r\\n\\r\\n    // Establish members of the \\\"WinJS.Namespace\\\" namespace\\r\\n    Object.defineProperties(_rootNamespace.Namespace, {\\r\\n\\r\\n      defineWithParent: { value: defineWithParent, writable: true, enumerable: true },\\r\\n\\r\\n      define: { value: define, writable: true, enumerable: true }\\r\\n\\r\\n    });\\r\\n\\r\\n  })(\\\"WinJS\\\");\\r\\n\\r\\n  (function (WinJS) {\\r\\n\\r\\n    function define(constructor, instanceMembers, staticMembers) {\\r\\n      /// <summary locid=\\\"8\\\">\\r\\n      /// Defines a class using the given constructor and with the specified instance members.\\r\\n      /// </summary>\\r\\n      /// <param name=\\\"constructor\\\" type=\\\"Function\\\" locid=\\\"9\\\">\\r\\n      /// A constructor function that will be used to instantiate this class.\\r\\n      /// </param>\\r\\n      /// <param name=\\\"instanceMembers\\\" type=\\\"Object\\\" locid=\\\"10\\\">\\r\\n      /// The set of instance fields, properties and methods to be made available on the class.\\r\\n      /// </param>\\r\\n      /// <param name=\\\"staticMembers\\\" type=\\\"Object\\\" locid=\\\"11\\\">\\r\\n      /// The set of static fields, properties and methods to be made available on the class.\\r\\n      /// </param>\\r\\n      /// <returns type=\\\"Function\\\" locid=\\\"12\\\">\\r\\n      /// The newly defined class.\\r\\n      /// </returns>\\r\\n      constructor = constructor || function () { };\\r\\n      if (instanceMembers) {\\r\\n        initializeProperties(constructor.prototype, instanceMembers);\\r\\n      }\\r\\n      if (staticMembers) {\\r\\n        initializeProperties(constructor, staticMembers);\\r\\n      }\\r\\n      return constructor;\\r\\n    }\\r\\n\\r\\n    function derive(baseClass, constructor, instanceMembers, staticMembers) {\\r\\n      /// <summary locid=\\\"13\\\">\\r\\n      /// Uses prototypal inheritance to create a sub-class based on the supplied baseClass parameter.\\r\\n      /// </summary>\\r\\n      /// <param name=\\\"baseClass\\\" type=\\\"Function\\\" locid=\\\"14\\\">\\r\\n      /// The class to inherit from.\\r\\n      /// </param>\\r\\n      /// <param name=\\\"constructor\\\" type=\\\"Function\\\" locid=\\\"9\\\">\\r\\n      /// A constructor function that will be used to instantiate this class.\\r\\n      /// </param>\\r\\n      /// <param name=\\\"instanceMembers\\\" type=\\\"Object\\\" locid=\\\"10\\\">\\r\\n      /// The set of instance fields, properties and methods to be made available on the class.\\r\\n      /// </param>\\r\\n      /// <param name=\\\"staticMembers\\\" type=\\\"Object\\\" locid=\\\"11\\\">\\r\\n      /// The set of static fields, properties and methods to be made available on the class.\\r\\n      /// </param>\\r\\n      /// <returns type=\\\"Function\\\" locid=\\\"12\\\">\\r\\n      /// The newly defined class.\\r\\n      /// </returns>\\r\\n      if (baseClass) {\\r\\n        constructor = constructor || function () { };\\r\\n        var basePrototype = baseClass.prototype;\\r\\n        constructor.prototype = Object.create(basePrototype);\\r\\n        Object.defineProperty(constructor.prototype, \\\"_super\\\", { value: basePrototype });\\r\\n        Object.defineProperty(constructor.prototype, \\\"constructor\\\", { value: constructor });\\r\\n        if (instanceMembers) {\\r\\n          initializeProperties(constructor.prototype, instanceMembers);\\r\\n        }\\r\\n        if (staticMembers) {\\r\\n          initializeProperties(constructor, staticMembers);\\r\\n        }\\r\\n        return constructor;\\r\\n      } else {\\r\\n        return define(constructor, instanceMembers, staticMembers);\\r\\n      }\\r\\n    }\\r\\n\\r\\n    function mix(constructor) {\\r\\n      /// <summary locid=\\\"15\\\">\\r\\n      /// Defines a class using the given constructor and the union of the set of instance members\\r\\n      /// specified by all the mixin objects.  The mixin parameter list can be of variable length.\\r\\n      /// </summary>\\r\\n      /// <param name=\\\"constructor\\\" locid=\\\"9\\\">\\r\\n      /// A constructor function that will be used to instantiate this class.\\r\\n      /// </param>\\r\\n      /// <returns locid=\\\"12\\\">\\r\\n      /// The newly defined class.\\r\\n      /// </returns>\\r\\n      constructor = constructor || function () { };\\r\\n      var i, len;\\r\\n      for (i = 0, len = arguments.length; i < len; i++) {\\r\\n        initializeProperties(constructor.prototype, arguments[i]);\\r\\n      }\\r\\n      return constructor;\\r\\n    }\\r\\n\\r\\n    // Establish members of \\\"WinJS.Class\\\" namespace\\r\\n    WinJS.Namespace.define(\\\"WinJS.Class\\\", {\\r\\n      define: define,\\r\\n      derive: derive,\\r\\n      mix: mix\\r\\n    });\\r\\n\\r\\n  })(WinJS);\\r\\n\\r\\n})(this);\";"],"sourceRoot":""}