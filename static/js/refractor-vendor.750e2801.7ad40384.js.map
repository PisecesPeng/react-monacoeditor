{"version":3,"file":"static/js/refractor-vendor.750e2801.7ad40384.js","mappings":"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YAAY,EACZC,MAAO,YAET,oBAAqB,CACnBJ,QAAS,KACTG,YAAY,EACZC,MAAO,YAET,eAAgB,CACdJ,QAAS,KACTG,YAAY,EACZC,MAAO,YAET,mBAAoB,CAElBJ,QAAS,iCACTG,YAAY,EACZC,MAAO,WAET,uBAAwB,CACtBJ,QAAS,KACTG,YAAY,EACZC,MAAO,YA0BT,4BAA6B,CAC3BJ,QACE,0MACFG,YAAY,EACZC,MAAO,WAET,eAAgB,CACdJ,QAAS,6DACTG,YAAY,EACZF,QAAQ,EACRG,MAAO,YAET,wBAAyB,CACvBJ,QAAS,uBACTG,YAAY,EACZC,MAAO,YAGT,gCAAiC,CAC/B,CAEEJ,QAAS,wBACTG,YAAY,EACZC,MAAO,YAET,CAEEJ,QAAS,iBACTG,YAAY,EACZC,MAAO,aAIX,sBAAuB,CACrB,CAEEJ,QAAS,iBACTG,YAAY,EACZC,MAAO,YAET,CAEEJ,QAAS,iBACTG,YAAY,EACZC,MAAO,aAGX,cAAe,CACbJ,QAAS,0BACTG,YAAY,GAiBdJ,OAAQ,CACNC,QAAS,qBACTC,QAAQ,EACRe,OAAQuN,IAGRG,EAAS,SAAUC,GACrB,OAAQA,EAAM,IAAIjM,QAAQ,4BAA6B,SAErDkM,EAAmB,SAAUC,GAC/B,OAAO,IAAIlM,OAAO,aAAekM,EAAIC,IAAIJ,GAAQtH,KAAK,KAAO,eAE3D2H,EAAW,CACb,iBAAkB,CAChB,KACA,QACA,QACA,OACA,UACA,MACA,WACA,kBACA,MACA,OACA,YACA,aACA,OACA,WACA,OACA,OACA,QACA,WACA,OACA,QACA,OACA,MACA,IACA,IACA,QACA,QACA,QACA,OACA,kBACA,MACA,SACA,MACA,QACA,OACA,QACA,SACA,OACA,UACA,UACA,OACA,UACA,MACA,gBACA,WACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,QACA,UACA,YACA,OACA,QACA,OACA,SACA,gBACA,SACA,QACA,YACA,WACA,oBACA,kBACA,OACA,YACA,MACA,QACA,MACA,QACA,MACA,iBACA,WAEF,uBAAwB,CAEtB,UACA,YACA,YACA,KACA,SACA,MACA,IACA,WACA,KACA,SACA,QACA,SACA,YACA,aACA,WACA,SACA,UACA,gBACA,oBACA,YACA,UACA,mBACA,KACA,WACA,IACA,KACA,MAEF,oBAAqB,CACnB,aACA,WACA,SACA,mBACA,SACA,aACA,aACA,YACA,mBACA,kBACA,WACA,aACA,OACA,WACA,UACA,aACA,YACA,WACA,OACA,OACA,MACA,WACA,UACA,SACA,UACA,aACA,aACA,SACA,QACA,UACA,oBACA,aACA,cACA,OACA,SACA,gBACA,oBACA,gCACA,iCACA,YACA,UACA,WACA,SACA,aACA,aACA,UACA,SACA,OACA,eACA,eACA,QACA,OACA,SACA,YACA,UACA,QACA,WACA,cACA,WACA,QACA,YACA,aACA,aACA,qBACA,SACA,SACA,WACA,eACA,UACA,aACA,OACA,UACA,QACA,SACA,SACA,OACA,aACA,WACA,YACA,MACA,aACA,UACA,aACA,SACA,cACA,YACA,OACA,YACA,SACA,YACA,iBACA,UACA,eACA,UACA,gBACA,eACA,YACA,mBACA,UACA,SACA,WACA,OACA,aACA,oBACA,YACA,UACA,UACA,YACA,WACA,WACA,aACA,OACA,cACA,iBACA,QACA,UACA,YACA,gBACA,cACA,oBACA,MACA,UACA,OACA,SACA,OACA,sBACA,aACA,aACA,mBACA,UACA,cACA,SACA,aACA,WACA,kBACA,OACA,OACA,QACA,QACA,QACA,YACA,SACA,eACA,eACA,WACA,WACA,MACA,aACA,YACA,WACA,QACA,oBACA,eACA,OACA,cACA,QACA,UACA,UACA,OACA,cACA,SACA,OACA,gBACA,YACA,eAEF,eAAgB,CACd,UACA,kBACA,MACA,cACA,iBACA,aACA,UACA,eACA,UACA,WACA,cACA,MACA,IACA,IACA,cACA,IACA,MACA,IACA,KACA,SACA,cACA,wBACA,OACA,IACA,OACA,IACA,WACA,SACA,cACA,KACA,QACA,aACA,SACA,QACA,SACA,QACA,QACA,QACA,UACA,SACA,UACA,WACA,KACA,iBACA,KACA,MACA,UACA,aACA,KACA,KACA,MACA,QACA,WACA,SACA,KACA,UACA,UACA,MACA,SACA,KACA,SACA,QACA,OACA,WACA,aACA,UACA,WACA,OACA,YACA,cACA,QACA,MACA,iBACA,YACA,yBACA,aACA,QACA,aACA,QACA,UACA,MACA,SACA,wBACA,MACA,OACA,KACA,OACA,WACA,QACA,YACA,cAGJ3E,OAAOC,KAAK0E,GAAUzE,SAAQ,SAAU0E,GACtCX,EAAOW,GAAGhP,QAAU4O,EAAiBG,EAASC,OA0NhDX,EAAOI,YAAYzO,QAAU4O,EAxNX,CAEhB,MACA,QACA,OACA,MACA,OACA,QACA,QACA,OACA,QACA,UACA,MACA,MACA,OACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,MACA,SACA,KACA,UACA,YACA,MACA,OACA,YACA,QACA,OACA,QACA,OACA,QACA,UACA,KACA,QACA,OACA,SACA,aACA,aACA,WACA,QACA,UACA,OACA,KACA,OACA,SACA,QACA,OACA,SACA,MACA,OACA,SACA,MACA,WACA,YACA,iBACA,kBACA,SACA,YACA,QACA,YACA,YACA,WACA,cACA,UACA,YACA,gBACA,mBACA,SACA,MACA,UACA,cACA,aACA,SACA,cACA,OACA,eACA,YACA,UACA,eACA,eACA,aACA,kBACA,QACA,aACA,SACA,eACA,YACA,eACA,WACA,SACA,WACA,aACA,OACA,YACA,gBACA,eACA,OACA,UACA,UACA,YACA,gBACA,iBACA,kBACA,gBACA,UACA,OACA,YACA,cACA,UACA,cACA,aACA,OACA,aACA,iBACA,aACA,OACA,eACA,cACA,WACA,gBACA,YACA,UACA,QACA,aACA,QACA,OACA,aACA,UACA,aACA,aACA,QACA,OACA,YACA,iBACA,YACA,UACA,eACA,cACA,iBACA,YACA,oBACA,kBACA,QACA,iBACA,eACA,gBACA,kBACA,cACA,gBACA,gBACA,kBACA,cACA,OACA,UACA,YACA,YACA,UACA,eACA,iBACA,aACA,OACA,SACA,cACA,qBACA,SACA,mBACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,gBACA,cACA,iBACA,cACA,eACA,aACA,cACA,WACA,iBACA,oBACA,cACA,qBACA,WACA,eACA,mBACA,oBACA,iBACA,UACA,iBACA,iBACA,cACA,SACA,gBACA,eACA,eACA,aACA,aACA,UACA,oBACA,eACA,YACA,cACA,wBACA,oBAGFhP,EAAMC,UAAUwO,OAASA,EAp5B1B,CAq5BEzO,GAz5BLe,EAAOC,QAAUyN,EACjBA,EAAOxN,YAAc,SACrBwN,EAAOvN,QAAU,I,kBCCjB,SAASmO,EAAOrP,IACb,SAAWA,GAMVA,EAAMC,UAAN,MAA2B,CACzBC,QAAS,CACPE,QAAS,aAEXD,OAAQ,CACNC,QAAS,UACTC,QAAQ,GAEV,iBAAkB,CAChBD,QAAS,mBACTI,MAAO,UAET,iBAAkB,CAChBJ,QAAS,OACTI,MAAO,aAETK,OAAQ,MACRQ,SAAU,sCACVP,YAAa,QACbL,SAAU,QACV,eAAgB,CACdL,QAAS,eACTI,MAAO,SA5BZ,CA+BER,GAnCLe,EAAOC,QAAUqO,EACjBA,EAAOpO,YAAc,SACrBoO,EAAOnO,QAAU,I,kBCCjB,SAASoO,EAAuBtP,GAC9BA,EAAMC,UAAU,4BAA8BD,EAAMC,UAAU+B,OAC5D,QACA,CACE9B,QAAS,SACTQ,QACE,oEACFW,SAAU,kDAGPrB,EAAMC,UAAU,4BAA4B,cACnDD,EAAMC,UAAUgC,aAAa,2BAA4B,UAAW,CAClEoM,KAAM,CACJjO,QACE,gGACFG,YAAY,EACZF,QAAQ,EACRe,OAAQ,CACNX,SAAU,CACRL,QAAS,yDACTgB,OAAQ,CACNC,SAAU,IACVX,QAAS,OACTI,YAAa,aAGjBA,YAAa,OAGjByO,OAAQ,CAENnP,QAAS,kDACTG,YAAY,EACZC,MAAO,UACPY,OAAQ,CACNN,YAAa,QAtCrBC,EAAOC,QAAUsO,EACjBA,EAAuBrO,YAAc,yBACrCqO,EAAuBpO,QAAU,I,kBCCjC,SAASsO,EAAKxP,IACX,SAAWA,GACVA,EAAMC,UAAUuP,KAAOxP,EAAMC,UAAU+B,OAAO,aAAc,IAC5DhC,EAAMC,UAAUgC,aAAa,OAAQ,UAAW,CAC9C0J,KAAM,CACJ,CACEvL,QACE,sEACFI,MAAO,UAIbR,EAAMC,UAAUuP,KAAK,qBAAqBpP,QACxC,8KACKJ,EAAMC,UAAUuP,KAAhB,UACPxP,EAAMC,UAAUgC,aAAa,OAAQ,WAAY,CAC/C,mBAAoB,CAClB7B,QAAS,YACTI,MAAO,iBAGNiP,MAAMC,QAAQ1P,EAAMC,UAAUuP,KAAK9O,WACtCV,EAAMC,UAAUuP,KAAK9O,QAAU,CAACV,EAAMC,UAAUuP,KAAK9O,UAEvDV,EAAMC,UAAUuP,KAAK9O,QAAQiP,QAC3B,CACEvP,QAAS,kDACTG,YAAY,GAEd,CACEH,QACE,wGACFG,YAAY,IA/BjB,CAkCEP,GAtCLe,EAAOC,QAAUwO,EACjBA,EAAKvO,YAAc,OACnBuO,EAAKtO,QAAU,I,kBCCf,SAAS0O,EAAQ5P,GACfA,EAAMC,UAAU2P,QAAU,CACxB,gBAAiB,CACfxP,QAAS,0BACTI,MAAO,UAETL,OAAQ,CACNC,QACE,gGACFgB,OAAQ,CACNlB,QAAS,CACPE,QAAS,wBACTG,YAAY,KAIlBL,QAAS,CACPE,QAAS,MACTC,QAAQ,GAEVO,QAAS,+BACTC,OAAQ,yDACRH,QAAS,CAEP,oEACA,gIACA,4VACA,+JAEFW,SAAU,CACR,qDACA,CAEEjB,QAAS,sBACTG,YAAY,IAGhBO,YAAa,sBAxCjBC,EAAOC,QAAU4O,EACjBA,EAAQ3O,YAAc,UACtB2O,EAAQ1O,QAAU,I,kBCClB,SAAS2O,EAAO7P,GACdA,EAAMC,UAAU4P,OAAS7P,EAAMC,UAAU+B,OAAO,QAAS,CACvD9B,QAAS,CACP,CACEE,QAAS,kCACTG,YAAY,GAEd,CACEH,QAAS,mBACTG,YAAY,IAGhBJ,OAAQ,CACNC,QACE,wIACFC,QAAQ,GAEV,aAAc,CACZD,QACE,yHACFG,YAAY,EACZa,OAAQ,CACNC,SAAU,QACVP,YAAa,OAGjBJ,QACE,ooBACFG,OAAQ,CACN,iCACA,uBACA,oDACA,kCAEFQ,SACE,6GAEJrB,EAAMC,UAAUgC,aAAa,SAAU,UAAW,CAChDyD,aAAc,CACZtF,QAAS,gBACTG,YAAY,EACZC,MAAO,WACPY,OAAQ,CACNd,UAAW,CACTF,QAAS,8CACTG,YAAY,EACZC,MAAO,eAKfR,EAAMC,UAAUgC,aAAa,SAAU,cAAe,CACpD,yBAA0B,CACxB7B,QAAS,wBACTI,MAAO,aAGXR,EAAMC,UAAUgC,aAAa,SAAU,SAAU,CAC/CO,WAAY,CACVpC,QAAS,YACTgB,OAAQ,CACNN,YAAa,YACb,aAAc,CACZV,QAAS,+BACTG,YAAY,GAEd,qBAAsB,CACpBH,QAAS,UACTgB,OAAQpB,EAAMC,UAAU4P,YAvElC9O,EAAOC,QAAU6O,EACjBA,EAAO5O,YAAc,SACrB4O,EAAO3O,QAAU,I,sBCHjB,IAAI+J,EAA4B9H,EAAQ,OAIxC,SAAS2M,EAAI9P,GACXA,EAAMqD,SAAS4H,GACd,SAAWjL,GAMV,IAHA,IAAI+P,EACF,iGACGnN,OACIC,EAAI,EAAGA,EAAI,EAAGA,IACrBkN,EAAWA,EAASjN,QAAQ,WAAW,WACrC,OAAOiN,KAGXA,EAAWA,EAASjN,QAAQ,UAAW,UAAUF,QACjD,IAAIkN,EAAM,CACR5P,QAAS,kBACTC,OAAQ,CACN,CAEEC,QAAS,iCACTC,QAAQ,GAEV,CACED,QAAS2C,OACP,+DAA+DH,OAAOE,QACpE,WACA,WACE,OAAOiN,MAIb1P,QAAQ,EACRe,OAAQ,CACNK,cAAe,CACbrB,QAAS2C,OACP,oDAAoDH,OAAOE,QACzD,WACA,WACE,OAAOiN,MAIbxP,YAAY,EACZa,OAAQ,CACN,4BAA6B,CAC3BhB,QAAS,YACTI,MAAO,eAETkD,KAAM,UAMhBhD,QAAS,aACTE,QAAS,qBACT,mBAAoB,CAClBR,QAAS,uBACTG,YAAY,EACZC,MAAO,YAETG,SAAU,iBACVE,OAAQ,oBACRQ,SACE,4EACFP,YAAa,iBAEfgP,EAAI3P,OAAO,GAAGiB,OAAOK,cAAcL,OAAOsC,KAAOoM,EACjD9P,EAAMC,UAAU6P,IAAM,CACpB,cAAe,CAEb1P,QAAS,eACTI,MAAO,WAET,gBAAiB,CACfJ,QAAS,cACTgB,OAAQ,CACNd,UAAW,CACTF,QAAS,uBACTG,YAAY,EACZC,MAAO,WAETM,YAAa,cACbkP,QAAS,CACP5P,QAAS,eACTI,MAAO,MACPY,OAAQ0O,KAId,oBAAqB,CACnB1P,QAAS,kBACTgB,OAAQ,CACNN,YAAa,YACbkP,QAAS,CACP5P,QAAS,eACTI,MAAO,MACPY,OAAQ0O,MAKhB9P,EAAMqL,MAAMC,IAAI,mBAAmB,SAAUrB,GAE3C,IAAI7J,EAAU2C,OACZ,mEAAmEH,OAAOE,QACxE,WACA,WACE,OAAOiN,KAGX,MAEF/P,EAAMC,UAAU,qBAAqBsL,kBACnCtB,EACA,MACA7J,MAGJJ,EAAMqL,MAAMC,IAAI,kBAAkB,SAAUrB,GAC1CjK,EAAMC,UAAU,qBAAqBuL,qBAAqBvB,EAAK,UAtHlE,CAwHEjK,GA7HLe,EAAOC,QAAU8O,EACjBA,EAAI7O,YAAc,MAClB6O,EAAI5O,QAAU,I,kBCCd,SAAS+O,EAAIjQ,GAGXA,EAAMC,UAAUgQ,IAAM,CACpBC,MAAO,CACL9P,QAAS,sCACTC,QAAQ,EACRe,OAAQ,CACN6O,IAAK,CACH7P,QAAS,0CACTG,YAAY,EACZa,OAAQ,MAEVN,YAAa,UAGjBZ,QAAS,CACPE,QAAS,MACTC,QAAQ,GAEVF,OAAQ,CACNC,QACE,sFACFG,YAAY,EACZF,QAAQ,EACRe,OAAQ,CACN+O,aAAc,CACZ/P,QAAS,YACTG,YAAY,EACZC,MAAO,iBAIbE,QACE,wMACFE,QAAS,qBACTD,SAAU,wBACVE,OAAQ,CACNT,QACE,uFACFG,YAAY,GAEd4P,aAAc,CACZ/P,QAAS,YACTG,YAAY,EACZC,MAAO,eAETa,SAAU,kCACVP,YAAa,iBAEfd,EAAMC,UAAUgQ,IAAIC,MAAM9O,OAAO6O,IAAI7O,OAASpB,EAAMC,UAAUgQ,IArDhElP,EAAOC,QAAUiP,EACjBA,EAAIhP,YAAc,MAClBgP,EAAI/O,QAAU,I,kBCCd,SAASkP,EAAMpQ,GACbA,EAAMC,UAAUmQ,MAAQ,CACtBlQ,QAAS,kBACTC,OAAQ,CACNC,QAAS,iBACTC,QAAQ,GAEVK,QAAS,wBACTgB,SAAU,UACV2O,SAAU,CACRjQ,QAAS,QACTI,MAAO,eAGTM,YAAa,KAjBjBC,EAAOC,QAAUoP,EACjBA,EAAMnP,YAAc,QACpBmP,EAAMlP,QAAU,I,kBCChB,SAASoP,EAAStQ,GAChBA,EAAMC,UAAUqQ,SAAW,CACzBpQ,QAAS,MACTC,OAAQ,CACNC,QACE,6EACFC,QAAQ,GAEV,aAAc,CAMZD,QACE,6IACFG,YAAY,GAEdG,QACE,4QACFC,SAAU,2BACVF,SAAU,QACVI,OAAQ,CACN,4FACA,0BAEF8M,SAAU,qBACV/M,QAAS,qBACTS,SAAU,2CACVP,YAAa,iBAhCjBC,EAAOC,QAAUsP,EACjBA,EAASrP,YAAc,WACvBqP,EAASpP,QAAU,I,iBCCnB,SAASqP,EAAOvQ,GACdA,EAAMC,UAAUsQ,OAAS,CACvB,aAAc,CAEZnQ,QACE,mFACFG,YAAY,EACZa,OAAQ,CACNoP,QAAS,CACPpQ,QAAS,yDACTI,MAAO,cAIbsI,IAAK,CAEH1I,QACE,gFACFG,YAAY,EACZC,MAAO,UAETsB,MAAO,CACL1B,QAAS,gBACTG,YAAY,EACZC,MAAO,UAETgQ,QAAS,CACPpQ,QAAS,uDACTI,MAAO,aA/BbO,EAAOC,QAAUuP,EACjBA,EAAOtP,YAAc,SACrBsP,EAAOrP,QAAU,I,kBCCjB,SAASuP,EAAQzQ,IACd,SAAWA,GACV,IAAI0Q,EAAW,uCAAuC9N,OACtD5C,EAAMC,UAAUwQ,QAAU,CACxBE,SAAU,CACRvQ,QAAS,sBACTI,MAAO,UAETN,QAAS,CACPE,QAAS,gBACTG,YAAY,GAEduI,IAAK,CACH1I,QAAS,iBACTG,YAAY,GAEdqQ,QAAS,CACPxQ,QACE,6vEACFG,YAAY,EACZa,OAAQ,CACNwH,UAAW,CACTxI,QAAS,cACTG,YAAY,GAEdG,QAAS,eAGbmQ,SAAU,CACRzQ,QACE,89NACFG,YAAY,EACZa,OAAQ,CACNwH,UAAW,CACTxI,QAAS,cACTG,YAAY,GAEdG,QAAS,eAGb,aAAc,CAEZN,QAAS2C,OAAO,IAAM2N,EAAW,OAASA,EAAW,MACrDnQ,YAAY,EACZa,OAAQ,CACN0P,QAAS,CACP1Q,QAAS,UACTI,MAAO,YAETuQ,GAAI,CACF3Q,QAAS,iBACTI,MAAO,UAETM,YAAa,OAGjB,aAAc,CACZV,QAAS2C,OAAO2N,GAChBtP,OAAQ,CACN4P,GAAI,CACF5Q,QAAS,iBACTI,MAAO,YAETM,YAAa,OAGjB2H,OAAQ,CACNrI,QACE,mtKACFG,YAAY,GAEdJ,OAAQ,CACNC,QAAS,8CACTgB,OAAQ,CACN0P,QAAS,CACP1Q,QAAS,UACTI,MAAO,cAIbsQ,QAAS,CACP1Q,QAAS,UACTI,MAAO,aAjFZ,CAoFER,GAxFLe,EAAOC,QAAUyP,EACjBA,EAAQxP,YAAc,UACtBwP,EAAQvP,QAAU,I,kBCClB,SAAS+P,EAAIjR,GACXA,EAAMC,UAAUgR,IAAM,CAUpB/Q,QAAS,QAITgR,QAAS,gBACTtP,SAAU,SAIVzB,OAAQ,mCAMRgR,QAAS,CACP/Q,QAAS,iBACTgB,OAAQ,CAONgQ,UAAW,cAgBf/G,MAAO,YAWP,cAAe,oBAjEnBtJ,EAAOC,QAAUiQ,EACjBA,EAAIhQ,YAAc,MAClBgQ,EAAI/P,QAAU,I,sBCHd,IAAIgC,EAAaC,EAAQ,OAIzB,SAASkO,EAAKrR,GACZA,EAAMqD,SAASH,GACflD,EAAMC,UAAUoR,KAAOrR,EAAMC,UAAU+B,OAAO,IAAK,CACjDtB,QACE,ghCAPNK,EAAOC,QAAUqQ,EACjBA,EAAKpQ,YAAc,OACnBoQ,EAAKnQ,QAAU,I,kBCCf,SAASoQ,EAAItR,GACXA,EAAMC,UAAUsR,kBAAoBvR,EAAMC,UAAUqR,IAClDtR,EAAMC,UAAU+B,OAAO,QAAS,CAC9BtB,QACE,8GACFG,OACE,wEACFQ,SACE,mFACFsM,SACE,s5LACFlN,SACE,6rDAfRM,EAAOC,QAAUsQ,EACjBA,EAAIrQ,YAAc,MAClBqQ,EAAIpQ,QAAU,I,kBCCd,SAASsQ,EAAGxR,GAEVA,EAAMC,UAAUuR,GAAK,CACnBtR,QAAS,CACPE,QAAS,MACTC,QAAQ,GAEV,iBAAkB,CAChBD,QAAS,kCACTG,YAAY,EACZF,QAAQ,EACRe,OAAQ,CACNK,cAAe,CACbrB,QACE,0EACFG,YAAY,EACZa,OAAQ,CACNP,OAAQ,kBACRJ,SAAU,UACV,4BAA6B,CAC3BL,QAAS,YACTI,MAAO,eAETgG,WAAY,CACVpG,QAAS,UACTgB,OAAQ,QAIdjB,OAAQ,YAGZO,QAAS,kBACTE,QAAS,qBACT,mBAAoB,CAElBR,QACE,mFACFI,MAAO,WAETG,SAAU,wBACVgN,SACE,kLACF9M,OAAQ,YACRQ,SAAU,qBACVP,YAAa,eAEfd,EAAMC,UAAUuR,GAAG,kBAAkBpQ,OAArC,cAA6DA,OAA7D,WAEEA,OAASpB,EAAMC,UAAUuR,GAC3BxR,EAAMC,UAAUwR,IAAMzR,EAAMC,UAAUuR,GArDxCzQ,EAAOC,QAAUwQ,EACjBA,EAAGvQ,YAAc,KACjBuQ,EAAGtQ,QAAU,CAAC,Q,kBCCd,SAASwQ,EAAG1R,GACVA,EAAMC,UAAUyR,GAAK1R,EAAMC,UAAU+B,OAAO,QAAS,CACnD7B,OAAQ,CACNC,QAAS,qCACTC,QAAQ,GAEVK,QACE,sKACFE,QAAS,gCACTC,OAAQ,gEACRQ,SACE,wFACF8I,QACE,oMAEGnK,EAAMC,UAAUyR,GAAG,cAlB5B3Q,EAAOC,QAAU0Q,EACjBA,EAAGzQ,YAAc,KACjByQ,EAAGxQ,QAAU,I,kBCCb,SAASyQ,EAAQ3R,GACfA,EAAMC,UAAU0R,QAAU,CACxBzR,QAAS,MACT0R,YAAa,CACXxR,QACE,mEACFC,QAAQ,EACRG,MAAO,SACPY,OAAQ,CACN,oBAAqB,CACnBhB,QAAS,kCACTG,YAAY,EACZa,OAAQpB,EAAMC,UAAU4R,YAI9B1R,OAAQ,CACNC,QAAS,iDACTC,QAAQ,GAEVQ,OAAQ,2CACRD,QAAS,qBACTH,SAAU,eACVH,UAAW,CACTF,QAAS,cACTI,MAAO,YAET,YAAa,CACXJ,QAAS,+DACTC,QAAQ,GAEV,aAAc,CACZD,QAAS,0BACTI,MAAO,cAETsR,OAAQ,sCACRnE,SAAU,qBACV,aAAc,CACZvN,QACE,kFACFG,YAAY,GAEdwR,SAAU,CACR3R,QAAS,+CACTG,YAAY,EACZC,MAAO,YAET,sBAAuB,CACrBJ,QAAS,8BACTG,YAAY,EACZC,MAAO,YAET,mBAAoB,CAClBJ,QAAS,2BACTG,YAAY,EACZC,MAAO,YAETE,QACE,uIACFW,SAAU,eACV,iBAAkB,eAClB2Q,OAAQ,eACRlR,YAAa,iBACbY,SAAU,OAEZ1B,EAAMqL,MAAMC,IAAI,kBAAkB,SAA8BrB,GAC9D,GAAqB,YAAjBA,EAAIgI,SAwFR,IA/EA,IAAIC,EAAcjI,EAAIkI,OAAOhH,QAAO,SAAUiH,GAC5C,MACmB,kBAAVA,GACQ,YAAfA,EAAMzG,MACS,WAAfyG,EAAMzG,QAGN0G,EAAe,EAwEZA,EAAeH,EAAYI,QAAU,CAC1C,IAAIC,EAAaL,EAAYG,KAC7B,GAAwB,YAApBE,EAAW5G,MAA6C,aAAvB4G,EAAWvC,QAAwB,CAEtE,IAAIwC,EAAiB,GACrB,GACEC,EAAY,CAAC,sBAAuB,iBACZ,MAAxBC,EAAS,GAAG1C,QACZ,CAEAqC,GAAgB,EAChB,IAAIM,EAAgBC,EAAmB,OAAQ,QAC/C,IAAuB,IAAnBD,EACF,SAEF,KAAON,EAAeM,EAAeN,IAAgB,CACnD,IAAIQ,EAAIH,EAAS,GACF,aAAXG,EAAElH,OACJmH,EAASD,EAAG,kBACZL,EAAe3H,KAAKgI,EAAE7C,UAG1BqC,EAAeM,EAAgB,EAEjC,GACEF,EAAY,CAAC,cAAe,oBACJ,MAAxBC,EAAS,GAAG1C,UAEZqC,IACAS,EAASJ,EAAS,GAAI,qBAClBF,EAAeF,OAAS,GAAG,CAC7B,IAAIS,EAAcH,EAAmB,OAAQ,QAC7C,IAAqB,IAAjBG,EACF,SAEF,IAAK,IAAIlQ,EAAIwP,EAAcxP,EAAIkQ,EAAalQ,IAAK,CAC/C,IAAImQ,EAAWd,EAAYrP,GAEP,aAAlBmQ,EAASrH,MACT6G,EAAeS,QAAQD,EAAShD,UAAY,GAE5C8C,EAASE,EAAU,qBA1G/B,SAASN,EAASQ,GAChB,OAAOhB,EAAYG,EAAea,GASpC,SAAST,EAAYU,EAAOD,GAC1BA,EAASA,GAAU,EACnB,IAAK,IAAIrQ,EAAI,EAAGA,EAAIsQ,EAAMb,OAAQzP,IAAK,CACrC,IAAIuP,EAAQM,EAAS7P,EAAIqQ,GACzB,IAAKd,GAASA,EAAMzG,OAASwH,EAAMtQ,GACjC,OAAO,EAGX,OAAO,EAaT,SAAS+P,EAAmBQ,EAAMC,GAEhC,IADA,IAAIC,EAAc,EACTzQ,EAAIwP,EAAcxP,EAAIqP,EAAYI,OAAQzP,IAAK,CACtD,IAAIuP,EAAQF,EAAYrP,GACpBmN,EAAUoC,EAAMpC,QACpB,GAAmB,gBAAfoC,EAAMzG,MAA6C,kBAAZqE,EACzC,GAAIoD,EAAKxI,KAAKoF,GACZsD,SACK,GAAID,EAAMzI,KAAKoF,IAEA,MADpBsD,EAEE,OAAOzQ,EAKf,OAAQ,EASV,SAASiQ,EAASV,EAAO5R,GACvB,IAAIU,EAAUkR,EAAM5R,MACfU,EAEOuO,MAAMC,QAAQxO,KACxBkR,EAAM5R,MAAQU,EAAU,CAACA,IAFzBkR,EAAM5R,MAAQU,EAAU,GAI1BA,EAAQ2J,KAAKrK,OA3JnBO,EAAOC,QAAU2Q,EACjBA,EAAQ1Q,YAAc,UACtB0Q,EAAQzQ,QAAU,I,kBCClB,SAASqS,EAAOvT,GACdA,EAAMC,UAAUsT,OAASvT,EAAMC,UAAU+B,OAAO,QAAS,CACvD7B,OAAQ,CACN,CAEEC,QACE,kFACFC,QAAQ,GAEV,CAGED,QAAS,oCACTC,QAAQ,IAGZK,QACE,6WACFG,OACE,6FACFQ,SAAU,CACRjB,QACE,oJACFG,YAAY,GAEdO,YAAa,sBAEfd,EAAMC,UAAUgC,aAAa,SAAU,SAAU,CAC/CuR,QAAS,CACPpT,QAAS,OACTI,MAAO,aAGXR,EAAMC,UAAUgC,aAAa,SAAU,cAAe,CACpD,cAAe,0DAEjBjC,EAAMC,UAAUgC,aAAa,SAAU,WAAY,CACjDO,WAAY,CACVpC,QAAS,eACTG,YAAY,EACZC,MAAO,iBAGXR,EAAMqL,MAAMC,IAAI,QAAQ,SAAUrB,GAChC,GAAqB,WAAjBA,EAAIgI,UAAsC,WAAbhI,EAAI0B,KAAmB,CACtD,IAAIzJ,EAAY+H,EAAI+F,QAAQvI,MAAM,GAClC,GAAiB,KAAbvF,EAAkB,CACpB,IAAI9B,EAAU,kCACI,MAAd8B,IACF9B,EAAU,mCAEZ6J,EAAI+F,QAAQvI,MAAQwC,EAAI+F,QAAQvI,MAC7B3E,QAAQ,QAAS,KACjBA,QAAQ,SAAU,KACrBmH,EAAI+F,QAAUhQ,EAAMyT,UAAUxJ,EAAI+F,QAAQvI,MAAO,CAC/CjB,WAAY,CACVpG,QAASA,EACTG,YAAY,EACZa,OAAQpB,EAAMC,UAAUsT,UAG5BtJ,EAAIyJ,QAAQ7I,KAAmB,MAAd3I,EAAoB,QAAU,gBAhEvDnB,EAAOC,QAAUuS,EACjBA,EAAOtS,YAAc,SACrBsS,EAAOrS,QAAU,I,sBCHjB,IAAIsC,EAAgBL,EAAQ,OAI5B,SAASwQ,EAAK3T,GACZA,EAAMqD,SAASG,GAOd,SAAWxD,GACVA,EAAMC,UAAU0T,KAAO,CAErB,oBAAqB,CACnBvT,QACE,gEACFG,YAAY,EACZC,MAAO,WAET,iBAAkB,CAChB,CACEJ,QACE,6GACFG,YAAY,EACZa,OAAQpB,EAAMC,UAAU2T,MAE1B,CACExT,QACE,sFACFG,YAAY,EACZa,OAAQpB,EAAMC,UAAU2T,OAI5BzI,OAAQ,CACN/K,QACE,iFACFG,YAAY,EACZa,OAAQ,CACN,cAAe,CACbhB,QAAS,WACTI,MAAO,cAIbqI,OAAQ,CACNzI,QAAS,4BACTG,YAAY,EACZa,OAAQpB,EAAMC,UAAU4I,QAE1BgL,QAAS,CACPzT,QAAS,oCACTG,YAAY,GAEduI,IAAK,CAEH1I,QACE,sGACFG,YAAY,EACZa,OAAQ,CACN0S,WAAY,CACV,CAGE1T,QAAS,mCACTG,YAAY,EACZa,OAAQpB,EAAMC,UAAU2T,MAE1B,CACExT,QAAS,YACTgB,OAAQ,CACN,aAAc,CACZhB,QAAS,0CACTG,YAAY,GAEd,YAAa,4BACbO,YAAa,WAGjB,CACEV,QAAS,aACTgB,OAAQpB,EAAMC,UAAU2T,OAG5B9S,YAAa,SAGjBiT,KAAM,CACJ3T,QAAS,0CACTG,YAAY,EACZa,OAAQpB,EAAMC,UAAU2T,MAG1BnS,cAAe,CACbrB,QAAS,aACTgB,OAAQ,CACNc,UAAW,CACT9B,QAAS,WACTI,MAAO,eAETkD,KAAM1D,EAAMC,UAAU2T,OAG1B9S,YAAa,CACXV,QAAS,kCACTG,YAAY,IAoBhB,IAjBA,IAEIyT,EAAU,CACZ,MACA,CACE7I,OAAQ,SACR8G,SAAU,gBAEZ,MACA,aACA,OACA,WACA,OACA,OACA,WAEEgC,EAAc,GACTpR,EAAI,EAAGqR,EAAIF,EAAQ1B,OAAQzP,EAAIqR,EAAGrR,IAAK,CAC9C,IAAIsI,EAAS6I,EAAQnR,GACrBsI,EACoB,kBAAXA,EACH,CACEA,OAAQA,EACR8G,SAAU9G,GAEZA,EACFnL,EAAMC,UAAUkL,EAAO8G,YACzBgC,EAAY,UAAY9I,EAAOA,QAAU,CACvC/K,QAAS2C,OA3Bb,uGA4BqBD,QAAQ,mBAAmB,WACxC,OAAOqI,EAAOA,WAGlB5K,YAAY,EACZa,OAAQ,CACN,cAAe,CACbhB,QAAS,WACTI,MAAO,YAETkD,KAAM1D,EAAMC,UAAUkL,EAAO8G,aAKrCjS,EAAMC,UAAUgC,aAAa,OAAQ,SAAUgS,GA9IhD,CA+IEjU,GA1JLe,EAAOC,QAAU2S,EACjBA,EAAK1S,YAAc,OACnB0S,EAAKzS,QAAU,I,sBCHf,IAAI+J,EAA4B9H,EAAQ,OAIxC,SAASgR,EAAWnU,GAClBA,EAAMqD,SAAS4H,GACd,SAAWjL,GACVA,EAAMC,UAAUkU,WAAa,CAC3BjU,QAAS,oBACTgC,UAAW,CACT9B,QAAS,qBACTI,MAAO,eAETL,OAAQ,mCACRU,OAAQ,iEACRD,QAAS,qBACT2G,MAAO,CACLnH,QAAS,gDACTG,YAAY,EACZC,MAAO,WAET4T,SAAU,CACRhU,QAAS,aACTgB,OAAQ,CACNN,YAAa,QACbL,SAAU,YAGdK,YAAa,qCACbL,SAAU,wCAEZT,EAAMqL,MAAMC,IAAI,mBAAmB,SAAUrB,GAE3CjK,EAAMC,UAAU,qBAAqBsL,kBACnCtB,EACA,aAHsB,6CAO1BjK,EAAMqL,MAAMC,IAAI,kBAAkB,SAAUrB,GAC1CjK,EAAMC,UAAU,qBAAqBuL,qBACnCvB,EACA,iBAGJjK,EAAMC,UAAUoU,IAAMrU,EAAMC,UAAUkU,WAvCvC,CAwCEnU,GA7CLe,EAAOC,QAAUmT,EACjBA,EAAWlT,YAAc,aACzBkT,EAAWjT,QAAU,CAAC,Q,kBCCtB,SAASoT,EAAQtU,GACfA,EAAMC,UAAUqU,QAAU,CACxBpU,QAAS,CACPE,QACE,4FACFG,YAAY,GAEd0M,KAAM,CACJ7M,QACE,sMACFI,MAAO,UAETL,OAAQ,CACNC,QAAS,+BACTC,QAAQ,GAEVK,QACE,wHACF,mBAAoB,CAIlBN,QACE,sIACFG,YAAY,EACZa,OAAQ,CACNV,QAAS,qCACTI,YAAa,OAIjBqJ,QACE,yoDAEFtJ,OAAQ,4DACRQ,SAAU,CACR,CAEEjB,QAAS,mCACTC,QAAQ,GAEV,CAEED,QAAS,eACTG,YAAY,GAQd,gFAGFmN,UAAW,CACTtN,QAAS,mCACTgB,OAAQ,CACNN,YAAa,OAGjB6M,SAAU,CACRvN,QAAS,kCACTgB,OAAQ,CACNN,YAAa,OAGjBA,YAAa,iBAEfd,EAAMC,UAAUsU,GAAKvU,EAAMC,UAAUqU,QAxEvCvT,EAAOC,QAAUsT,EACjBA,EAAQrT,YAAc,UACtBqT,EAAQpT,QAAU,CAAC,O,iBCCnB,SAASsT,EAAKxU,GACZA,EAAMC,UAAUuU,KAAOxU,EAAMC,UAAU+B,OAAO,QAAS,CAErD7B,OAAQ,CACNC,QAAS,oCACTC,QAAQ,EACRe,OAAQ,CACNK,cAAe,CACbrB,QAAS,+BACTG,YAAY,EACZa,OAAQ,CACNK,cAAe,CACbrB,QAAS,SACTI,MAAO,gBAOjBE,QACE,wRACFW,SAAU,+DAEZrB,EAAMC,UAAUgC,aAAa,OAAQ,aAAc,CACjD2H,MAAO,CACLxJ,QAAS,oCACTC,QAAQ,KAGZL,EAAMC,UAAUgC,aAAa,OAAQ,UAAW,CAC9CyD,aAAc,CACZtF,QAAS,OACTI,MAAO,WAETgJ,SAAU,CACRpJ,QAAS,SACTI,MAAO,UAETiU,YAAa,CACXrU,QAAS,mBACTI,MAAO,cAGXR,EAAMC,UAAUuU,KAAhB,OAA+BpT,OAA/B,cAAuDA,OAAOsC,KAC5D1D,EAAMC,UAAUuU,YACXxU,EAAMC,UAAUuU,KAAK,cAjD9BzT,EAAOC,QAAUwT,EACjBA,EAAKvT,YAAc,OACnBuT,EAAKtT,QAAU,I,kBCCf,SAASwT,EAAI1U,GACXA,EAAMC,UAAUyU,IAAM,CACpBxU,QAAS,sCACTyU,QAAS,CACPvU,QAAS,gCACTC,QAAQ,EACRG,MAAO,UAETE,QAAS,CACP,CACEN,QACE,sEACFgB,OAAQ,CACNuK,KAAM,CACJvL,QAAS,iDACTG,YAAY,EACZC,MAAO,cAIb,CACEJ,QACE,wGACFgB,OAAQ,CACNuK,KAAM,CACJvL,QACE,gGACFG,YAAY,EACZC,MAAO,cAIb,mBAEFkB,SAAU,CAAC,wBAAyB,qCACpCvB,OAAQ,CACNC,QACE,gGACFC,QAAQ,EACRe,OAAQ,CACNK,cAAe,CACbrB,QAAS,mDACTG,YAAY,EACZa,OAAQ,CACNuK,KAAM,CACJvL,QACE,sEACFG,YAAY,EACZC,MAAO,YAETE,QAAS,2DACTC,SAAU,YACVR,OAAQ,CACNC,QAAS,yBACTC,QAAQ,GAEVQ,OAAQ,gDACRC,YAAa,2CAKrBD,OAAQ,gDACRD,QAAS,sBACTE,YAAa,aAnEjBC,EAAOC,QAAU0T,EACjBA,EAAIzT,YAAc,MAClByT,EAAIxT,QAAU,I,sBCHd,IAAIgC,EAAaC,EAAQ,OAIzB,SAASyR,EAAK5U,GACZA,EAAMqD,SAASH,GACflD,EAAMC,UAAU2U,KAAO5U,EAAMC,UAAU+B,OAAO,IAAK,CAKjD,aAAc,CACZhC,EAAMC,UAAU4U,EAAE,cAClB,wgBAEFnU,QAAS,CAEP,gyBACA,gHAGFG,OACE,gFACFD,QAAS,uBAtBbG,EAAOC,QAAU4T,EACjBA,EAAK3T,YAAc,OACnB2T,EAAK1T,QAAU,I,kBCCf,SAAS4T,EAAK9U,GACZA,EAAMC,UAAU6U,KAAO,CACrBnH,SAAU,qBACVzN,QAAS,CACPE,QAAS,OACTC,QAAQ,GAEV,aAAc,CACZ,CACED,QAAS,kCAEX,MAEFO,SAAU,kDACVR,OAAQ,CACNC,QAAS,kBACTC,QAAQ,GAEVK,QACE,gOAtBNK,EAAOC,QAAU8T,EACjBA,EAAK7T,YAAc,OACnB6T,EAAK5T,QAAU,I,kBCCf,SAAS6T,EAAK/U,GAMZA,EAAMC,UAAU8U,KAAO,CACrBzU,UAAW,CACTF,QACE,mHACFI,MAAO,WAEToH,KAAM,CACJxH,QAAS,aACTI,MAAO,YAETqH,OAAQ,CACNzH,QAAS,cACTI,MAAO,aArBbO,EAAOC,QAAU+T,EACjBA,EAAK9T,YAAc,OACnB8T,EAAK7T,QAAU,I,kBCCf,SAAS8T,EAAKhV,GAMZA,EAAMC,UAAU+U,KAAO,CACrB1U,UAAW,CACTF,QAAS,2CACTI,MAAO,WAEToH,KAAM,CACJxH,QAAS,aACTI,MAAO,YAETqH,OAAQ,CACNzH,QAAS,cACTI,MAAO,aApBbO,EAAOC,QAAUgU,EACjBA,EAAK/T,YAAc,OACnB+T,EAAK9T,QAAU,I,kBCCf,SAAS+T,EAAKjV,IACX,SAAWA,GACVA,EAAMC,UAAUgV,KAAO,CACrB,eAAgB,CACd7U,QACE,8GACFgB,OAAQ,CAENmO,OAAQ,CACNnP,QAAS,YACTI,MAAO,YAGT,iBAAkB,CAChBJ,QAAS,mCACTG,YAAY,EACZC,MAAO,MACPY,OAAQpB,EAAMC,UAAUiV,KAG1B,eAAgB,CACd9U,QAAS,qBACTG,YAAY,EACZC,MAAO,cAIb,kBAAmB,CACjBJ,QAAS,yBACTgB,OAAQ,CAEN,eAAgB,CACdhB,QAAS,iBACTI,MAAO,YAGT,cAAe,CACbJ,QAAS,iBACTG,YAAY,EACZC,MAAO,UAGT,gBAAiB,CACfJ,QAAS,UACTG,YAAY,EACZC,MAAO,YAKb,cAAe,CACbJ,QAAS,iBACTI,MAAO,YAGX,IAyBI2L,EAzBAgJ,EAAQnV,EAAMC,UACdmV,EAAgB,CAClB,yBAA0BD,EAAM/S,WAChC,mBAAoB+S,EAAME,MAAQF,EAAM/S,WACxC,kBAAmB+S,EAAMG,IACzB,WAAYH,EAAMG,IAClB,YAAaH,EAAM7N,KACnB,WAAY6N,EAAMnN,KAEhBuN,EAAc,CAChB,oBAAoB,EACpB,mBAAmB,GAQrB,SAASC,EAAiBC,GACxB,IAAIC,EAASD,EAAY3S,QAAQ,YAAa,IAE9C,MAAO,MAAQ2S,EAAc,KADT,wBAA0BC,EAAS,gBACJ,IAIrD,IAAK,IAAID,KAAeL,EACtB,GAAIA,EAAcK,GAAc,CAC9BtJ,EAAUA,GAAW,GACrB,IAAI/L,EAAUmV,EAAYE,GACtBD,EAAiBC,GACjBA,EACJtJ,EAAQsJ,EAAY3S,QAAQ,MAAO,MAAQ,CACzC1C,QAAS2C,OACP,qBACE3C,EACA,qDACF,KAEFG,YAAY,EACZa,OAAQgU,EAAcK,IAIxBtJ,GACFnM,EAAMC,UAAUgC,aAAa,OAAQ,cAAekK,GAnGvD,CAqGEnM,GAzGLe,EAAOC,QAAUiU,EACjBA,EAAKhU,YAAc,OACnBgU,EAAK/T,QAAU,I,kBCCf,SAASyU,EAAU3V,GAGjBA,EAAMC,UAAU0V,UAAY,CAC1BzV,QAAS,2BACTC,OAAQ,CACNC,QAAS,0CACTC,QAAQ,GAEVQ,OAAQ,mEACRH,QACE,mSACFC,SACE,sIACFqJ,MAAO,cACP3I,SAAU,wDACVP,YAAa,eAnBjBC,EAAOC,QAAU2U,EACjBA,EAAU1U,YAAc,YACxB0U,EAAUzU,QAAU,I,kBCCpB,SAAS0U,EAAK5V,GACZA,EAAMC,UAAU2V,KAAO,CACrB1V,QAAS,MACTC,OAAQ,CACNC,QAAS,2DACTC,QAAQ,GAEVQ,OAAQ,4DACR,kBAAmB,CACjBT,QACE,kRACFI,MAAO,YAETF,UAAW,CACTF,QAAS,QACTI,MAAO,WAETE,QACE,mLACFC,SAAU,mCACVU,SACE,8GACFP,YAAa,gBAzBjBC,EAAOC,QAAU4U,EACjBA,EAAK3U,YAAc,OACnB2U,EAAK1U,QAAU,I,kBCCf,SAAS2U,EAAiB7V,IAGvB,SAAWA,GAMV,SAASkE,EAAOtB,EAAQd,GACtB,OAAIA,GAAS,EACJ,KAAKc,OAELA,EAAOE,QAAQ,WAAW,WAC/B,OAAOoB,EAAOtB,EAAQd,EAAQ,MAIpC,IAAIgU,EAAgB,6BAChBhH,EAAS,CACX1O,QAAS,KACTC,QAAQ,EACRG,MAAO,YAELL,EAAS,CACXC,QAAS0V,EACTzV,QAAQ,EACRe,OAAQ,CACN0N,OAAQA,IAGRiH,EAAiB7R,EACnB,8CAA8CtB,OAAOE,QACnD,UACA,WACE,OAAOgT,EAAclT,UAGzB,GAEEoT,EAAgB,CAClB5V,QAAS2C,OAAOgT,GAChB3U,OAAQ,CACN6U,QAAS,CACP7V,QAAS,sBACTG,YAAY,EACZa,OAAQ,MAEV,oBAAqB,CACnBhB,QAAS,IACTI,MAAO,iBAIbR,EAAMC,UAAU,sBAAwB,CACtCsN,SAAU,CACRnN,QAAS2C,OAAOgT,GAChB1V,QAAQ,EACRe,OAAQ,CACN4O,QAAS,CACP5P,QAAS,sBACTG,YAAY,EACZa,OAAQ,CACN,gBAAiB,CACfhB,QAAS,oBACTG,YAAY,GAEd,eAAgB,CAEdH,QAAS,0CACTG,YAAY,EACZa,OAAQ,CACNN,YAAa,KACb2E,MAAO,CACLrF,QAAS,mDACTG,YAAY,EACZa,OAAQ,CACNC,SAAU,aACVR,OAAQ,QAGZ6C,KAAM,OAGV,eAAgB,CAEdtD,QACE,4DACFG,YAAY,EACZa,OAAQ,CACN8R,OAAQ,iBACR,iBAAkB8C,EAClB/N,SAAU,CACR7H,QAAS,mBACTgB,OAAQ,CACNV,QAAS,wCAKjB,eAAgB,CAEdN,QAAS,0CACTG,YAAY,EACZa,OAAQ,CACN,iBAAkB4U,EAClB/N,SAAU,CACR7H,QAAS,cACTgB,OAAQ,CACNV,QAAS,cAKjBA,QAAS,6CACT,WAAY,CACVN,QAAS,qDACTI,MAAO,WAET,eAAgB,CACdJ,QAAS,sBACTG,YAAY,GAEd,YAAa,CACXH,QACE,oEACFG,YAAY,GAEd,iBAAkB,CAChBH,QAAS2C,OACP,mBAAmBH,OACjBsB,EAAO,sCAAsCtB,OAAQ,GACrD,KAEJrC,YAAY,EACZC,MAAO,UAETM,YAAa,MAGjB,qBAAsB,CACpBV,QAAS,IACTI,MAAO,cAIbsO,OAAQA,EACR3O,OAAQA,GAEV6V,EAAc5U,OAAO6U,QAAQ7U,OAASpB,EAAMC,UAAU,sBACtDD,EAAMC,UAAU,sBAAsBsN,SAASnM,OAAO4O,QAAQ5O,OAC5D,gBACAA,OAAOsC,KAAO1D,EAAMC,UAAU,sBArJjC,CAsJED,GA5JLe,EAAOC,QAAU6U,EACjBA,EAAiB5U,YAAc,mBAC/B4U,EAAiB3U,QAAU,I,sBCH3B,IAAIgV,EAAmB/S,EAAQ,OAI/B,SAASgT,EAAMnW,GACbA,EAAMqD,SAAS6S,GACflW,EAAMC,UAAUkW,MAAQnW,EAAMC,UAAU+B,OAAO,UAAW,CACxD9B,QAAS,CACPE,QAAS,wCAEXM,QACE,kTACF,mBAAoB,CAClBN,QAAS,oDACTG,YAAY,GAEd4J,aAASiM,IAEXpW,EAAMC,UAAUoW,IAAMrW,EAAMC,UAAUkW,MAjBxCpV,EAAOC,QAAUmV,EACjBA,EAAMlV,YAAc,QACpBkV,EAAMjV,QAAU,CAAC,Q,kBCCjB,SAASoV,EAAMtW,GACbA,EAAMC,UAAUqW,MAAQ,CACtBpW,QAAS,CACP,CACEE,QACE,gFACFG,YAAY,GAEd,CACEH,QAAS,mBACTG,YAAY,EACZF,QAAQ,IAGZF,OAAQ,CACNC,QAAS,iDACTC,QAAQ,GAEV,aACE,yPACFK,QACE,qPACFD,SACE,+HACFc,OAAQ,kCACRV,OACE,oIACFD,QAAS,0BACTD,SAAU,YACVU,SACE,uFACFP,YAAa,QACb6K,KAAM,CACJvL,QAAS,IACTI,MAAO,aArCbO,EAAOC,QAAUsV,EACjBA,EAAMrV,YAAc,QACpBqV,EAAMpV,QAAU,I,kBCChB,SAASqV,EAAOvW,IACb,SAAWA,GACVA,EAAMC,UAAUsW,OAAS,CAEvBrW,QAAS,QACTsW,MAAO,CACLpW,QAAS,0BACTI,MAAO,SACPY,OAAQ,CACNC,SAAU,cACVuI,MAAO,CACLxJ,QAAS,wBACTG,YAAY,GAEdO,YAAa,QAInBd,EAAMC,UAAUwW,UAAYzW,EAAMC,UAAUsW,OAC5CvW,EAAMC,UAAUyW,SAAW1W,EAAMC,UAAUsW,OAC3CvW,EAAMC,UAAU0W,UAAY3W,EAAMC,UAAUsW,OAnB7C,CAoBEvW,GAxBLe,EAAOC,QAAUuV,EACjBA,EAAOtV,YAAc,SACrBsV,EAAOrV,QAAU,CAAC,YAAa,WAAY,c,kBCC3C,SAAS0V,EAAQ5W,GACfA,EAAMC,UAAU2W,QAAU,CACxBzW,OAAQ,CACNC,QAAS,UACTgB,OAAQ,CACNyV,aAAc,CACZzW,QAAS,eACTgB,OAAQ,CACNc,UAAW,CACT9B,QAAS,QACTI,MAAO,mBAMjBN,QAAS,CACPE,QAAS,eACTC,QAAQ,GAEVyW,MAAO,CACL1W,QAAS,iEACTI,MAAO,aAETK,OAAQ,CACNT,QACE,mIACFG,YAAY,GAEdwW,KAAM,CACJ3W,QACE,ovBACFG,YAAY,EACZC,MAAO,YAETE,QAAS,CACPN,QACE,iVACFG,YAAY,GAEdmB,SAAU,CACRtB,QACE,4tBACFG,YAAY,EACZC,MAAO,UAETwW,SAAU,CACR5W,QACE,yQACFG,YAAY,EACZC,MAAO,WAETmL,KAAM,CACJvL,QACE,kWACFG,YAAY,EACZC,MAAO,YAETM,YAAa,cAEfd,EAAMC,UAAU2W,QAAhB,OAAkCxV,OAAlC,aAAyDA,OAAOsC,KAC9D1D,EAAMC,UAAU2W,QAClB5W,EAAMC,UAAU2W,QAAhB,OAAkCxV,OAAlC,aAAyDA,OAAOsC,KAAKuT,KAAO,CAC1E7W,QAAS,eACTI,MAAO,WAnEXO,EAAOC,QAAU4V,EACjBA,EAAQ3V,YAAc,UACtB2V,EAAQ1V,QAAU,I,kBCClB,SAASgW,EAAIlX,GACXA,EAAMC,UAAUiX,IAAM,CAMpBhX,QAAS,CACPE,QAAS,6BACTG,YAAY,GAEd4W,OAAQ,CACN/W,QAAS,gCACTG,YAAY,EACZa,OAAQ,CACN,eAAgB,CACdhB,QAAS,2DACTG,YAAY,EACZC,MAAO,YAETM,YAAa,UAGjBsW,IAAK,CACHhX,QACE,+EACFG,YAAY,EACZC,MAAO,aAETiH,MAAO,CACLrH,QAAS,6DACTG,YAAY,EACZC,MAAO,aACPY,OAAQ,CACN,cAAe,CACbhB,QAAS,kBACTG,YAAY,KAIlBO,YAAa,KA3CjBC,EAAOC,QAAUkW,EACjBA,EAAIjW,YAAc,MAClBiW,EAAIhW,QAAU,I,kBCCd,SAASmW,EAAGrX,GACVA,EAAMC,UAAUoX,GAAK,CACnBnX,QAAS,CACP,CACEE,QAAS,kCACTG,YAAY,GAEd,CACEH,QAAS,kBACTG,YAAY,GAEd,CACEH,QAAS,eACTG,YAAY,IAGhB,uBAAwB,CACtBH,QAAS,mCACTC,QAAQ,EACRG,MAAO,UAETL,OAAQ,CACNC,QAAS,wBACTC,QAAQ,GAEVK,QACE,6kBACFyJ,QACE,imBACFvJ,QAAS,yBACTC,OAAQ,yDACRQ,SACE,8GACFP,YAAa,iBApCjBC,EAAOC,QAAUqW,EACjBA,EAAGpW,YAAc,KACjBoW,EAAGnW,QAAU,I,kBCCb,SAASoW,EAAEtX,GACTA,EAAMC,UAAUqX,EAAI,CAClBpX,QAAS,WACTC,OAAQ,CACNC,QAAS,qBACTC,QAAQ,GAEVK,QACE,mNACFqW,KAAM,CAGJ3W,QACE,8IACFI,MAAO,WAETK,OACE,4GACF0W,OAAQ,CACNnX,QAAS,+BACTI,MAAO,WAETa,SAAU,eACVmW,YAAa,CACXpX,QAAS,0DACTI,MAAO,YAETM,YAAa,QA9BjBC,EAAOC,QAAUsW,EACjBA,EAAErW,YAAc,IAChBqW,EAAEpW,QAAU,I,kBCCZ,SAASuW,EAAKzX,IACX,SAAWA,GACV,IAAIyE,EACF,idACEiT,EAAkB,uDACnB9U,OACC2G,EAAY,CACdnJ,QAAS2C,OAAO2U,EAAkB,gCAAgC9U,QAClErC,YAAY,EACZa,OAAQ,CACNO,UAAW,CACTvB,QAAS,2CACTgB,OAAQ,CACNN,YAAa,OAGjBA,YAAa,OAGjBd,EAAMC,UAAUwX,KAAOzX,EAAMC,UAAU+B,OAAO,QAAS,CACrD,aAAc,CACZuH,EACA,CAGEnJ,QAAS2C,OACP2U,EAAkB,+BAA+B9U,QAEnDrC,YAAY,EACZa,OAAQmI,EAAUnI,SAGtBV,QAAS+D,EACT9D,SAAU,CACRX,EAAMC,UAAUkB,MAAMR,SACtB,CACEP,QAAS,mBACTG,YAAY,IAGhBM,OACE,8IACFQ,SAAU,CACRjB,QACE,wEACFG,YAAY,KAGhBP,EAAMC,UAAUgC,aAAa,OAAQ,SAAU,CAC7C,uBAAwB,CAEtB7B,QAAS,iDACTC,QAAQ,EACRG,MAAO,YAGXR,EAAMC,UAAUgC,aAAa,OAAQ,aAAc,CACjDO,WAAY,CACVpC,QAAS,+BACTG,YAAY,EACZC,MAAO,eAETiJ,SAAU,CACRrJ,QACE,kGACFgB,OAAQ,CACN,aAAcmI,EACd7I,QAAS+D,EACT3D,YAAa,YACbO,SAAU,UAGdM,UAAW,CACTvB,QAAS2C,OACP,qJAAqJH,OAAOE,QAC1J,cACA,WACE,OAAO2B,EAAS7B,WAItBrC,YAAY,EACZa,OAAQ,CACNN,YAAa,SAlFpB,CAsFEd,GA1FLe,EAAOC,QAAUyW,EACjBA,EAAKxW,YAAc,OACnBwW,EAAKvW,QAAU,I,sBCHf,IAAIyW,EAAgBxU,EAAQ,OACxByU,EAAuBzU,EAAQ,OAInC,SAAS0U,EAAQ7X,GACfA,EAAMqD,SAASsU,GACf3X,EAAMqD,SAASuU,GACd,SAAW5X,GACV,IAAI8X,EAAkB,oCAClBC,EAAkB,4BAA4BnV,OAC9CsL,EACF,0DAA0DtL,OAAOE,QAC/D,UACA,WACE,OAAOiV,KAGb/X,EAAMC,UAAU4X,QAAU7X,EAAMC,UAAU+B,OAAO,cAAe,IAChEhC,EAAMC,UAAUgC,aAAa,UAAW,UAAW,CACjDiM,UAAW,CACT9N,QAAS2C,OACP,gEACGH,OACD,MACAsL,EACA,KAEJ3N,YAAY,EACZa,OAAQ,CACNT,SAAU,CACRP,QAAS,qBACTG,YAAY,GAEdyX,MAAO,CACL5X,QAAS,YACTG,YAAY,GAEdoB,UAAW,CACTvB,QAAS,0BACTgB,OAAQ,CACNN,YAAa,OAGjB,aAAc,aACdJ,QAASV,EAAMC,UAAUwX,KAAK/W,QAC9BI,YAAa,eAGjB,aAAc,CAEZV,QAAS,wBACTG,YAAY,EACZa,OAAQ,CACNN,YAAa,UAGjB,eAAgB,CACd,CACEV,QACE,+GACFG,YAAY,EACZa,OAAQ,CACN2S,KAAM,CAEJ3T,QAAS0X,EACTvX,YAAY,EACZa,OAAQpB,EAAMC,UAAUwX,KACxBjX,MAAO,mBAIb,CACEJ,QACE,8DACFG,YAAY,EACZa,OAAQ,CACN2J,KAAM,CACJ3K,QAAS0X,EACTvX,YAAY,EACZa,OAAQ,CAEN0H,IAAK9I,EAAMC,UAAU4I,OAAOC,IAC5BN,OAAQxI,EAAMC,UAAU4I,OAAOL,OAC/BuL,KAAM,CAEJ3T,QAAS,KACTgB,OAAQpB,EAAMC,UAAUwX,KACxBjX,MAAO,sBAOnBsI,IAAK9I,EAAMC,UAAU4I,OAAOC,IAC5BN,OAAQxI,EAAMC,UAAU4I,OAAOL,SAEjCxI,EAAMC,UAAUgY,YAAYC,WAAW,OAAQlY,EAAMC,UAAU4X,SA1FhE,CA2FE7X,GAjGLe,EAAOC,QAAU6W,EACjBA,EAAQ5W,YAAc,UACtB4W,EAAQ3W,QAAU,I,kBCAlB,SAAS+W,EAAYjY,IAClB,SAAWA,GACV,IAAImY,EAAenY,EAAMC,UAAUgY,YAAc,CAC/C7G,UAAW,CACThR,QACE,iEACFG,YAAY,GAEdG,QAAS,CAGPN,QAAS,wDACTG,YAAY,GAEdO,YAAa,QAgEf0J,OAAOQ,eAAemN,EAAa,aAAc,CAC/C1Q,MAdF,SAAoBxH,EAAWmY,GACJ,kBAAdnY,IACTA,EAAY,CAACA,IAEfA,EAAUyK,SAAQ,SAAU2N,IA/C9B,SAA2BA,EAAMC,GAC/B,IAAIC,EAAY,cACZC,EAAUxY,EAAMC,UAAUoY,GAC9B,GAAKG,EAAL,CAGA,IAAIpG,EAAQoG,EAAQD,GACpB,IAAKnG,EAAO,CAEV,IAAIvF,EAAa,CACjBA,cAAwB,CACtBzM,QAAS,wCACTG,YAAY,EACZC,MAAO,YAGT4R,GADAoG,EAAUxY,EAAMC,UAAUgC,aAAaoW,EAAM,UAAWxL,IACxC0L,GAQlB,GANInG,aAAiBrP,SAEnBqP,EAAQoG,EAAQD,GAAa,CAC3BnY,QAASgS,IAGT3C,MAAMC,QAAQ0C,GAChB,IAAK,IAAIvP,EAAI,EAAGqR,EAAI9B,EAAME,OAAQzP,EAAIqR,EAAGrR,IACnCuP,EAAMvP,aAAcE,SACtBqP,EAAMvP,GAAK,CACTzC,QAASgS,EAAMvP,KAGnByV,EAASlG,EAAMvP,SAGjByV,EAASlG,IAcTqG,CAAkBJ,GAAM,SAAUjY,GAC3BA,EAAQgB,SACXhB,EAAQgB,OAAS,IAEnBhB,EAAQgB,OAAOsC,KAAO0U,WAO5BD,EAAYD,WAAW,CAAC,OAAQ,aAAc,OAAQC,GAhFvD,CAiFEnY,GArFLe,EAAOC,QAAUiX,EACjBA,EAAYhX,YAAc,cAC1BgX,EAAY/W,QAAU,I,kBCCtB,SAASkB,EAAWpC,GAClBA,EAAMC,UAAUmC,WAAapC,EAAMC,UAAU+B,OAAO,QAAS,CAC3D,aAAc,CACZhC,EAAMC,UAAUkB,MAAM,cACtB,CACEf,QACE,0GACFG,YAAY,IAGhBG,QAAS,CACP,CACEN,QAAS,uBACTG,YAAY,GAEd,CACEH,QACE,mdACFG,YAAY,IAIhBI,SACE,oGACFE,OACE,gOACFQ,SACE,8FAEJrB,EAAMC,UAAUmC,WAAW,cAAc,GAAGhC,QAC1C,uEACFJ,EAAMC,UAAUgC,aAAa,aAAc,UAAW,CACpD2H,MAAO,CAELxJ,QACE,yLACFG,YAAY,EACZF,QAAQ,EACRe,OAAQ,CACN,eAAgB,CACdhB,QAAS,4BACTG,YAAY,EACZC,MAAO,iBACPY,OAAQpB,EAAMC,UAAU2J,OAE1B,kBAAmB,UACnB,cAAe,aAInB,oBAAqB,CACnBxJ,QACE,gMACFI,MAAO,YAET4Q,UAAW,CACT,CACEhR,QACE,sIACFG,YAAY,EACZa,OAAQpB,EAAMC,UAAUmC,YAE1B,CACEhC,QACE,qFACFG,YAAY,EACZa,OAAQpB,EAAMC,UAAUmC,YAE1B,CACEhC,QACE,kEACFG,YAAY,EACZa,OAAQpB,EAAMC,UAAUmC,YAE1B,CACEhC,QACE,8eACFG,YAAY,EACZa,OAAQpB,EAAMC,UAAUmC,aAG5BuL,SAAU,8BAEZ3N,EAAMC,UAAUgC,aAAa,aAAc,SAAU,CACnDyW,SAAU,CACRtY,QAAS,QACTC,QAAQ,EACRG,MAAO,WAET,kBAAmB,CACjBJ,QACE,2EACFC,QAAQ,EACRe,OAAQ,CACN,uBAAwB,CACtBhB,QAAS,QACTI,MAAO,UAETiB,cAAe,CACbrB,QACE,mEACFG,YAAY,EACZa,OAAQ,CACN,4BAA6B,CAC3BhB,QAAS,YACTI,MAAO,eAETkD,KAAM1D,EAAMC,UAAUmC,aAG1BjC,OAAQ,cAIVH,EAAMC,UAAU4I,SAClB7I,EAAMC,UAAU4I,OAAOC,IAAIC,WAAW,SAAU,cAEhD/I,EAAMC,UAAU4I,OAAOC,IAAIE,aACzB,yNACGpG,OACH,eAGJ5C,EAAMC,UAAU0Y,GAAK3Y,EAAMC,UAAUmC,WA9HvCrB,EAAOC,QAAUoB,EACjBA,EAAWnB,YAAc,aACzBmB,EAAWlB,QAAU,CAAC,O,kBCCtB,SAAS0X,EAAe5Y,GAGtBA,EAAMC,UAAU2Y,eAAiB,CAM/BC,QAAS,CACPzY,QACE,4FACFgB,OAAQ,CACNV,QAAS,CACPN,QACE,+DACFG,YAAY,GAGdJ,OAAQ,CACNC,QAAS,gBACTG,YAAY,GAEduY,WAAY,CACV1Y,QAAS,yBACTG,YAAY,EACZa,OAAQ,CACN,aAAc,gBACdO,UAAW,WACXb,YAAa,SAGjBmV,QAAS,CACP7V,QAAS,aACTG,YAAY,EACZC,MAAO,UAETM,YAAa,MAwBjB,cAAe,CACbV,QAAS,4DACTgB,OAAQ,CACNV,QAAS,CACPN,QAAS,gBACTG,YAAY,GAEdqC,OAAQ,CAGN,CACExC,QAAS,yBACTG,YAAY,EACZa,OAAQ,CACNgN,KAAM,YACNtN,YAAa,IACb,cAAe,CACbV,QAAS,MACTI,MAAO,YAMb,CACEJ,QAAS,mBACTG,YAAY,EACZa,OAAQ,CACNV,QAAS,wCAIf,aAAc,kCACdC,SAAU,0BACV,eAAgB,CACdP,QAAS,8CACTG,YAAY,EACZC,MAAO,YACPY,OAAQ,CACNN,YAAa,OAGjBC,OAAQ,CACNX,QAAS,sDACTG,YAAY,EACZa,OAAQ,CACN2X,QAAS,CACP3Y,QAAS,aACTG,YAAY,EACZC,MAAO,UAETM,YAAa,SAGjBa,UAAW,CACTvB,QAAS,kBACTgB,OAAQ,CACNN,YAAa,OAGjBA,YAAa,WAKjBkY,KAAM,CACJ5Y,QAAS,uCACTgB,OAAQ,CACNN,YAAa,QACbD,OAAQ,MACRH,QAAS,4BAtIjBK,EAAOC,QAAU4X,EACjBA,EAAe3X,YAAc,iBAC7B2X,EAAe1X,QAAU,I,kBCCzB,SAAS+X,EAAKjZ,GACZA,EAAMC,UAAUgZ,KAAO,CACrB9Y,OAAQ,oCACR+Y,UAAW,CACT9Y,QACE,4JACFI,MAAO,WACPD,YAAY,GAEdI,SACE,8JACFE,OAAQ,8BACRQ,SAAU,yCACVT,QAAS,qBACTF,QAAS,SACTI,YAAa,eAlBjBC,EAAOC,QAAUiY,EACjBA,EAAKhY,YAAc,OACnBgY,EAAK/X,QAAU,I,kBCCf,SAASiY,EAAMnZ,GACbA,EAAMC,UAAUkZ,MAAQnZ,EAAMC,UAAU+B,OAAO,QAAS,CACtD7B,OAAQ,CACNC,QAAS,iDACTC,QAAQ,GAEVK,QACE,2cACFG,OAAQ,+CACRQ,SAAU,mDACVP,YAAa,OACbqJ,QACE,yEACF5I,OAAQ,iBAEHvB,EAAMC,UAAUkZ,MAAM,cAC7BnZ,EAAMC,UAAUgC,aAAa,QAAS,UAAW,CAC/CtB,SAAU,CACRP,QAAS,gEACTG,YAAY,GAEd6Y,WAAY,CACVhZ,QACE,8EACFG,YAAY,EACZa,OAAQ,CACN,iBAAkB,CAChBhB,QAAS,eACTgB,OAAQ,CACNV,QAAS,aAGbC,SAAU,CACRP,QAAS,OAEXU,YAAa,CACXV,QAAS,OAIfiZ,UAAW,CACTjZ,QACE,mEACFG,YAAY,EACZa,OAAQ,CACNN,YAAa,CACXV,QAAS,KAEXO,SAAU,CACRP,QAAS,OAEXmB,OAAQ,CACNnB,QAAS,UAvDnBW,EAAOC,QAAUmY,EACjBA,EAAMlY,YAAc,QACpBkY,EAAMjY,QAAU,I,kBCChB,SAASoY,EAAGtZ,IACT,SAAWA,GACV,IAAIyB,EAAgB,8BAA8BmB,OAC9CzC,EAAS4C,OACX,kCAAkCH,OAAOE,QAAQ,OAAO,WACtD,OAAOrB,MAGP8X,EAAsB,CACxB9X,cAAe,CACbrB,QAAS2C,OAAO,0BAA0BH,OAASnB,GACnDlB,YAAY,EACZa,OAAQ,CACN4O,QAAS,CACP5P,QAAS,wBACTG,YAAY,EACZa,OAAQ,MAEVN,YAAa,eAIfwY,EAAMtZ,EAAMC,UAAUqZ,GAAK,CAC7BpZ,QAAS,MACTwB,SAAU,CACRtB,QAAS2C,OAAO5C,EAAOyC,OAAS,gBAAgBA,QAChDvC,QAAQ,EACRe,OAAQmY,GAEVpZ,OAAQ,CACNC,QAASD,EACTE,QAAQ,EACRe,OAAQmY,GAEV5Y,SAAU,CACRP,QAAS,uBACTG,YAAY,GAEdE,SAAU,UACV,mBAAoB,CAClBL,QAAS,4BACTI,MAAO,YAETE,QACE,wHACFE,QAAS,qBACTC,OAAQ,4CACRQ,SAAU,CACR,CACEjB,QAAS,OACTI,MAAO,QAET,kEAEF,mBAAoB,CAClBJ,QAAS,wBACTI,MAAO,YAETM,YAAa,oCACbuL,IAAK,CACHjM,QAAS,KACTI,MAAO,cAGX+Y,EAAoB9X,cAAcL,OAAO4O,QAAQ5O,OAASkY,EA/D3D,CAgEEtZ,GApELe,EAAOC,QAAUsY,EACjBA,EAAGrY,YAAc,KACjBqY,EAAGpY,QAAU,I,kBCCb,SAASsY,EAASxZ,IACf,SAAWA,GA2CV,SAASyZ,EAAO7W,EAAQqB,GACtB,OAAOlB,OACLH,EAAOE,QAAQ,SAAS,WACtB,MAAO,yDAAyDF,UAElEqB,GA/CJjE,EAAMC,UAAUgC,aAAa,aAAc,oBAAqB,CAC9D,kBAAmB,CACjB7B,QAAS2C,OACP,YACE/C,EAAMC,UAAUmC,WAAW,qBAAqBhC,QAAQwC,QAE5DrC,YAAY,EACZC,MAAO,CAAC,oBAAqB,SAAU,WAAY,sBAGvDR,EAAMC,UAAUgC,aAAa,aAAc,WAAY,CACrDsN,OAAQ,CACNnP,QAAS2C,OACP,YAAc/C,EAAMC,UAAUmC,WAAhB,SAAuCQ,QAEvDrC,YAAY,EACZC,MAAO,CAAC,WAAY,sBAGxBR,EAAMC,UAAUgC,aAAa,aAAc,WAAY,CACrD,mBAAoB,CAClB,CAGE7B,QACE,yOACFI,MAAO,cAET,CAEEJ,QAAS,wBACTI,MAAO,iBAmBbR,EAAMC,UAAUgC,aAAa,aAAc,UAAW,CACpDyX,QAAS,CAEPtZ,QAASqZ,EACP,4GACG7W,QAELrC,YAAY,EACZa,OAAQpB,EAAMC,UAAUmC,YAE1BpB,QAAS,CAEPZ,QAASqZ,EACP,mEACG7W,QAELrC,YAAY,EACZa,OAAQpB,EAAMC,UAAUmC,cAG5BpC,EAAMC,UAAUmC,WAAhB,QAAsCuN,QACpC,CACEvP,QAAS,wCACTI,MAAO,UAET,CACEJ,QACE,gGACFI,MAAO,gBAET,CACEJ,QAAS,WACTI,MAAO,CAAC,OAAQ,QAElB,CACEJ,QAAS,gBACTI,MAAO,QAGXR,EAAMC,UAAUgC,aAAa,aAAc,WAAY,CACrD0X,OAAQ,CACNvZ,QAAS,QACTI,MAAO,YAEToZ,MAAO,CACLxZ,QAAS,KACTI,MAAO,cAGXR,EAAMC,UAAUgC,aAAa,aAAc,cAAe,CACxD,kBAAmB,CACjB7B,QAASqZ,EAAO,gBAAgB7W,QAChCrC,YAAY,GAEd,mBAAoB,CAClBH,QAAS,8CACTG,YAAY,GAEdsZ,IAAK,CAEHzZ,QACE,kFACFI,MAAO,YAETsZ,QAAS,CACP1Z,QAAS,qBACTI,MAAO,gBAUX,IAPA,IAAIuZ,EAAuB,CACzB,WACA,oBACA,SACA,kBACA,mBAEOlX,EAAI,EAAGA,EAAIkX,EAAqBzH,OAAQzP,IAAK,CACpD,IAAIuP,EAAQ2H,EAAqBlX,GAC7B4E,EAAQzH,EAAMC,UAAUmC,WAAWgQ,GACR,WAA3BpS,EAAMga,KAAKrO,KAAKlE,KAClBA,EAAQzH,EAAMC,UAAUmC,WAAWgQ,GAAS,CAC1ChS,QAASqH,IAGb,IAAIrG,EAASqG,EAAMrG,QAAU,GAC7BqG,EAAMrG,OAASA,EACfA,EAAO,oBAAsB,iBAzIhC,CA2IEpB,GA/ILe,EAAOC,QAAUwY,EACjBA,EAASvY,YAAc,WACvBuY,EAAStY,QAAU,I,kBCCnB,SAAS+Y,EAAYja,IAClB,SAAWA,GACV,IAAIka,EAAiBla,EAAMC,UAAUmC,WAAW,mBAC5C+X,EAAyBD,EAAe9Z,QAAQwC,OAChDwX,EAAsBF,EAAe9Y,OAAf,cACtBiZ,EACFD,EAAoBhZ,OAAO,6BACzBkZ,EAAuBF,EAAoBha,QAAQwC,OAYvD,SAAS2X,EAAetI,EAAUnJ,GAChC,GAAK9I,EAAMC,UAAUgS,GAGrB,MAAO,CACL7R,QAAS2C,OAAO,OAAS+F,EAAM,SAAWqR,GAC1C5Z,YAAY,EACZF,QAAQ,EACRe,OAAQ,CACN,uBAAwB,CACtBhB,QAAS,QACTI,MAAO,UAET,gBAAiB,CACfJ,QAAS,UACTI,MAAOyR,KAiCf,SAASuI,EAAeC,EAASxI,GAC/B,MAAO,MAAQA,EAASyI,cAAgB,IAAMD,EAAU,MAU1D,SAASE,EAAkB5G,EAAMyE,EAASvG,GACxC,IAAIhI,EAAM,CACR8J,KAAMA,EACNyE,QAASA,EACTvG,SAAUA,GAKZ,OAHAjS,EAAMqL,MAAMuP,IAAI,kBAAmB3Q,GACnCA,EAAIkI,OAASnS,EAAM6a,SAAS5Q,EAAI8J,KAAM9J,EAAIuO,SAC1CxY,EAAMqL,MAAMuP,IAAI,iBAAkB3Q,GAC3BA,EAAIkI,OAQb,SAAS2I,EAAgCtU,GACvC,IAAIuU,EAAc,GAClBA,EAAY,6BAA+BV,EAE3C,IAAIlI,EAASnS,EAAM6a,SAASrU,EAAYuU,GACxC,GAAsB,IAAlB5I,EAAOG,OAAc,CASvB,IAAI0I,EAAO,CAAC,EAAG,GACfA,EAAKnQ,KAAKoQ,MACRD,EACAL,EAAkBxI,EAAO,GAAInS,EAAMC,UAAUmC,WAAY,eAE3D+P,EAAO+I,OAAOD,MAAM9I,EAAQ6I,GAE9B,OAAO,IAAIhb,EAAMmb,MACf,gBACAhJ,EACAiI,EAAoB5Z,MACpBgG,GAoBJ,SAAS4U,EAAiBrH,EAAMyE,EAASvG,GAIvC,IAAIoJ,EAAUrb,EAAM6a,SAAS9G,EAAM,CACjCtS,cAAe,CACbrB,QAAS2C,OAAOuX,GAChB/Z,YAAY,KAGZ+a,EAAqB,EAErBC,EAAiB,GAoBjBC,EAAiBb,EAnBFU,EAChBnM,KAAI,SAAUkD,GACb,GAAqB,kBAAVA,EACT,OAAOA,EAIP,IAFA,IACIqJ,EADAC,EAA0BtJ,EAAMpC,SAK3B,IAFP+D,EAAKd,QACFwI,EAAcjB,EAAec,IAAsBrJ,MAMxD,OADAsJ,EAAeE,GAAeC,EACvBD,KAGVjU,KAAK,IAC6CgR,EAASvG,GAC1D0J,EAAenR,OAAOC,KAAK8Q,GAwD/B,OAvDAD,EAAqB,EAMrB,SAASM,EAAWzJ,GAClB,IAAK,IAAItP,EAAI,EAAGA,EAAIsP,EAAOG,OAAQzP,IAAK,CACtC,GAAIyY,GAAsBK,EAAarJ,OACrC,OAEF,IAAIF,EAAQD,EAAOtP,GACnB,GAAqB,kBAAVuP,GAA+C,kBAAlBA,EAAMpC,QAAsB,CAClE,IAAIyL,EAAcE,EAAaL,GAC3BO,EACe,kBAAVzJ,EACHA,EAEAA,EAAMpC,QACRjM,EAAQ8X,EAAE5I,QAAQwI,GACtB,IAAe,IAAX1X,EAAc,GACduX,EACF,IAAIQ,EAASD,EAAEE,UAAU,EAAGhY,GACxBiY,EAASlB,EACXS,EAAeE,IAEbQ,EAAQJ,EAAEE,UAAUhY,EAAQ0X,EAAYnJ,QACxC4J,EAAc,GAKlB,GAJIJ,GACFI,EAAYrR,KAAKiR,GAEnBI,EAAYrR,KAAKmR,GACbC,EAAO,CACT,IAAIE,EAAc,CAACF,GACnBL,EAAWO,GACXD,EAAYrR,KAAKoQ,MAAMiB,EAAaC,GAEjB,kBAAV/J,GACTD,EAAO+I,OAAOD,MAAM9I,EAAQ,CAACtP,EAAG,GAAGuZ,OAAOF,IAC1CrZ,GAAKqZ,EAAY5J,OAAS,GAE1BF,EAAMpC,QAAUkM,OAGf,CACL,IAAIlM,EAAUoC,EAAMpC,QAChBP,MAAMC,QAAQM,GAChB4L,EAAW5L,GAEX4L,EAAW,CAAC5L,MAKpB4L,CAAWJ,GACJ,IAAIxb,EAAMmb,MACflJ,EACAuJ,EACA,YAAcvJ,EACd8B,GAlMJ/T,EAAMC,UAAUmC,WAAW,mBAAqB,CAK9CmY,EACE,MACA,0HACG3X,QAGL2X,EAAe,OAAQ,yCAAyC3X,QAChE2X,EAAe,MAAO,QAAQ3X,QAC9B2X,EAAe,WAAY,oBAAoB3X,QAC/C2X,EACE,UACA,6CAA6C3X,QAE/C2X,EAAe,MAAO,QAAQ3X,QAC9BsX,GACA/O,OAAOkR,SAsLT,IAAIC,EAAqB,CACvBla,YAAY,EACZuW,IAAI,EACJ4D,YAAY,EACZC,IAAI,EACJC,KAAK,EACLC,KAAK,GAsEP,SAASC,EAAclV,GACrB,MAAqB,kBAAVA,EACFA,EACEgI,MAAMC,QAAQjI,GAChBA,EAAMyH,IAAIyN,GAAenV,KAAK,IAE9BmV,EAAclV,EAAMuI,SA1E/BhQ,EAAMqL,MAAMC,IAAI,kBAAkB,SAAUrB,GACpCA,EAAIgI,YAAYqK,GAStB,SAASM,EAAoBzK,GAC3B,IAAK,IAAItP,EAAI,EAAGqR,EAAI/B,EAAOG,OAAQzP,EAAIqR,EAAGrR,IAAK,CAC7C,IAAIuP,EAAQD,EAAOtP,GACnB,GAAqB,kBAAVuP,EAAX,CAGA,IAAIpC,EAAUoC,EAAMpC,QACpB,GAAKP,MAAMC,QAAQM,GAMnB,GAAmB,oBAAfoC,EAAMzG,KAA4B,CAepC,IAAIkR,EAAW7M,EAAQ,GACvB,GACqB,IAAnBA,EAAQsC,QACY,kBAAbuK,GACW,kBAAlBA,EAASlR,KACT,CAEA,IAAIoI,EAAO4I,EAAcE,GACrBrc,EAAQqc,EAASrc,MACjByR,EAAWxC,MAAMC,QAAQlP,GAASA,EAAM,GAAKA,EAC7CgY,EAAUxY,EAAMC,UAAUgS,GAC9B,IAAKuG,EAEH,SAEFxI,EAAQ,GAAKoL,EAAiBrH,EAAMyE,EAASvG,SAG/C2K,EAAoB5M,OAtCG,kBAAZA,GACT4M,EAAoB,CAAC5M,MAyC7B4M,CAAoB3S,EAAIkI,WApT3B,CAqUEnS,GAzULe,EAAOC,QAAUiZ,EACjBA,EAAYhZ,YAAc,cAC1BgZ,EAAY/Y,QAAU,I,sBCHtB,IAAI0W,EAAuBzU,EAAQ,OAC/B2Z,EAAsB3Z,EAAQ,OAIlC,SAAS4Z,EAAM/c,GACbA,EAAMqD,SAASuU,GACf5X,EAAMqD,SAASyZ,GACd,SAAW9c,GACV,IAAIoC,EAAapC,EAAMC,UAAUmC,WAC7BuJ,EAAO,2CAA2C/I,OAClDoa,EACF,2CAA6CrR,EAAO,UACtD3L,EAAMC,UAAU8c,MAAQ/c,EAAMC,UAAU+B,OAAO,cAAe,CAC5DoP,UAAW,CAEThR,QAAS2C,OACPia,EAAkB,uCAAuCpa,QAE3DrC,YAAY,EACZa,OAAQ,CACNN,YAAa,SAInBd,EAAMC,UAAUgC,aAAa,QAAS,UAAW,CAC/C,qBAAsB,CAEpB7B,QAAS2C,OACPia,EACE,wDAAwDpa,QAE5DrC,YAAY,EACZa,OAAQ,CACNgQ,UAAW,CACThR,QAAS,2BACTG,YAAY,EACZa,OAAQ,CACNN,YAAa,OAGjBiT,KAAM,CACJ3T,QAAS,oBACTG,YAAY,EACZa,OAAQgB,EACR5B,MAAO,uBAETM,YAAa,WAGjB,aAAc,CACZ,CACEV,QAAS2C,OACP,mHAAmHH,OAAOE,QACxH,WACA,WACE,OAAO6I,MAIbpL,YAAY,EACZa,OAAQ,CACNN,YAAa,OAGjB,CACEV,QAAS2C,OAAO,gBAAkB4I,GAClCpL,YAAY,EACZa,OAAQ,CACNjB,OAAQiC,EAAWjC,OACnBU,OAAQuB,EAAWvB,OACnBD,QAASwB,EAAWxB,QACpBF,QAASV,EAAMC,UAAUsc,WAAW7b,QACpCW,SAAU,oBACVP,YAAa,qBAInBmc,QAAS,CACP7c,QACE,yEACFG,YAAY,EACZa,OAAQ,CACN2S,KAAM,CACJ3T,QAAS,4BACTG,YAAY,EACZa,OAAQgB,EACR5B,MAAO,2BAKfR,EAAMC,UAAUgY,YAAYC,WAAW,aAAclY,EAAMC,UAAU8c,OApFtE,CAqFE/c,GA3FLe,EAAOC,QAAU+b,EACjBA,EAAM9b,YAAc,QACpB8b,EAAM7b,QAAU,I,kBCAhB,SAASmU,EAAKrV,GAEZA,EAAMC,UAAUoV,KAAO,CACrB3T,SAAU,CACRtB,QAAS,yCACTG,YAAY,EACZF,QAAQ,GAEVF,OAAQ,CACNC,QAAS,yCACTG,YAAY,EACZF,QAAQ,GAEVH,QAAS,CACPE,QAAS,gCACTC,QAAQ,GAEVQ,OAAQ,qCACRC,YAAa,WACbO,SAAU,IACVT,QAAS,qBACTsc,KAAM,CACJ9c,QAAS,WACTI,MAAO,YAGXR,EAAMC,UAAUkd,YAAcnd,EAAMC,UAAUoV,KA7BhDtU,EAAOC,QAAUqU,EACjBA,EAAKpU,YAAc,OACnBoU,EAAKnU,QAAU,CAAC,gB,sBCHhB,IAAIkc,EAAgBja,EAAQ,OAI5B,SAASka,EAAMrd,GACbA,EAAMqD,SAAS+Z,GACd,SAAWpd,GACV,IAAIG,EAAS,+CACbH,EAAMC,UAAUod,MAAQrd,EAAMC,UAAU+B,OAAO,OAAQ,CACrDN,SAAU,CACR,CACEtB,QAAS2C,OAAO5C,EAAOyC,OAAS,aAChCvC,QAAQ,GAEV,CACED,QACE,iEACFI,MAAO,aAGXL,OAAQ,CACNC,QAASD,EACTE,QAAQ,GAEVQ,OACE,gGAnBL,CAqBEb,GA1BLe,EAAOC,QAAUqc,EACjBA,EAAMpc,YAAc,QACpBoc,EAAMnc,QAAU,I,sBCHhB,IAAIkc,EAAgBja,EAAQ,OAI5B,SAASma,EAAMtd,GACbA,EAAMqD,SAAS+Z,GACfpd,EAAMC,UAAUqd,MAAQtd,EAAMC,UAAU+B,OAAO,OAAQ,CACrDlB,YAAa,iBAEfd,EAAMC,UAAUgC,aAAa,QAAS,cAAe,CACnDtB,SAAU,oEATdI,EAAOC,QAAUsc,EACjBA,EAAMrc,YAAc,QACpBqc,EAAMpc,QAAU,I,kBCChB,SAASqc,EAAavd,GACpBA,EAAMC,UAAUsd,aAAe,CAC7B,gBAAiB,CACfnd,QAAS,SACTI,MAAO,UAET,cAAe,CACbJ,QAAS,sBACTG,YAAY,EACZa,OAAQ,CACN,cAAe,CACbhB,QACE,+HACFI,MAAO,WAETgd,SAAU,CACRpd,QAAS,+CACTG,YAAY,EACZC,MAAO,OAETG,SAAU,CACRP,QACE,qEACFG,YAAY,EACZa,OAAQ,CACNN,YAAa,OAGjBA,YAAa,OACbJ,QAAS,iBACTF,MAAO,CACLJ,QAAS,6DACTI,MAAO,YAET,cAAe,CACbJ,QAAS,wBACTI,MAAO,SACPY,OAAQ,CACNN,YAAa,SAzCzBC,EAAOC,QAAUuc,EACjBA,EAAatc,YAAc,eAC3Bsc,EAAarc,QAAU,I,kBCCvB,SAASub,EAAIzc,IACV,SAAWA,GACV,IAAIoC,EAAapC,EAAMga,KAAKyD,MAAMzd,EAAMC,UAAUmC,YAC9C0J,EAAQ,+CAA+ClJ,OACvD8a,EAAS,+CAA+C9a,OACxD+W,EAAS,uCAAuC/W,OAKpD,SAASoB,EAAGpB,EAAQqB,GAWlB,OAVArB,EAASA,EACNE,QAAQ,QAAQ,WACf,OAAOgJ,KAERhJ,QAAQ,aAAa,WACpB,OAAO4a,KAER5a,QAAQ,aAAa,WACpB,OAAO6W,KAEJ5W,OAAOH,EAAQqB,GAExB0V,EAAS3V,EAAG2V,GAAQ/W,OACpB5C,EAAMC,UAAUwc,IAAMzc,EAAMC,UAAU+B,OAAO,SAAUI,GACvDpC,EAAMC,UAAUwc,IAAI3T,IAAI1I,QAAU4D,EAChC,wIACGpB,QAEL5C,EAAMC,UAAUwc,IAAI3T,IAAI1H,OAAxB,IAAsChB,QAAU,kBAChDJ,EAAMC,UAAUwc,IAAI3T,IAAI1H,OAAO,cAAchB,QAC3C,sEACFJ,EAAMC,UAAUwc,IAAI3T,IAAI1H,OAAxB,IAAsCA,OAAO,cAC3C,4BACFpB,EAAMC,UAAUwc,IAAI3T,IAAI1H,OAAxB,QAA4CgB,EAAU,QACtDpC,EAAMC,UAAUgC,aACd,SACA,YACA,CACE0X,OAAQ,CACNvZ,QAAS4D,EAAG,WAAWpB,QACvBxB,OAAQpB,EAAMC,UAAUwc,MAG5Bzc,EAAMC,UAAUwc,IAAI3T,KAEtB9I,EAAMC,UAAUgC,aACd,SACA,eACA,CACEE,OAAQ,CAEN/B,QAAS4D,EAAG,YAAYpB,QACxBxB,OAAQ,CACN,qBAAsB,CACpBhB,QAAS,WACTI,MAAO,eAETkD,KAAM1D,EAAMC,UAAUwc,KAExBjc,MAAO,wBAGXR,EAAMC,UAAUwc,IAAI3T,KAEtB,IAAI6U,EAAiB,SAAjBA,EAA2BvL,GAC7B,OAAKA,EAGgB,kBAAVA,EACFA,EAEoB,kBAAlBA,EAAMpC,QACRoC,EAAMpC,QAERoC,EAAMpC,QAAQd,IAAIyO,GAAgBnW,KAAK,IARrC,IAUPoU,EAAa,SAAbA,EAAuBzJ,GAEzB,IADA,IAAIyL,EAAa,GACR/a,EAAI,EAAGA,EAAIsP,EAAOG,OAAQzP,IAAK,CACtC,IAAIuP,EAAQD,EAAOtP,GACfgb,GAAiB,EAgDrB,GA/CqB,kBAAVzL,IAEQ,QAAfA,EAAMzG,MACNyG,EAAMpC,QAAQ,IACY,QAA1BoC,EAAMpC,QAAQ,GAAGrE,KAG2B,OAAxCyG,EAAMpC,QAAQ,GAAGA,QAAQ,GAAGA,QAG5B4N,EAAWtL,OAAS,GACpBsL,EAAWA,EAAWtL,OAAS,GAAGwL,UAChCH,EAAevL,EAAMpC,QAAQ,GAAGA,QAAQ,KAG1C4N,EAAWG,MAG2C,OAApD3L,EAAMpC,QAAQoC,EAAMpC,QAAQsC,OAAS,GAAGtC,SAI1C4N,EAAW/S,KAAK,CACdiT,QAASH,EAAevL,EAAMpC,QAAQ,GAAGA,QAAQ,IACjDgO,aAAc,IAKpBJ,EAAWtL,OAAS,GACL,gBAAfF,EAAMzG,MACY,MAAlByG,EAAMpC,QAGN4N,EAAWA,EAAWtL,OAAS,GAAG0L,eAElCJ,EAAWtL,OAAS,GACpBsL,EAAWA,EAAWtL,OAAS,GAAG0L,aAAe,GAClC,gBAAf5L,EAAMzG,MACY,MAAlByG,EAAMpC,QAGN4N,EAAWA,EAAWtL,OAAS,GAAG0L,eAElCH,GAAiB,IAGjBA,GAAmC,kBAAVzL,IAEzBwL,EAAWtL,OAAS,GAC+B,IAAnDsL,EAAWA,EAAWtL,OAAS,GAAG0L,aAClC,CAGA,IAAIC,EAAYN,EAAevL,GAE7BvP,EAAIsP,EAAOG,OAAS,IACM,kBAAlBH,EAAOtP,EAAI,IACM,eAAvBsP,EAAOtP,EAAI,GAAG8I,QAEhBsS,GAAaN,EAAexL,EAAOtP,EAAI,IACvCsP,EAAO+I,OAAOrY,EAAI,EAAG,IAGrBA,EAAI,IACsB,kBAAlBsP,EAAOtP,EAAI,IACM,eAAvBsP,EAAOtP,EAAI,GAAG8I,QAEhBsS,EAAYN,EAAexL,EAAOtP,EAAI,IAAMob,EAC5C9L,EAAO+I,OAAOrY,EAAI,EAAG,GACrBA,KAEFsP,EAAOtP,GAAK,IAAI7C,EAAMmb,MACpB,aACA8C,EACA,KACAA,GAIF7L,EAAMpC,SAAoC,kBAAlBoC,EAAMpC,SAChC4L,EAAWxJ,EAAMpC,WAIvBhQ,EAAMqL,MAAMC,IAAI,kBAAkB,SAAUrB,GACrB,QAAjBA,EAAIgI,UAAuC,QAAjBhI,EAAIgI,UAGlC2J,EAAW3R,EAAIkI,WA1KlB,CA4KEnS,GAhLLe,EAAOC,QAAUyb,EACjBA,EAAIxb,YAAc,MAClBwb,EAAIvb,QAAU,I,kBCCd,SAASgd,EAAMle,GACbA,EAAMC,UAAUie,MAAQ,CACtBhe,QAAS,CAGPE,QACE,6EACFG,YAAY,GAEdqJ,MAAO,CAELxJ,QAAS,oCACTC,QAAQ,GAEVF,OAAQ,CAKNC,QACE,oHACFG,YAAY,EACZF,QAAQ,GAEVK,QACE,6PACFE,QAAS,qBACTC,OACE,kIAGFQ,SACE,gIACFP,YAAa,oBAEb6M,SAAU,yDAtCd5M,EAAOC,QAAUkd,EACjBA,EAAMjd,YAAc,QACpBid,EAAMhd,QAAU,I,kBCChB,SAASid,EAAOne,GACdA,EAAMC,UAAUke,OAAS,CACvBje,QAAS,WACTS,SACE,qGAEFR,OAAQ,aACRie,KAAM,CAEJ,8TACA,+HAEF1d,QACE,+HAEF+H,OAAQ,6DAER5H,OAAQ,0CAERQ,SAAU,YACVyH,IAAK,mDAvBT/H,EAAOC,QAAUmd,EACjBA,EAAOld,YAAc,SACrBkd,EAAOjd,QAAU,I,kBCCjB,SAASmd,EAAOre,IACb,SAAWA,GACVA,EAAMC,UAAUoe,OAASre,EAAMC,UAAU+B,OAAO,QAAS,CACvDtB,QAAS,CAEPN,QACE,2bACFG,YAAY,GAEdI,SAAU,CACR,CACEP,QAAS,iCACTC,QAAQ,GAEV,CACED,QAAS,mCACTG,YAAY,EACZF,QAAQ,IAGZQ,OACE,kIACFQ,SACE,gHAEGrB,EAAMC,UAAUoe,OAAO,cAC9Bre,EAAMC,UAAUgC,aAAa,SAAU,SAAU,CAC/C,aAAc,CACZ7B,QAAS,sBACTI,MAAO,YAGXR,EAAMC,UAAUgC,aAAa,SAAU,UAAW,CAChDO,WAAY,CACVpC,QAAS,sCACTI,MAAO,aAGXR,EAAMC,UAAUgC,aAAa,SAAU,WAAY,CACjD+H,MAAO,CACL5J,QAAS,gBACTI,MAAO,YAGX,IAAIiB,EAAgB,CAClB,CACErB,QAAS,cACTgB,OAAQ,CACNc,UAAW,CACT9B,QAAS,YACTI,MAAO,YAETkD,KAAM1D,EAAMC,UAAUoe,SAG1B,CACEje,QAAS,QACTI,MAAO,aAGXR,EAAMC,UAAUoe,OAAhB,OAAiCjd,OAASpB,EAAMC,UAAUoe,OACxD,cACAjd,OAAS,CACTK,cAAeA,GAEjBzB,EAAMC,UAAUqe,GAAKte,EAAMC,UAAUoe,OACrCre,EAAMC,UAAUse,IAAMve,EAAMC,UAAUoe,OAjEvC,CAkEEre,GAtELe,EAAOC,QAAUqd,EACjBA,EAAOpd,YAAc,SACrBod,EAAOnd,QAAU,CAAC,KAAM,Q,kBCCxB,SAASsd,EAAMxe,IAEZ,SAAWA,GAMV,IAAIye,EAAQ,sDAAsD7b,OAQlE,SAAS8b,EAAOte,EAAS6D,GACvB,OAAOlB,OAAO3C,EAAQ0C,QAAQ,WAAY2b,GAAQxa,GAEpDjE,EAAMC,UAAUue,MAAQ,CACtBte,QAAS,CACPE,QAAS,QAEXue,OAAQ,CACNve,QAAS,MACTC,QAAQ,GAEVF,OAAQ,CACNC,QAAS,0BACTC,QAAQ,GAEVO,QAAS,CACPR,QAASse,EAAO,kEAAyC9b,QACzDrC,YAAY,GAEd,gBAAiB,CACfH,QAASse,EAAO,yEAA2C9b,QAC3DrC,YAAY,EACZC,MAAO,WAET,kBAAmB,CACjBJ,QAASse,EAAO,uDAAmC9b,QACnDrC,YAAY,EACZC,MAAO,WAETmL,KAAM,CACJ,CACEvL,QAASse,EACP,6JACG9b,QAELrC,YAAY,EACZC,MAAO,WAET,CACEJ,QAASse,EACP,8JAA0D9b,QAE5DrC,YAAY,EACZC,MAAO,cAQXE,QAAS,CACPN,QAASse,EACP,84BACG9b,QAELrC,YAAY,GAGdsE,KAAM,CAEJzE,QAASse,EACP,2EACG9b,QAELrC,YAAY,GAGdM,OAAQ,CACNT,QAASse,EACP,2FACG9b,OACH,KAEFrC,YAAY,GAGdO,YAAa,iBAMb,gBAAiB,CACfV,QAAS,0BACTI,MAAO,aAGXR,EAAMC,UAAU2e,IAAM5e,EAAMC,UAAUue,MAtGvC,CAuGExe,GA5GLe,EAAOC,QAAUwd,EACjBA,EAAMvd,YAAc,QACpBud,EAAMtd,QAAU,CAAC,Q,kBCCjB,SAAS2d,EAAM7e,GACbA,EAAMC,UAAU4e,MAAQ,CACtB3e,QAAS,CACPE,QAAS,SACTC,QAAQ,GAEVF,OAAQ,CACNC,QACE,mGACFC,QAAQ,GAEV0W,KAAM,CACJ3W,QAAS,sBACTG,YAAY,EACZC,MAAO,WAET2Q,QAAS,CACP/Q,QAAS,qBACTI,MAAO,WAET,aACE,2EACFE,QACE,ibACFE,QAAS,0BACTD,SAAU,uBACVme,SAAU,CACR,CAEE1e,QACE,2QACFI,MAAO,UAET,CAEEJ,QACE,2GACFI,MAAO,WAGXK,OACE,uHACFQ,SAAU,kCACVP,YAAa,kBA9CjBC,EAAOC,QAAU6d,EACjBA,EAAM5d,YAAc,QACpB4d,EAAM3d,QAAU,I,kBCChB,SAAS6d,EAAM/e,IACZ,SAAWA,GACV,IAAIgf,EAAc,6BACdC,EAAY,CACd,mBAAoB,CAClB7e,QAAS4e,EACTxe,MAAO,UAGXR,EAAMC,UAAU8e,MAAQ,CACtB7e,QAAS,OAETgf,MAAO,CACL9e,QACE,mEACFG,YAAY,GAMd4e,SAAU,CACR,CACE/e,QACE,0FACFgB,OAAQ6d,EACRze,MAAO,UAET,CACEJ,QACE,4FACFG,YAAY,EACZa,OAAQ6d,EACRze,MAAO,WAOXE,QAAS,CACPN,QACE,wFACFG,YAAY,GAEdoI,IAAK,CACHvI,QAAS,uBACTG,YAAY,GAMd6e,SAAU,CACRhf,QACE,4JACFG,YAAY,EACZC,MAAO,cAETG,SAAU,CACRP,QAAS4e,EACTxe,MAAO,YAETM,YAAa,YAEfd,EAAMC,UAAUof,IAAMrf,EAAMC,UAAU8e,MACtC/e,EAAMC,UAAUqf,QAAUtf,EAAMC,UAAU8e,MAjE3C,CAkEE/e,GAtELe,EAAOC,QAAU+d,EACjBA,EAAM9d,YAAc,QACpB8d,EAAM7d,QAAU,CAAC,MAAO,Y,sBCHxB,IAAI+J,EAA4B9H,EAAQ,OACpCoc,EAAepc,EAAQ,OAI3B,SAASqc,EAAMxf,GACbA,EAAMqD,SAAS4H,GACfjL,EAAMqD,SAASkc,GACd,SAAWvf,GACVA,EAAMC,UAAUuf,MAAQ,CACtBtf,QAAS,eACTuf,GAAI,CACFrf,QAAS,kCACTgB,OAAQ,CACNN,YAAa,SACbgI,IAAK,CACH1I,QAAS,KACTI,MAAO,eAIbkf,GAAI,CACFtf,QAAS,MACTgB,OAAQ,CACNN,YAAa,OAGjB6e,IAAK,CACHvf,QAAS,mBACTI,MAAO,eACPY,OAAQpB,EAAMC,UAAU0f,MAG5B,IAAIC,EAAc5f,EAAMC,UAAU+B,OAAO,SAAU,IACnDhC,EAAMC,UAAUgC,aACd,SACA,aACA,CACE,SAAU,CACR7B,QAAS,qDACTgB,OAAQ,CACN,YAAa,CACXhB,QAAS,WACTI,MAAO,aAET,aAAc,CACZJ,QAAS,WACTgB,OAAQ,CACNN,YAAa,CACX,KACA,CACEV,QAAS,mBACTG,YAAY,IAGhBof,IAAK,CACHvf,QAAS,mBACTgB,OAAQpB,EAAMC,UAAU0f,UAOpCC,EAAY9W,KAEd9I,EAAMqL,MAAMC,IAAI,mBAAmB,SAAUrB,GAC3C,GAAqB,UAAjBA,EAAIgI,SAAR,CAKAjS,EAAMC,UAAU,qBAAqBsL,kBACnCtB,EACA,QAHA,wHAMFA,EAAIuO,QAAUoH,MAEhB5f,EAAMqL,MAAMC,IAAI,kBAAkB,SAAUrB,GAC1CjK,EAAMC,UAAU,qBAAqBuL,qBAAqBvB,EAAK,YAxElE,CA0EEjK,GAhFLe,EAAOC,QAAUwe,EACjBA,EAAMve,YAAc,QACpBue,EAAMte,QAAU,I,kBCAhB,SAAS2e,EAAK7f,GAQZA,EAAMC,UAAU4f,KAAO7f,EAAMC,UAAU+B,OAAO,MAAO,CACnD9B,QAAS,CACP,mBACA,CACEE,QAAS,kBACTG,YAAY,IAGhBkI,OAAQ,CACNrI,QACE,0EACFgB,OAAQ,CACNN,YAAa,UAIjBmH,SAAU,CACR7H,QACE,0GACFgB,OAAQ,CAENX,SAAU,aAGdiB,SAAU,2CACVL,SAAU,aAEZrB,EAAMC,UAAUgC,aAAa,OAAQ,WAAY,CAC/CxB,SAAU,CAER,CACEL,QAAS,cACTgB,OAAQ,CACNN,YAAa,MAGjB,aAEF,cAAe,CACbV,QAAS,sCACTG,YAAY,EACZC,MAAO,cApDbO,EAAOC,QAAU6e,EACjBA,EAAK5e,YAAc,OACnB4e,EAAK3e,QAAU,I,sBCHf,IAAI4e,EAAkB3c,EAAQ,OAI9B,SAAS4c,EAAS/f,GAChBA,EAAMqD,SAASyc,GACd,SAAW9f,GAMV,IALA,IAAIggB,EACF,mGACGpd,OAGIC,EAAI,EAAGA,EADQ,EACeA,IACrCmd,EAAmBA,EAAiBld,QAAQ,WAAW,WACrD,OAAOkd,KAGXA,EAAmBA,EAAiBld,QAAQ,UAAW,UAAUF,QACjE,IAAImd,EAAY/f,EAAMC,UAAU8f,SAAW,CACzC7f,QAAS,8BACT,kBAAmB,CACjBE,QAAS2C,OACP,8DAA8DH,OAAOE,QACnE,WACA,WACE,OAAOkd,KAGX,KAEFzf,YAAY,EACZF,QAAQ,EACRe,OAAQ,CACN6e,OAAQ,CACN7f,QAAS,eACTG,YAAY,EACZC,MAAO,kBACPY,OAAQ,CACN,oBAAqB,CACnBhB,QAAS,iBACTC,QAAQ,EACRe,OAAQ,CACNN,YAAa,YACbif,SAAU,CACR3f,QAAS,UACTI,MAAO,oBACPY,OAAQ,QAIdsC,KAAM1D,EAAMC,UAAUggB,SAG1Bnf,YAAa,MAGjBX,OAAQ,CACNC,QAAS,oBACTC,QAAQ,GAEV,aAAc,CACZD,QAAS,mBACTG,YAAY,GAEdG,QAAS,CACPN,QAAS,iBACTgB,OAAQ,CACNN,YAAa,QAGjBO,SAAU,aACVP,YAAa,CACXV,QACE,uGACFG,YAAY,GAEdM,OAAQ,qBAEVkf,EAAS,mBAAmB3e,OAA5B,OAA6CA,OAC3C,qBACAA,OAFF,SAEqBA,OAAS2e,EAC9B/f,EAAMC,UAAUigB,GAAKH,EA3EtB,CA4EE/f,GAjFLe,EAAOC,QAAU+e,EACjBA,EAAS9e,YAAc,WACvB8e,EAAS7e,QAAU,I,sBCHnB,IAAI+J,EAA4B9H,EAAQ,OAIxC,SAASgd,EAAOngB,GACdA,EAAMqD,SAAS4H,GACfjL,EAAMC,UAAUkgB,OAAS,CACvBjgB,QAAS,CACPE,QAAS,2DACTG,YAAY,GAEd2B,UAAW,CACT9B,QAAS,0CACTI,MAAO,eAETL,OAAQ,CACNC,QAAS,kBACTC,QAAQ,GAEVK,QACE,oOACFsR,OACE,gzBACFrR,SAAU,CACR,CACEP,QAAS,aACTG,YAAY,EACZC,MAAO,UAET,CAEEJ,QAAS,6BACTG,YAAY,IAGhBK,QAAS,yBACT6E,MAAO,CACLrF,QAAS,OACTI,MAAO,YAGTK,OAAQ,oBACRQ,SAAU,wDACVP,YAAa,aACbsf,MAAO,CACLhgB,QAAS,YACTI,MAAO,YAGXR,EAAMqL,MAAMC,IAAI,mBAAmB,SAAUrB,GAC3C,IAEIoW,GAAY,EAChBrgB,EAAMC,UAAU,qBAAqBsL,kBACnCtB,EACA,SAJA,uGAMA,SAAUqW,GACR,IAAIC,EAAW,iBAAiBzV,KAAKwV,GACrC,GAAIC,EAAU,CACZ,IAAIzX,EAAMyX,EAAS,GACnB,GAAY,QAARzX,IAAkBuX,EAEpB,OADAA,GAAY,GACL,EACF,GAAY,WAARvX,EAET,OADAuX,GAAY,GACL,EAGX,OAAQA,QAIdrgB,EAAMqL,MAAMC,IAAI,kBAAkB,SAAUrB,GAC1CjK,EAAMC,UAAU,qBAAqBuL,qBAAqBvB,EAAK,aAzEnElJ,EAAOC,QAAUmf,EACjBA,EAAOlf,YAAc,SACrBkf,EAAOjf,QAAU,I,kBCCjB,SAASsf,EAAKxgB,IACX,SAAWA,GAIV,SAASygB,EAAY5b,GACnB,OAAO9B,OAAO,QAAU8B,EAAO,gBAEjC,SAAS6b,EAAUtgB,GACjB,OAAO2C,OAAO,YAAc3C,EAAU,cAIxC,IAAImB,EAAS,wBAETof,EAAM,QACNC,EAAS,UAET3O,EAAW,CAGb4O,QAAS,CACPzgB,QAAS,QACTI,MAAO,CAAC,UAAW,UAErBN,QAAS,MACTC,OAAQ,CACNC,QAAS,oBACTC,QAAQ,EACRe,OAAQ,CACNmM,SAAU,oBACVhM,OAAQwB,OAAO,IAAMxB,EAAS,OAGlC,gBAAiB,CACfnB,QAAS2C,OAAO,MAAQxB,GACxBf,MAAO,CAAC,WAAY,WAEtB,gBAAiB,CACfJ,QAAS2C,OAAO,IAAMxB,GACtBf,MAAO,YAET0a,OAAQ,CACN9a,QAAS2C,OAAO,MAAQxB,GACxBf,MAAO,CAAC,SAAU,aAEpBE,QAAS,CACP,CACEN,QAAS2C,OACP4d,2JAIFpgB,YAAY,GAEd,CACEH,QAAS2C,OACP4d,qEAIFpgB,YAAY,IAGhBugB,QAAS,CACP1gB,QAASqgB,EAAY,WACrBlgB,YAAY,EACZC,MAAO,WAETugB,YAAa,CACX3gB,QAASqgB,EAAY,eACrBlgB,YAAY,EACZC,MAAO,WAETI,QAAS,CACPR,QAASsgB,EAAU,aACnBngB,YAAY,GAEdM,OAAQ,CACNT,QAASsgB,EAAU,yBACnBngB,YAAY,GAEdygB,OAAQ,CACN5gB,QAAS2C,OAAO4d,yCAA4Cpf,GAC5DhB,YAAY,EACZa,OAAQ,CACNV,QAAS,aACTD,SAAUsC,OAAOxB,KAGrB0f,MAAO,CACL7gB,QAAS2C,OACP4d,0CAEEpf,EACA,wBAEJhB,YAAY,EACZa,OAAQ,CACNV,QAAS,kBAGTwgB,UAAW,KACXvgB,SAAU,CACRP,QAAS2C,OAAO,SAAWxB,GAC3BhB,YAAY,GAEdO,YAAa,SAGjBqgB,OAAQ,CACN/gB,QAAS2C,OACP4d,8BAEEpf,EACA,YACAA,EACA,eAEJhB,YAAY,EACZa,OAAQ,CACNV,QAAS,UAGTwgB,UAAW,KACXpgB,YAAa,SAGjBsgB,IAAK,CACHhhB,QAAS2C,OAAO4d,EAAMpf,GACtBhB,YAAY,GAEdO,YAAa,CAEX,uBACA,CACEV,QAAS,eACTG,YAAY,KAId8gB,EAAM,CACR,cAAete,OAhIJ,0BAiIXW,KAAM,CACJ6J,SAAU,CACRnN,QAAS2C,OAAOxB,GAChBf,MAAO,YAET8gB,QAAS,CACPlhB,QAAS2C,OAAO4d,EAAMpf,EAAS,mBAAqBqf,GACpDrgB,YAAY,EACZa,OAAQ,CACNjB,OAAQ8R,EAAS9R,OACjBS,QAASqR,EAASrR,QAClBC,OAAQoR,EAASpR,OACjBU,OAAQ0Q,EAAS1Q,OACjBT,YAAa,WAKjBygB,EAAQ,oBACRC,EAAU,CACZphB,QAAS2C,OAAO4d,yBAChBpgB,YAAY,EACZa,OAAQ,CACN,YAAa,CACXhB,QAAS2C,OAAO,qBAAuBwe,GACvCngB,OAAQigB,GAEV,oBAAqB,CACnBjhB,QAAS2C,OAAO,wBAA0Bwe,GAC1CngB,OAAQigB,GAEV5W,KAAM,CACJrK,QAAS2C,OAAO,WAAawe,EAAQ,8BACrCngB,OAAQigB,GAEV9T,SAAU,CACRnN,QAAS2C,OAAOxB,GAChBf,MAAO,YAETM,YAAa,SAGjBmR,EAAQ,OAAW7Q,OAAO8f,UAAYM,EACtCvP,EAAQ,MAAU7Q,OAAO8f,UAAYlhB,EAAMga,KAAKyD,MAAM+D,GACtDvP,EAAQ,MAAU7Q,OAAO8f,UAAU9f,OAAOqgB,QAAUD,EACpDxhB,EAAMC,UAAUugB,KAAOvO,EACvBjS,EAAMC,UAAUyhB,MAAQzP,EACxBjS,EAAMC,UAAU0hB,MAAQ1P,EACxBjS,EAAMC,UAAU,cAAgBgS,EA9LjC,CA+LEjS,GAnMLe,EAAOC,QAAUwf,EACjBA,EAAKvf,YAAc,OACnBuf,EAAKtf,QAAU,I,kBCCf,SAAS0gB,EAAW5hB,GAClBA,EAAMC,UAAU2hB,WAAa,CAC3B1hB,QAAS,CACP,CACEE,QAAS,4BACTG,YAAY,GAEd,CACEH,QAAS,eACTG,YAAY,IAGhB,sBAAuB,CAGrBH,QAAS,kDACTG,YAAY,EACZF,QAAQ,EACRe,OAAQ,CACNX,SAAU,CACRL,QAAS,sCACTG,YAAY,GAEdkB,cAAe,CACbrB,QAAS,uBACTG,YAAY,EACZa,OAAQ,CACN,4BAA6B,CAC3BhB,QAAS,WACTI,MAAO,cAIbL,OAAQ,YAGZA,OAAQ,CACN,CACEC,QAAS,qCACTC,QAAQ,GAEV,CACED,QAAS,iBACTC,QAAQ,GAEV,kBAEFuJ,MAAO,CACL,CACExJ,QAAS,8DACTC,QAAQ,EACRe,OAAQ,CACNlB,QAAS,CACPE,QAAS,eACTG,YAAY,KAIlB,CACEH,QAAS,uDACTC,QAAQ,IAGZK,QAAS,CACPN,QACE,wQACFG,YAAY,GAEd,mBAAoB,CAClBH,QACE,+JACFG,YAAY,EACZC,MAAO,YAETI,QAAS,CACPR,QAAS,iDACTG,YAAY,GAEdgN,SAAU,CAERnN,QAAS,8BACTG,YAAY,EACZC,MAAO,YAETK,OAAQ,2DACRkE,WAAY,4BACZ1D,SAAU,CAER,CACEjB,QAAS,aACTG,YAAY,GAwBd,qLAEFO,YAAa,oBAEfd,EAAMC,UAAU2hB,WAAW,uBAAuBxgB,OAAlD,cAEEA,OAAOsC,KAAO1D,EAAMC,UAAU2hB,WA3HlC7gB,EAAOC,QAAU4gB,EACjBA,EAAW3gB,YAAc,aACzB2gB,EAAW1gB,QAAU,I,kBCCrB,SAAS2gB,EAAK7hB,IACX,SAAWA,GACVA,EAAMC,UAAU4hB,KAAO,CACrB3hB,QAAS,MACTC,OAAQ,CACNC,QAAS,UACTC,QAAQ,GAEVO,QAAS,qBACTH,SAAU,iDACVuJ,MAAO,oCACP2B,KAAM,CACJvL,QACE,iGACFI,MAAO,cAETE,QAAS,uBACTG,OACE,gIACFC,YAAa,qBAlBhB,CAoBEd,GAxBLe,EAAOC,QAAU6gB,EACjBA,EAAK5gB,YAAc,OACnB4gB,EAAK3gB,QAAU,I,kBCCf,SAAS4gB,EAAI9hB,GAKXA,EAAMC,UAAU6hB,IAAM,CACpB3hB,OAAQ,CAENC,QAAS,2DACTC,QAAQ,GAEV0hB,UAAW,CACT3hB,QACE,uIACFG,YAAY,EACZF,QAAQ,EACRG,MAAO,CAAC,iBAAkB,2BAC1BY,OAAQpB,EAAMC,UAAN,gBAAqC,CAC3CS,QAAS,SACTC,SAAU,qBACVG,YAAa,WAGjBgB,MAAO,CACL,CACE1B,QACE,6EACFI,MAAO,CAAC,QAAS,cAEnB,CACEJ,QAAS,2BACTI,MAAO,CAAC,UAAW,cAErB,CACEJ,QAAS,yCACTI,MAAO,CAAC,OAAQ,YAElB,CACEJ,QAAS,yBACTI,MAAO,CAAC,QAAS,YAEnB,CACEJ,QAAS,6CACTI,MAAO,CAAC,QAAS,aAGrBkB,SAAU,CACRtB,QACE,wFACFG,YAAY,GAEdyhB,UAAW,CACT5hB,QAAS,oCACTG,YAAY,EACZC,MAAO,WAETmI,IAAK,oDACLsZ,MAAO,CACL7hB,QAAS,6DACTG,YAAY,EACZC,MAAO,OAET,aAAc,CACZJ,QAAS,mCACTI,MAAO,YAET,cAAe,CACbJ,QAAS,sCACTI,MAAO,YAET0hB,OAAQ,CACN9hB,QACE,qEACFG,YAAY,EACZC,MAAO,YAET2hB,KAAM,CACJ/hB,QACE,oEACFI,MAAO,YAET0J,KAAM,CACJ9J,QAAS,6BACTI,MAAO,YAET,YAAa,CACXJ,QACE,qFACFG,YAAY,EACZF,QAAQ,EACRG,MAAO,UAETmJ,KAAM,CACJvJ,QAAS2C,OACP,4DAA4DH,OAC1D,IACA,4FACGA,OACH,IACA,uKACGA,OACL,KAEFpC,MAAO,UAET4hB,KAAM,CACJhiB,QACE,qEACFI,MAAO,UAETI,QAAS,2BACTC,OAAQ,CACNT,QACE,yGACFG,YAAY,GAEdc,SAAU,6BACVP,YAAa,YAxHjBC,EAAOC,QAAU8gB,EACjBA,EAAI7gB,YAAc,MAClB6gB,EAAI5gB,QAAU,I,kBCCd,SAASmhB,EAAQriB,GACfA,EAAMC,UAAUoiB,QAAU,CACxBniB,QAAS,CAAC,2BAA4B,WACtCC,OAAQ,CACNC,QAAS,kBACTgB,OAAQ,CACNX,SAAU,aACVc,OAAQ,CAAC,iBAAkB,cAAe,aAE5ClB,QAAQ,GAEVQ,OAAQ,sCACRU,OAAQ,CACNnB,QAAS,iEACTG,YAAY,EACZa,OAAQ,CACNV,QAAS,YAGbsJ,MAAO,CACL5J,QAAS,iDACTG,YAAY,EACZC,MAAO,UAETG,SAAU,CACRP,QAAS,6CACTG,YAAY,GAEdG,QAAS,CACP,CACEN,QACE,sRACFG,YAAY,GAEd,gBAEFK,QAAS,CACPR,QAAS,+BACTG,YAAY,GAEdE,SAAU,CACRL,QAAS,qBACTG,YAAY,GAEdc,SAAU,CACRjB,QACE,uHACFG,YAAY,GAEdO,YAAa,oBApDjBC,EAAOC,QAAUqhB,EACjBA,EAAQphB,YAAc,UACtBohB,EAAQnhB,QAAU,I,iBCClB,SAAS8M,EAAIhO,GACXA,EAAMC,UAAU+N,IAAM,CACpB9N,QAAS,yCAETC,OAAQ,CACNC,QACE,qFACFC,QAAQ,GAEVQ,OACE,gHACFH,QACE,0HACFC,SAAU,2BACVU,SAAU,CACR,wCACA,CAEEjB,QAAS,qBACTG,YAAY,IAGhBO,YAAa,uBAzBjBC,EAAOC,QAAUgN,EACjBA,EAAI/M,YAAc,MAClB+M,EAAI9M,QAAU,I,kBCCd,SAASohB,EAAMtiB,GACbA,EAAMC,UAAUqiB,MAAQ,CACtBC,OAAQ,CACNniB,QACE,2GACFG,YAAY,EACZF,QAAQ,GAEVH,QAAS,CACPE,QAAS,0BACTC,QAAQ,GAEVF,OAAQ,CACNC,QAAS,kCACTG,YAAY,EACZF,QAAQ,GAGVK,QACE,ggBACFE,QAAS,qBACT4hB,UAAW,CACTpiB,QAAS,uBACTI,MAAO,cAETG,SAAU,wBACVE,OAAQ,CACNT,QACE,uFACFG,YAAY,GAEdc,SAAU,0BACVP,YAAa,mBAnCjBC,EAAOC,QAAUshB,EACjBA,EAAMrhB,YAAc,QACpBqhB,EAAMphB,QAAU,I,kBCChB,SAASuhB,EAASziB,GAChBA,EAAMC,UAAUwiB,SAAW,CACzBviB,QAAS,CACPE,QAAS,6CACTG,YAAY,GAEdJ,OAAQ,CACNC,QAAS,iDACTC,QAAQ,GAGV8J,QAAS,gCAET5I,OAAQ,CACNnB,QAAS,8CACTgB,OAAQ,CACNX,SAAU,wCAGdA,SAAU,wDACVC,QAAS,CAEP,6HACA,CACEN,QACE,wQACFG,YAAY,IAGhBc,SAAU,uBACVP,YAAa,YAjCjBC,EAAOC,QAAUyhB,EACjBA,EAASxhB,YAAc,WACvBwhB,EAASvhB,QAAU,I,kBCCnB,SAAS2Q,EAAS7R,IACf,SAAWA,GAEV,IAAI0iB,EAAQ,2CAA2C9f,OAWvD,SAAS+f,EAAaviB,GAIpB,OAHAA,EAAUA,EAAQ0C,QAAQ,YAAY,WACpC,OAAO4f,KAEF3f,OAAO,0BAA0BH,OAAS,MAAQxC,EAAU,KAErE,IAAIwiB,EAAY,4DACbhgB,OACC8N,EACF,+CAA+C9N,OAAOE,QACpD,OACA,WACE,OAAO8f,KAGTC,EACF,sEACGjgB,OACL5C,EAAMC,UAAU4R,SAAW7R,EAAMC,UAAU+B,OAAO,SAAU,IAC5DhC,EAAMC,UAAUgC,aAAa,WAAY,SAAU,CACjD,qBAAsB,CACpB7B,QAAS,kDACTG,YAAY,EACZF,QAAQ,EACRe,OAAQ,CACNN,YAAa,YACb,cAAe,CACbV,QAAS,iBACTI,MAAO,CAAC,OAAQ,iBAChBY,OAAQpB,EAAMC,UAAU6iB,QAI9BC,WAAY,CAEV3iB,QAAS,kBACTI,MAAO,eAETwiB,MAAO,CACL5iB,QAAS2C,OACP,IAAM2N,EAAWmS,EAAY,MAAQnS,EAAW,KAChD,KAEFtP,OAAQ,CACN,kBAAmB,CACjBhB,QAAS2C,OACP,KAAO2N,EAAWmS,EAAY,OAASnS,EAAW,OAEpDnQ,YAAY,EACZa,OAAQ,CACN,aAAc,CACZhB,QAAS2C,OAAO6f,GAChBxhB,OAAQpB,EAAMC,UAAU4R,UAE1B/Q,YAAa,OAGjB,aAAc,CACZV,QAAS2C,OAAO,KAAO2N,EAAW,IAAMmS,EAAY,KACpDtiB,YAAY,EACZa,OAAQ,CACNN,YAAa,iBAGjB,mBAAoB,CAClBV,QAAS2C,OAAO,IAAM2N,EAAW,KACjCtP,OAAQ,CACN,eAAgB,CACdhB,QAAS2C,OAAO6f,GAChBpiB,MAAO,YACPY,OAAQpB,EAAMC,UAAU4R,UAE1B/Q,YAAa,SAKrBiT,KAAM,CACJ,CAEE3T,QACE,uFACFG,YAAY,EACZC,MAAO,WAET,CAIEJ,QAAS,qBACTC,QAAQ,EACRe,OAAQ,CACN,aAAc,CACZhB,QAAS,qDACTG,YAAY,GAEd,gBAAiB,CACfH,QAAS,WACTG,YAAY,GAEdO,YAAa,SAInBgW,MAAO,CACL,CAKE1W,QAAS,0CACTI,MAAO,YACPY,OAAQ,CACNN,YAAa,cAGjB,CAGEV,QAAS,aACTG,YAAY,EACZC,MAAO,YACPY,OAAQ,CACNN,YAAa,aAInBmiB,GAAI,CAKF7iB,QAAS,wCACTG,YAAY,EACZC,MAAO,eAET0iB,KAAM,CAKJ9iB,QAAS,mCACTG,YAAY,EACZC,MAAO,eAET,gBAAiB,CAKfJ,QACE,qHACFgB,OAAQ,CACNX,SAAU,CACRL,QAAS,gBACTG,YAAY,GAEdJ,OACE,+DACFW,YAAa,kBAEfN,MAAO,OAET4d,KAAM,CAIJhe,QAASuiB,EACP,kGACG/f,QAELrC,YAAY,EACZF,QAAQ,EACRe,OAAQ,CACN4O,QAAS,CACP5P,QAAS,sBACTG,YAAY,EACZa,OAAQ,IAEVN,YAAa,YAGjBqiB,OAAQ,CAIN/iB,QAASuiB,EACP,kGACG/f,QAELrC,YAAY,EACZF,QAAQ,EACRe,OAAQ,CACN4O,QAAS,CACP5P,QAAS,oBACTG,YAAY,EACZa,OAAQ,IAEVN,YAAa,SAGjBsiB,OAAQ,CAINhjB,QAASuiB,EAAa,2BAA2B/f,QACjDrC,YAAY,EACZF,QAAQ,EACRe,OAAQ,CACN4O,QAAS,CACP5P,QAAS,uBACTG,YAAY,EACZa,OAAQ,IAEVN,YAAa,QAGjB,eAAgB,CAGdV,QACE,mEACFG,YAAY,EACZF,QAAQ,EACRG,MAAO,CAAC,OAAQ,YAElBmI,IAAK,CAIHvI,QAASuiB,EACP,mGACG/f,QAELrC,YAAY,EACZF,QAAQ,EACRe,OAAQ,CACNC,SAAU,KACV2O,QAAS,CACP5P,QAAS,oBACTG,YAAY,EACZa,OAAQ,IAEVX,SAAU,CACRL,QAAS,6BACTG,YAAY,GAEdoI,IAAK,CACHvI,QAAS,iBACTG,YAAY,GAEdJ,OAAQ,CACNC,QAAS,oCACTG,YAAY,OAKnB,CAAC,MAAO,OAAQ,SAAU,UAAUmK,SAAQ,SAAU0H,GACpD,CAAC,MAAO,OAAQ,SAAU,SAAU,gBAAgB1H,SAAQ,SAC3DtJ,GAEIgR,IAAUhR,IACZpB,EAAMC,UAAU4R,SAASO,GAAOhR,OAAO4O,QAAQ5O,OAAOA,GACpDpB,EAAMC,UAAU4R,SAASzQ,UAIjCpB,EAAMqL,MAAMC,IAAI,kBAAkB,SAAUrB,GACrB,aAAjBA,EAAIgI,UAA4C,OAAjBhI,EAAIgI,UAGvC,SAAS2J,EAAWzJ,GAClB,GAAKA,GAA4B,kBAAXA,EAGtB,IAAK,IAAItP,EAAI,EAAGqR,EAAI/B,EAAOG,OAAQzP,EAAIqR,EAAGrR,IAAK,CAC7C,IAAIuP,EAAQD,EAAOtP,GACnB,GAAmB,SAAfuP,EAAMzG,KAAV,CAiBA,IAAI0X,EAAWjR,EAAMpC,QAAQ,GACzBsT,EAAYlR,EAAMpC,QAAQ,GAC9B,GACEqT,GACAC,GACkB,kBAAlBD,EAAS1X,MACU,eAAnB2X,EAAU3X,MACkB,kBAArB0X,EAASrT,QAChB,CAGA,IAAIqI,EAAOgL,EAASrT,QACjBlN,QAAQ,OAAQ,SAChBA,QAAQ,UAAW,MAElBtC,EAAQ,aADZ6X,GAAQ,eAAevN,KAAKuN,IAAS,CAAC,KAAK,GAAGkL,eAEzCD,EAAU9iB,MAEuB,kBAApB8iB,EAAU9iB,MAC1B8iB,EAAU9iB,MAAQ,CAAC8iB,EAAU9iB,MAAOA,GAEpC8iB,EAAU9iB,MAAMqK,KAAKrK,GAJrB8iB,EAAU9iB,MAAQ,CAACA,SAjCrBob,EAAWxJ,EAAMpC,UA0CvB4L,CAAW3R,EAAIkI,WAEjBnS,EAAMqL,MAAMC,IAAI,QAAQ,SAAUrB,GAChC,GAAiB,eAAbA,EAAI0B,KAAR,CAIA,IADA,IAAI0X,EAAW,GACNxgB,EAAI,EAAGqR,EAAIjK,EAAIyJ,QAAQpB,OAAQzP,EAAIqR,EAAGrR,IAAK,CAClD,IAAI2gB,EAAMvZ,EAAIyJ,QAAQ7Q,GAClByd,EAAQ,gBAAgBxV,KAAK0Y,GACjC,GAAIlD,EAAO,CACT+C,EAAW/C,EAAM,GACjB,OAGJ,IAAI9H,EAAUxY,EAAMC,UAAUojB,GAC9B,GAAK7K,EAoBHvO,EAAI+F,QAAUhQ,EAAMyT,UA4BxB,SAAqBnM,GAEnB,IAAI2P,EAAO3P,EAAKxE,QAAQ2gB,EAAY,IAmBpC,OAlBAxM,EAAOA,EAAKnU,QAAQ,iCAAiC,SAAUgB,EAAGiQ,GAG9D,IAAItM,EADN,GAAgB,OADhBsM,EAAOA,EAAKwP,eACH,GAOP,OAJE9b,EADc,MAAZsM,EAAK,GACC2P,SAAS3P,EAAK4P,MAAM,GAAI,IAExBC,OAAO7P,EAAK4P,MAAM,IAErBE,EAAcpc,GAErB,IAAIqc,EAAQC,EAAmBhQ,GAC/B,OAAI+P,GAGGhgB,KA7CPkgB,CAAY/Z,EAAI+F,QAAQvI,OACxB+Q,EACA6K,QAtBF,GAAIA,GAAyB,SAAbA,GAAuBrjB,EAAMikB,QAAQC,WAAY,CAC/D,IAAI/b,EACF,OACA,IAAIgc,MAAOC,UACX,IACAC,KAAKC,MAAsB,KAAhBD,KAAKE,UAClBta,EAAI6J,WAAJ,GAAuB3L,EACvBnI,EAAMikB,QAAQC,WAAWM,cAAcnB,GAAU,WAC/C,IAAIoB,EAAMC,SAASC,eAAexc,GAC9Bsc,IACFA,EAAIG,UAAY5kB,EAAMyT,UACpBgR,EAAIT,YACJhkB,EAAMC,UAAUojB,GAChBA,YAaZ,IAAII,EAAa1gB,OAAO/C,EAAMC,UAAU4I,OAAOC,IAAI1I,QAAQwC,OAAQ,MAQ/DmhB,EAAqB,CACvBc,IAAK,IACLC,GAAI,IACJC,GAAI,IACJC,KAAM,KAEJnB,EAAgBoB,OAAOpB,eAAiBoB,OAAOC,aA8BnDllB,EAAMC,UAAUklB,GAAKnlB,EAAMC,UAAU4R,SAratC,CAsaE7R,GA1aLe,EAAOC,QAAU6Q,EACjBA,EAAS5Q,YAAc,WACvB4Q,EAAS3Q,QAAU,CAAC,O,kBCCpB,SAASkK,EAAiBpL,IACvB,SAAWA,GAQV,SAASwa,EAAevI,EAAUlO,GAChC,MAAO,MAAQkO,EAASyI,cAAgB3W,EAAQ,MAElDyG,OAAO4a,iBAAkBplB,EAAMC,UAAU,qBAAuB,GAAK,CACnEsL,kBAAmB,CAYjB9D,MAAO,SAAUwC,EAAKgI,EAAUoT,EAAoBC,GAClD,GAAIrb,EAAIgI,WAAaA,EAArB,CAGA,IAAIsT,EAActb,EAAIsb,WAAa,GACnCtb,EAAI8J,KAAO9J,EAAI8J,KAAKjR,QAAQuiB,GAAoB,SAAU/E,GACxD,GAA6B,oBAAlBgF,IAAiCA,EAAchF,GACxD,OAAOA,EAIT,IAFA,IACI7E,EADA5Y,EAAI0iB,EAAWjT,QAIhB,IADDrI,EAAI8J,KAAKd,QAASwI,EAAcjB,EAAevI,EAAUpP,OAGvDA,EAGJ,OADA0iB,EAAW1iB,GAAKyd,EACT7E,KAETxR,EAAIuO,QAAUxY,EAAMC,UAAU4I,UAGlC2C,qBAAsB,CAOpB/D,MAAO,SAAUwC,EAAKgI,GACpB,GAAIhI,EAAIgI,WAAaA,GAAahI,EAAIsb,WAAtC,CAGAtb,EAAIuO,QAAUxY,EAAMC,UAAUgS,GAC9B,IAAIqF,EAAI,EACJ7M,EAAOD,OAAOC,KAAKR,EAAIsb,aAC3B,SAAS3J,EAAWzJ,GAClB,IAAK,IAAItP,EAAI,EAAGA,EAAIsP,EAAOG,UAErBgF,GAAK7M,EAAK6H,QAFmBzP,IAAK,CAKtC,IAAIuP,EAAQD,EAAOtP,GACnB,GACmB,kBAAVuP,GACNA,EAAMpC,SAAoC,kBAAlBoC,EAAMpC,QAC/B,CACA,IAAIZ,EAAI3E,EAAK6M,GACTzE,EAAI5I,EAAIsb,WAAWnW,GACnByM,EAAqB,kBAAVzJ,EAAqBA,EAAQA,EAAMpC,QAC9CyL,EAAcjB,EAAevI,EAAU7C,GACvCrL,EAAQ8X,EAAE5I,QAAQwI,GACtB,GAAI1X,GAAS,EAAG,GACZuT,EACF,IAAIwE,EAASD,EAAEE,UAAU,EAAGhY,GACxBiY,EAAS,IAAIhc,EAAMmb,MACrBlJ,EACAjS,EAAM6a,SAAShI,EAAG5I,EAAIuO,SACtB,YAAcvG,EACdY,GAEEoJ,EAAQJ,EAAEE,UAAUhY,EAAQ0X,EAAYnJ,QACxC4J,EAAc,GACdJ,GACFI,EAAYrR,KAAKoQ,MAAMiB,EAAaN,EAAW,CAACE,KAElDI,EAAYrR,KAAKmR,GACbC,GACFC,EAAYrR,KAAKoQ,MAAMiB,EAAaN,EAAW,CAACK,KAE7B,kBAAV7J,EACTD,EAAO+I,OAAOD,MAAM9I,EAAQ,CAACtP,EAAG,GAAGuZ,OAAOF,IAE1C9J,EAAMpC,QAAUkM,QAIpB9J,EAAMpC,SAGN4L,EAAWxJ,EAAMpC,SAGrB,OAAOmC,EAETyJ,CAAW3R,EAAIkI,aA9GtB,CAkHEnS,GAtHLe,EAAOC,QAAUoK,EACjBA,EAAiBnK,YAAc,mBAC/BmK,EAAiBlK,QAAU,I,kBCC3B,SAAS2H,EAAO7I,GACdA,EAAMC,UAAU4I,OAAS,CACvB3I,QAAS,CACPE,QAAS,8BACTC,QAAQ,GAEVse,OAAQ,CACNve,QAAS,iBACTC,QAAQ,GAEVwT,QAAS,CAEPzT,QACE,uHACFC,QAAQ,EACRe,OAAQ,CACN,kBAAmB,CACjBhB,QAAS,6BACTG,YAAY,EACZF,QAAQ,EACRe,OAAQ,MAEVjB,OAAQ,CACNC,QAAS,kBACTC,QAAQ,GAEVS,YAAa,eACb,cAAe,YACf+D,KAAM,eAGVqa,MAAO,CACL9e,QAAS,4BACTC,QAAQ,GAEVyI,IAAK,CACH1I,QACE,uHACFC,QAAQ,EACRe,OAAQ,CACN0H,IAAK,CACH1I,QAAS,iBACTgB,OAAQ,CACNN,YAAa,QACba,UAAW,iBAGf,eAAgB,GAChB,aAAc,CACZvB,QAAS,qCACTgB,OAAQ,CACNN,YAAa,CACX,CACEV,QAAS,KACTI,MAAO,eAET,SAINM,YAAa,OACb,YAAa,CACXV,QAAS,YACTgB,OAAQ,CACNO,UAAW,mBAKnB6G,OAAQ,CACN,CACEpI,QAAS,kBACTI,MAAO,gBAET,uBAGJR,EAAMC,UAAU4I,OAAhB,IAA8BzH,OAAO,cAAcA,OAAnD,OACEpB,EAAMC,UAAU4I,OAAhB,OACF7I,EAAMC,UAAU4I,OAAhB,QAAkCzH,OAAO,mBAAmBA,OAC1DpB,EAAMC,UAAU4I,OAClB7I,EAAMqL,MAAMC,IAAI,QAAQ,SAAUrB,GACf,WAAbA,EAAI0B,OACN1B,EAAI6J,WAAJ,MAA0B7J,EAAI+F,QAAQvI,MAAM3E,QAAQ,QAAS,SAGjE0H,OAAOQ,eAAehL,EAAMC,UAAU4I,OAAOC,IAAK,aAAc,CAY9DrB,MAAO,SAAoBqW,EAASzF,GAClC,IAAImN,EAAsB,GAC1BA,EAAoB,YAAcnN,GAAQ,CACxCjY,QAAS,oCACTG,YAAY,EACZa,OAAQpB,EAAMC,UAAUoY,IAE1BmN,EAAmB,MAAY,uBAC/B,IAAIpkB,EAAS,CACX,iBAAkB,CAChBhB,QAAS,4BACTgB,OAAQokB,IAGZpkB,EAAO,YAAciX,GAAQ,CAC3BjY,QAAS,UACTgB,OAAQpB,EAAMC,UAAUoY,IAE1B,IAAIoN,EAAM,GACVA,EAAI3H,GAAW,CACb1d,QAAS2C,OACP,wFAAwFH,OAAOE,QAC7F,OACA,WACE,OAAOgb,KAGX,KAEFvd,YAAY,EACZF,QAAQ,EACRe,OAAQA,GAEVpB,EAAMC,UAAUgC,aAAa,SAAU,QAASwjB,MAGpDjb,OAAOQ,eAAehL,EAAMC,UAAU4I,OAAOC,IAAK,eAAgB,CAYhErB,MAAO,SAAUie,EAAUrN,GACzBrY,EAAMC,UAAU4I,OAAOC,IAAI1H,OAAO,gBAAgByJ,KAAK,CACrDzK,QAAS2C,OACP,aAAaH,OACX,MACA8iB,EACA,IACA,iDAAiD9iB,OACnD,KAEFrC,YAAY,EACZa,OAAQ,CACN,YAAa,WACb,aAAc,CACZhB,QAAS,WACTgB,OAAQ,CACNqG,MAAO,CACLrH,QAAS,yCACTG,YAAY,EACZC,MAAO,CAAC6X,EAAM,YAAcA,GAC5BjX,OAAQpB,EAAMC,UAAUoY,IAE1BvX,YAAa,CACX,CACEV,QAAS,KACTI,MAAO,eAET,eAQdR,EAAMC,UAAUqH,KAAOtH,EAAMC,UAAU4I,OACvC7I,EAAMC,UAAU0lB,OAAS3lB,EAAMC,UAAU4I,OACzC7I,EAAMC,UAAU2lB,IAAM5lB,EAAMC,UAAU4I,OACtC7I,EAAMC,UAAUqV,IAAMtV,EAAMC,UAAU+B,OAAO,SAAU,IACvDhC,EAAMC,UAAU4lB,KAAO7lB,EAAMC,UAAUqV,IACvCtV,EAAMC,UAAUqN,KAAOtN,EAAMC,UAAUqV,IACvCtV,EAAMC,UAAU6lB,IAAM9lB,EAAMC,UAAUqV,IA9LxCvU,EAAOC,QAAU6H,EACjBA,EAAO5H,YAAc,SACrB4H,EAAO3H,QAAU,CAAC,OAAQ,SAAU,MAAO,MAAO,OAAQ,OAAQ,Q,kBCClE,SAAS6kB,EAAO/lB,GACdA,EAAMC,UAAU8lB,OAAS,CACvB7lB,QAAS,CAAC,iBAAkB,OAC5BC,OAAQ,CACNC,QAAS,uBACTC,QAAQ,GAGVQ,OAAQ,iEACRH,QACE,8HACFC,SAAU,uBACVU,SAAU,0CACVP,YAAa,wBAhBjBC,EAAOC,QAAU+kB,EACjBA,EAAO9kB,YAAc,SACrB8kB,EAAO7kB,QAAU,I,kBCCjB,SAAS8kB,EAAUhmB,GACjBA,EAAMC,UAAU+lB,UAAY,CAC1B9lB,QAAS,CACPE,QAAS,8BACTC,QAAQ,GAEVF,OAAQ,CACNC,QAAS,iDACTG,YAAY,EACZF,QAAQ,GAEVgO,KAAM,CACJjO,QAAS,4BACTC,QAAQ,EACRG,MAAO,UAET,sBAAuB,CACrBJ,QAAS,8BACTG,YAAY,EACZC,MAAO,YAET+M,SAAU,CACRnN,QAAS,oBACTI,MAAO,aAETE,QACE,2SACFE,QAAS,4BACTwhB,KAAM,CACJhiB,QACE,sGACFG,YAAY,EACZC,MAAO,UAETK,OAAQ,CACN,CACET,QACE,wFACFG,YAAY,GAEd,gBAEFoN,SAAU,8DACVpF,MAAO,CACLnI,QAAS,2DACTI,MAAO,YAETa,SAAU,4BACVP,YAAa,+BAnDjBC,EAAOC,QAAUglB,EACjBA,EAAU/kB,YAAc,YACxB+kB,EAAU9kB,QAAU,I,iBCCpB,SAAS+kB,EAAIjmB,GACXA,EAAMC,UAAUgmB,IAAM,CACpB/lB,QAAS,SACT6T,KAAM,CACJ3T,QAAS,wBACTC,QAAQ,EACRG,MAAO,SACPY,OAAQ,CACNc,UAAW,CACT9B,QAAS,QACTI,MAAO,iBAIbL,OAAQ,CACNC,QAAS,wBACTC,QAAQ,GAEVI,SAAU,QACVI,OAAQ,4CACRqlB,KAAM,CACJ9lB,QAAS,cACTI,MAAO,YAETE,QACE,uHACFC,SACE,2ufACFU,SAAU,CACR,8CACA,CAEEjB,QAAS,iBACTG,YAAY,GAEd,CAEEH,QAAS,iBACTG,YAAY,IAGhBO,YAAa,yBAEfd,EAAMC,UAAUgmB,IAAhB,KAA4B7kB,OAAOsC,KAAO1D,EAAMC,UAAUgmB,IA9C5DllB,EAAOC,QAAUilB,EACjBA,EAAIhlB,YAAc,MAClBglB,EAAI/kB,QAAU,I,kBCCd,SAASilB,EAAQnmB,GACfA,EAAMC,UAAUkmB,QAAU,CACxBjmB,QAAS,CACPE,QAAS,OACTC,QAAQ,GAEV+lB,MAAO,CACLhmB,QACE,sEACFG,YAAY,EACZa,OAAQ,CACNM,SAAU,wBACVL,SAAU,IACVP,YAAa,MAGjB,oBAAqB,CACnBV,QACE,4IACFG,YAAY,EACZF,QAAQ,EACRe,OAAQ,CACNwY,MAAO,CACLxZ,QAAS,8BACTI,MAAO,YAETwJ,MAAO,CACL5J,QAAS,qCACTG,YAAY,EACZC,MAAO,YAET,aAAc,CACZJ,QAAS,OACTI,MAAO,CAAC,QAAS,eAIvBoZ,MAAO,CAML,CAEExZ,QAAS,uDACTG,YAAY,EACZC,MAAO,YAET,CAGEJ,QACE,qGACFG,YAAY,EACZC,MAAO,YAET,CAEEJ,QACE,mEACFG,YAAY,EACZC,MAAO,YAET,CAEEJ,QACE,uFACFG,YAAY,EACZC,MAAO,aAGXwJ,MAAO,CACL5J,QAAS,0CACTG,YAAY,EACZF,QAAQ,EACRG,MAAO,YAETyW,KAAM,CACJ7W,QAAS,gEACTI,MAAO,UAETL,OAAQ,CACNC,QAAS,cACTC,QAAQ,GAEVmC,WAAY,CACVpC,QACE,gGACFI,MAAO,aAETE,QAAS,CAEP,CACEN,QACE,yOACFG,YAAY,EACZF,QAAQ,GAEV,CACED,QACE,2KACFG,YAAY,EACZF,QAAQ,IAGZmI,OAAQ,cACRnH,SAAU,CACRjB,QAAS,gCACTG,YAAY,GAEdO,YAAa,WAlHjBC,EAAOC,QAAUmlB,EACjBA,EAAQllB,YAAc,UACtBklB,EAAQjlB,QAAU,I,kBCClB,SAASmlB,EAAMrmB,GACbA,EAAMC,UAAUomB,MAAQ,CACtBnmB,QAAS,OACTQ,QACE,s0BACF0Q,UAAW,CACThR,QAAS,cACTI,MAAO,YAETC,SAAU,aACVI,OAAQ,gBACRQ,SAAU,mBACVP,YAAa,yBAfjBC,EAAOC,QAAUqlB,EACjBA,EAAMplB,YAAc,QACpBolB,EAAMnlB,QAAU,I,kBCChB,SAASolB,EAAQtmB,IACd,SAAWA,GACV,IAAIumB,EAAY,CAEd,MACA,MACA,OACA,MACA,MACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,UACA,QACA,QACA,cACA,OACA,SACA,QACA,SACA,iBACA,aACA,QACA,cACA,OACA,aACA,QACA,gBACA,cACA,gBACA,cACA,WACA,aACA,QACA,SACA,eACA,OACA,OACA,OACA,OACA,UACA,OACA,eACA,SACA,YACA,OACA,QACA,QACA,WACA,QACA,YACA,SACA,QACA,OACA,aACA,UACA,cACA,aACA,SACA,aACA,SACA,WACA,eACA,SACA,cACA,SACA,qBACA,gBACA,UACA,SACA,SACA,OACA,kBACA,WACA,UACA,eACA,eACA,UACA,OACA,QACA,QACA,eACA,aACA,SACA,UACA,OACA,eACA,QACA,SACA,OACA,YACA,mBACA,OACA,kBACA,eACA,iBACA,QACA,SACA,QACA,SACA,SACA,OACA,cACA,YACA,QACA,OACA,UACA,gBACA,QACA,WACA,OACA,iBACA,eACA,kBACA,gBACA,cACA,aACA,aACA,oBACA,UACA,MACA,OACA,UACA,SACA,SACA,YACA,MACA,OACA,QACA,UACA,MACA,gBACA,gBACA,aACA,WACA,YACA,gBACA,WACA,eACA,QACA,QACA,OACA,WACA,MACA,OACA,SACA,MACA,OACA,SACA,OACA,OACA,gBACA,QACA,OACA,eACA,UACA,OACA,SACA,YACA,MACA,OACA,iBACA,MACA,OACA,QACA,oBACA,SACA,UACA,aACA,gBACA,cACA,cACA,cACA,gBACA,SACA,SACA,UACA,iBACA,aACA,mBACA,eACA,YACA,QACA,OA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","sources":["../node_modules/refractor/lang/cil.js","../node_modules/refractor/lang/clike.js","../node_modules/refractor/lang/clojure.js","../node_modules/refractor/lang/cmake.js","../node_modules/refractor/lang/cobol.js","../node_modules/refractor/lang/coffeescript.js","../node_modules/refractor/lang/concurnas.js","../node_modules/refractor/lang/coq.js","../node_modules/refractor/lang/cpp.js","../node_modules/refractor/lang/crystal.js","../node_modules/refractor/lang/csharp.js","../node_modules/refractor/lang/cshtml.js","../node_modules/refractor/lang/csp.js","../node_modules/refractor/lang/css-extras.js","../node_modules/refractor/lang/css.js","../node_modules/refractor/lang/csv.js","../node_modules/refractor/lang/cypher.js","../node_modules/refractor/lang/d.js","../node_modules/refractor/lang/dart.js","../node_modules/refractor/lang/dataweave.js","../node_modules/refractor/lang/dax.js","../node_modules/refractor/lang/dhall.js","../node_modules/refractor/lang/diff.js","../node_modules/refractor/lang/django.js","../node_modules/refractor/lang/dns-zone-file.js","../node_modules/refractor/lang/docker.js","../node_modules/refractor/lang/dot.js","../node_modules/refractor/lang/ebnf.js","../node_modules/refractor/lang/editorconfig.js","../node_modules/refractor/lang/eiffel.js","../node_modules/refractor/lang/ejs.js","../node_modules/refractor/lang/elixir.js","../node_modules/refractor/lang/elm.js","../node_modules/refractor/lang/erb.js","../node_modules/refractor/lang/erlang.js","../node_modules/refractor/lang/etlua.js","../node_modules/refractor/lang/excel-formula.js","../node_modules/refractor/lang/factor.js","../node_modules/refractor/lang/false.js","../node_modules/refractor/lang/firestore-security-rules.js","../node_modules/refractor/lang/flow.js","../node_modules/refractor/lang/fortran.js","../node_modules/refractor/lang/fsharp.js","../node_modules/refractor/lang/ftl.js","../node_modules/refractor/lang/gap.js","../node_modules/refractor/lang/gcode.js","../node_modules/refractor/lang/gdscript.js","../node_modules/refractor/lang/gedcom.js","../node_modules/refractor/lang/gherkin.js","../node_modules/refractor/lang/git.js","../node_modules/refractor/lang/glsl.js","../node_modules/refractor/lang/gml.js","../node_modules/refractor/lang/gn.js","../node_modules/refractor/lang/go.js","../node_modules/refractor/lang/graphql.js","../node_modules/refractor/lang/groovy.js","../node_modules/refractor/lang/haml.js","../node_modules/refractor/lang/handlebars.js","../node_modules/refractor/lang/haskell.js","../node_modules/refractor/lang/haxe.js","../node_modules/refractor/lang/hcl.js","../node_modules/refractor/lang/hlsl.js","../node_modules/refractor/lang/hoon.js","../node_modules/refractor/lang/hpkp.js","../node_modules/refractor/lang/hsts.js","../node_modules/refractor/lang/http.js","../node_modules/refractor/lang/ichigojam.js","../node_modules/refractor/lang/icon.js","../node_modules/refractor/lang/icu-message-format.js","../node_modules/refractor/lang/idris.js","../node_modules/refractor/lang/iecst.js","../node_modules/refractor/lang/ignore.js","../node_modules/refractor/lang/inform7.js","../node_modules/refractor/lang/ini.js","../node_modules/refractor/lang/io.js","../node_modules/refractor/lang/j.js","../node_modules/refractor/lang/java.js","../node_modules/refractor/lang/javadoc.js","../node_modules/refractor/lang/javadoclike.js","../node_modules/refractor/lang/javascript.js","../node_modules/refractor/lang/javastacktrace.js","../node_modules/refractor/lang/jexl.js","../node_modules/refractor/lang/jolie.js","../node_modules/refractor/lang/jq.js","../node_modules/refractor/lang/js-extras.js","../node_modules/refractor/lang/js-templates.js","../node_modules/refractor/lang/jsdoc.js","../node_modules/refractor/lang/json.js","../node_modules/refractor/lang/json5.js","../node_modules/refractor/lang/jsonp.js","../node_modules/refractor/lang/jsstacktrace.js","../node_modules/refractor/lang/jsx.js","../node_modules/refractor/lang/julia.js","../node_modules/refractor/lang/keyman.js","../node_modules/refractor/lang/kotlin.js","../node_modules/refractor/lang/kumir.js","../node_modules/refractor/lang/kusto.js","../node_modules/refractor/lang/latex.js","../node_modules/refractor/lang/latte.js","../node_modules/refractor/lang/less.js","../node_modules/refractor/lang/lilypond.js","../node_modules/refractor/lang/liquid.js","../node_modules/refractor/lang/lisp.js","../node_modules/refractor/lang/livescript.js","../node_modules/refractor/lang/llvm.js","../node_modules/refractor/lang/log.js","../node_modules/refractor/lang/lolcode.js","../node_modules/refractor/lang/lua.js","../node_modules/refractor/lang/magma.js","../node_modules/refractor/lang/makefile.js","../node_modules/refractor/lang/markdown.js","../node_modules/refractor/lang/markup-templating.js","../node_modules/refractor/lang/markup.js","../node_modules/refractor/lang/matlab.js","../node_modules/refractor/lang/maxscript.js","../node_modules/refractor/lang/mel.js","../node_modules/refractor/lang/mermaid.js","../node_modules/refractor/lang/mizar.js","../node_modules/refractor/lang/mongodb.js","../node_modules/refractor/lang/monkey.js","../node_modules/refractor/lang/moonscript.js","../node_modules/refractor/lang/n1ql.js","../node_modules/refractor/lang/n4js.js","../node_modules/refractor/lang/nand2tetris-hdl.js","../node_modules/refractor/lang/naniscript.js","../node_modules/refractor/lang/nasm.js","../node_modules/refractor/lang/neon.js","../node_modules/refractor/lang/nevod.js","../node_modules/refractor/lang/nginx.js"],"sourcesContent":["'use strict'\n\nmodule.exports = cil\ncil.displayName = 'cil'\ncil.aliases = []\nfunction cil(Prism) {\n  Prism.languages.cil = {\n    comment: /\\/\\/.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    directive: {\n      pattern: /(^|\\W)\\.[a-z]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    // Actually an assembly reference\n    variable: /\\[[\\w\\.]+\\]/,\n    keyword:\n      /\\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|iant|idispatch|implements|import|initonly|instance|u?int(?:8|16|32|64)?|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\\b/,\n    function:\n      /\\b(?:(?:constrained|unaligned|volatile|readonly|tail|no)\\.)?(?:conv\\.(?:[iu][1248]?|ovf\\.[iu][1248]?(?:\\.un)?|r\\.un|r4|r8)|ldc\\.(?:i4(?:\\.[0-9]+|\\.[mM]1|\\.s)?|i8|r4|r8)|ldelem(?:\\.[iu][1248]?|\\.r[48]|\\.ref|a)?|ldind\\.(?:[iu][1248]?|r[48]|ref)|stelem\\.?(?:i[1248]?|r[48]|ref)?|stind\\.(?:i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\\.[0-3s]|a(?:\\.s)?)?|ldloc(?:\\.[0-9]+|\\.s)?|sub(?:\\.ovf(?:\\.un)?)?|mul(?:\\.ovf(?:\\.un)?)?|add(?:\\.ovf(?:\\.un)?)?|stloc(?:\\.[0-3s])?|refany(?:type|val)|blt(?:\\.un)?(?:\\.s)?|ble(?:\\.un)?(?:\\.s)?|bgt(?:\\.un)?(?:\\.s)?|bge(?:\\.un)?(?:\\.s)?|unbox(?:\\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\\.s)?|bne\\.un(?:\\.s)?|ldloca(?:\\.s)?|brzero(?:\\.s)?|brtrue(?:\\.s)?|brnull(?:\\.s)?|brinst(?:\\.s)?|starg(?:\\.s)?|leave(?:\\.s)?|shr(?:\\.un)?|rem(?:\\.un)?|div(?:\\.un)?|clt(?:\\.un)?|alignment|ldvirtftn|castclass|beq(?:\\.s)?|mkrefany|localloc|ckfinite|rethrow|ldtoken|ldsflda|cgt\\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|cgt|ceq|box|and|or|br)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    number: /\\b-?(?:0x[0-9a-f]+|[0-9]+)(?:\\.[0-9a-f]+)?\\b/i,\n    punctuation: /[{}[\\];(),:=]|IL_[0-9A-Za-z]+/\n  }\n}\n","'use strict'\n\nmodule.exports = clike\nclike.displayName = 'clike'\nclike.aliases = []\nfunction clike(Prism) {\n  Prism.languages.clike = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /[.\\\\]/\n      }\n    },\n    keyword:\n      /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    function: /\\b\\w+(?=\\()/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = clojure\nclojure.displayName = 'clojure'\nclojure.aliases = []\nfunction clojure(Prism) {\n  // Copied from https://github.com/jeluard/prism-clojure\n  Prism.languages.clojure = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: [\n      {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      }, // characters\n      /\\\\\\w+/\n    ],\n    symbol: {\n      pattern: /(^|[\\s()\\[\\]{},])::?[\\w*+!?'<>=/.-]+/,\n      lookbehind: true\n    },\n    keyword: {\n      pattern:\n        /(\\()(?:-|->|->>|\\.|\\.\\.|\\*|\\/|\\+|<|<=|=|==|>|>=|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|cond|conj|cons|constantly|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|declare|def|def-|definline|definterface|defmacro|defmethod|defmulti|defn|defn-|defonce|defproject|defprotocol|defrecord|defstruct|deftype|deref|difference|disj|dissoc|distinct|do|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|fn|fnseq|for|frest|gensym|get|get-proxy-class|hash-map|hash-set|identical\\?|identity|if|if-let|if-not|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|let|line-seq|list|list\\*|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|monitor-enter|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|quote|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|recur|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|set!|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|throw|time|to-array|to-array-2d|tree-seq|true\\?|try|union|up|update-proxy|val|vals|var|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[\\s)]|$)/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:true|false|nil)\\b/,\n    number: {\n      pattern:\n        /(^|[^\\w$@])(?:\\d+(?:[/.]\\d+)?(?:e[+-]?\\d+)?|0x[a-f0-9]+|[1-9]\\d?r[a-z0-9]+)[lmn]?(?![\\w$@])/i,\n      lookbehind: true\n    },\n    function: {\n      pattern: /((?:^|[^'])\\()[\\w*+!?'<>=/.-]+(?=[\\s)]|$)/,\n      lookbehind: true\n    },\n    operator: /[#@^`~]/,\n    punctuation: /[{}\\[\\](),]/\n  }\n}\n","'use strict'\n\nmodule.exports = cmake\ncmake.displayName = 'cmake'\ncmake.aliases = []\nfunction cmake(Prism) {\n  Prism.languages.cmake = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{(?:[^{}$]|\\$\\{[^{}$]*\\})*\\}/,\n          inside: {\n            punctuation: /\\$\\{|\\}/,\n            variable: /\\w+/\n          }\n        }\n      }\n    },\n    variable:\n      /\\b(?:CMAKE_\\w+|\\w+_(?:VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?|(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_(?:BINARY_DIR|DESCRIPTION|HOMEPAGE_URL|NAME|SOURCE_DIR|VERSION|VERSION_(?:MAJOR|MINOR|PATCH|TWEAK))|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE|XCODE_VERSION))\\b/,\n    property:\n      /\\b(?:cxx_\\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\\w+|\\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|GLOBAL_KEYWORD|GLOBAL_PROJECT_TYPES|GLOBAL_ROOTNAMESPACE|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\\b/,\n    keyword:\n      /\\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\\s*\\()\\b/,\n    boolean: /\\b(?:ON|OFF|TRUE|FALSE)\\b/,\n    namespace:\n      /\\b(?:PROPERTIES|SHARED|PRIVATE|STATIC|PUBLIC|INTERFACE|TARGET_OBJECTS)\\b/,\n    operator:\n      /\\b(?:NOT|AND|OR|MATCHES|LESS|GREATER|EQUAL|STRLESS|STRGREATER|STREQUAL|VERSION_LESS|VERSION_EQUAL|VERSION_GREATER|DEFINED)\\b/,\n    inserted: {\n      pattern: /\\b\\w+::\\w+\\b/,\n      alias: 'class-name'\n    },\n    number: /\\b\\d+(?:\\.\\d+)*\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()\\b/i,\n    punctuation: /[()>}]|\\$[<{]/\n  }\n}\n","'use strict'\n\nmodule.exports = cobol\ncobol.displayName = 'cobol'\ncobol.aliases = []\nfunction cobol(Prism) {\n  Prism.languages.cobol = {\n    comment: {\n      pattern: /\\*>.*|(^[ \\t]*)\\*.*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /[xzgn]?(?:\"(?:[^\\r\\n\"]|\"\")*\"(?!\")|'(?:[^\\r\\n']|'')*'(?!'))/i,\n      greedy: true\n    },\n    level: {\n      pattern: /(^[ \\t]*)\\d+\\b/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'number'\n    },\n    'class-name': {\n      // https://github.com/antlr/grammars-v4/blob/42edd5b687d183b5fa679e858a82297bd27141e7/cobol85/Cobol85.g4#L1015\n      pattern:\n        /(\\bpic(?:ture)?\\s+)(?:(?:[-\\w$/,:*+<>]|\\.(?!\\s|$))(?:\\(\\d+\\))?)+/i,\n      lookbehind: true,\n      inside: {\n        number: {\n          pattern: /(\\()\\d+/,\n          lookbehind: true\n        },\n        punctuation: /[()]/\n      }\n    },\n    keyword: {\n      pattern:\n        /(^|[^\\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOUNDS|BOTTOM|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COLLATING|COL|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOP|ERASE|ERROR|EOL|EOS|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTIONNAME|FUNCTION-POINTER|GENERATE|GOBACK|GIVING|GLOBAL|GO|GRID|GROUP|HEADING|HIGHLIGHT|HIGH-VALUE|HIGH-VALUES|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINES|LINE-COUNTER|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOWER|LOWLIGHT|LOW-VALUE|LOW-VALUES|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|POSITION|POSITIVE|PORT|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|READER|REMOTE|RD|REAL|READ|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|REVERSE-VIDEO|RESET|RETURN|RETURN-CODE|RETURNING|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TASK|TAPE|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYMMDD|YYYYDDD|ZERO-FILL|ZEROS|ZEROES)(?![\\w-])/i,\n      lookbehind: true\n    },\n    boolean: {\n      pattern: /(^|[^\\w-])(?:false|true)(?![\\w-])/i,\n      lookbehind: true\n    },\n    number: {\n      pattern:\n        /(^|[^\\w-])(?:[+-]?(?:(?:\\d+(?:[.,]\\d+)?|[.,]\\d+)(?:e[+-]?\\d+)?|zero))(?![\\w-])/i,\n      lookbehind: true\n    },\n    operator: [\n      /<>|[<>]=?|[=+*/&]/,\n      {\n        pattern: /(^|[^\\w-])(?:-|and|equal|greater|less|not|or|than)(?![\\w-])/i,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[.:,()]/\n  }\n}\n","'use strict'\n\nmodule.exports = coffeescript\ncoffeescript.displayName = 'coffeescript'\ncoffeescript.aliases = ['coffee']\nfunction coffeescript(Prism) {\n  ;(function (Prism) {\n    // Ignore comments starting with { to privilege string interpolation highlighting\n    var comment = /#(?!\\{).+/\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      alias: 'variable'\n    }\n    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n      comment: comment,\n      string: [\n        // Strings are multiline\n        {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true\n        },\n        {\n          // Strings are multiline\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ],\n      keyword:\n        /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n      'class-member': {\n        pattern: /@(?!\\d)\\w+/,\n        alias: 'variable'\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'comment', {\n      'multiline-comment': {\n        pattern: /###[\\s\\S]+?###/,\n        alias: 'comment'\n      },\n      // Block regexp can contain comments and interpolation\n      'block-regex': {\n        pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n        alias: 'regex',\n        inside: {\n          comment: comment,\n          interpolation: interpolation\n        }\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'string', {\n      'inline-javascript': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          },\n          script: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-javascript',\n            inside: Prism.languages.javascript\n          }\n        }\n      },\n      // Block strings\n      'multiline-string': [\n        {\n          pattern: /'''[\\s\\S]*?'''/,\n          greedy: true,\n          alias: 'string'\n        },\n        {\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ]\n    })\n    Prism.languages.insertBefore('coffeescript', 'keyword', {\n      // Object property\n      property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n    })\n    delete Prism.languages.coffeescript['template-string']\n    Prism.languages.coffee = Prism.languages.coffeescript\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = concurnas\nconcurnas.displayName = 'concurnas'\nconcurnas.aliases = ['conc']\nfunction concurnas(Prism) {\n  Prism.languages.concurnas = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    langext: {\n      pattern: /\\b\\w+\\s*\\|\\|[\\s\\S]+?\\|\\|/,\n      greedy: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /\\b0b[01][01_]*L?\\b|\\b0x(?:[\\da-f_]*\\.)?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfls]?/i,\n    punctuation: /[{}[\\];(),.:]/,\n    operator:\n      /<==|>==|=>|->|<-|<>|\\^|&==|&<>|!|\\?:?|\\.\\?|\\+\\+|--|[-+*/=<>]=?|\\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\\b=?/,\n    annotation: {\n      pattern: /@(?:\\w+:)?(?:\\w+|\\[[^\\]]+\\])?/,\n      alias: 'builtin'\n    }\n  }\n  Prism.languages.insertBefore('concurnas', 'langext', {\n    string: {\n      pattern: /[rs]?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: Prism.languages.concurnas\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.conc = Prism.languages.concurnas\n}\n","'use strict'\n\nmodule.exports = coq\ncoq.displayName = 'coq'\ncoq.aliases = []\nfunction coq(Prism) {\n  ;(function (Prism) {\n    // https://github.com/coq/coq\n    var commentSource = /\\(\\*(?:[^(*]|\\((?!\\*)|\\*(?!\\))|<self>)*\\*\\)/.source\n    for (var i = 0; i < 2; i++) {\n      commentSource = commentSource.replace(/<self>/g, function () {\n        return commentSource\n      })\n    }\n    commentSource = commentSource.replace(/<self>/g, '[]')\n    Prism.languages.coq = {\n      comment: RegExp(commentSource),\n      string: {\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n        greedy: true\n      },\n      attribute: [\n        {\n          pattern: RegExp(\n            /#\\[(?:[^\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\((?!\\*)|<comment>)*\\]/.source.replace(\n              /<comment>/g,\n              function () {\n                return commentSource\n              }\n            )\n          ),\n          greedy: true,\n          alias: 'attr-name',\n          inside: {\n            comment: RegExp(commentSource),\n            string: {\n              pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n              greedy: true\n            },\n            operator: /=/,\n            punctuation: /^#\\[|\\]$|[,()]/\n          }\n        },\n        {\n          pattern:\n            /\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,\n          alias: 'attr-name'\n        }\n      ],\n      keyword:\n        /\\b(?:_|Abort|About|Add|Admit|Admitted|All|apply|Arguments|as|As|Assumptions|at|Axiom|Axioms|Back|BackTo|Backtrace|Bind|BinOp|BinOpSpec|BinRel|Blacklist|by|Canonical|Case|Cd|Check|Class|Classes|Close|Coercion|Coercions|cofix|CoFixpoint|CoInductive|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|else|end|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|exists|exists2|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|fix|Fixpoint|Flags|Focus|for|forall|From|fun|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|Identity|if|IF|Immediate|Implicit|Implicits|Import|in|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|let|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|match|Match|measure|Method|Minimality|ML|Module|Modules|Morphism|move|Next|NoInline|Notation|Number|Obligation|Obligations|OCaml|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|Property|PropOp|Proposition|PropUOp|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|removed|Require|Reserved|Reset|Resolve|Restart|return|Rewrite|Right|Ring|Rings|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|SProp|Step|Strategies|Strategy|String|struct|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|then|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|UnOp|UnOpSpec|Unshelve|using|Variable|Variables|Variant|Verbose|View|Visibility|wf|where|with|Zify)\\b/,\n      number:\n        /\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,\n      punct: {\n        pattern: /@\\{|\\{\\||\\[=|:>/,\n        alias: 'punctuation'\n      },\n      operator:\n        /\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,\n      punctuation: /\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = cpp\ncpp.displayName = 'cpp'\ncpp.aliases = []\nfunction cpp(Prism) {\n  Prism.register(refractorC)\n  ;(function (Prism) {\n    var keyword =\n      /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char8_t|char16_t|char32_t|class|compl|concept|const|consteval|constexpr|constinit|const_cast|continue|co_await|co_return|co_yield|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/\n    var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(\n      /<keyword>/g,\n      function () {\n        return keyword.source\n      }\n    )\n    Prism.languages.cpp = Prism.languages.extend('c', {\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(\n              /<keyword>/g,\n              function () {\n                return keyword.source\n              }\n            )\n          ),\n          lookbehind: true\n        }, // This is intended to capture the class name of method implementations like:\n        //   void foo::bar() const {}\n        // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n        // it starts with an uppercase letter. This approximation should give decent results.\n        /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n        //   Foo::~Foo() {}\n        /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n        // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n        /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n      ],\n      keyword: keyword,\n      number: {\n        pattern:\n          /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n        greedy: true\n      },\n      operator:\n        />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n      boolean: /\\b(?:true|false)\\b/\n    })\n    Prism.languages.insertBefore('cpp', 'string', {\n      module: {\n        // https://en.cppreference.com/w/cpp/language/modules\n        pattern: RegExp(\n          /(\\b(?:module|import)\\s+)/.source +\n            '(?:' + // header-name\n            /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source +\n            '|' + // module name or partition or both\n            /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(\n              /<mod-name>/g,\n              function () {\n                return modName\n              }\n            ) +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: /^[<\"][\\s\\S]+/,\n          operator: /:/,\n          punctuation: /\\./\n        }\n      },\n      'raw-string': {\n        pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n        alias: 'string',\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'keyword', {\n      'generic-function': {\n        pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            alias: 'class-name',\n            inside: Prism.languages.cpp\n          }\n        }\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'class-name', {\n      // the base clause is an optional list of parent classes\n      // https://en.cppreference.com/w/cpp/language/class\n      'base-clause': {\n        pattern:\n          /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: Prism.languages.extend('cpp', {})\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'double-colon',\n      {\n        // All untokenized words that are not namespaces should be class names\n        'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n      },\n      Prism.languages.cpp['base-clause']\n    )\n  })(Prism)\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nmodule.exports = crystal\ncrystal.displayName = 'crystal'\ncrystal.aliases = []\nfunction crystal(Prism) {\n  Prism.register(refractorRuby)\n  ;(function (Prism) {\n    Prism.languages.crystal = Prism.languages.extend('ruby', {\n      keyword: [\n        /\\b(?:abstract|alias|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|rescue|return|require|select|self|sizeof|struct|super|then|type|typeof|uninitialized|union|unless|until|when|while|with|yield|__DIR__|__END_LINE__|__FILE__|__LINE__)\\b/,\n        {\n          pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/\n    })\n    Prism.languages.insertBefore('crystal', 'string', {\n      attribute: {\n        pattern: /@\\[.+?\\]/,\n        alias: 'attr-name',\n        inside: {\n          delimiter: {\n            pattern: /^@\\[|\\]$/,\n            alias: 'tag'\n          },\n          rest: Prism.languages.crystal\n        }\n      },\n      expansion: [\n        {\n          pattern: /\\{\\{.+?\\}\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^\\{\\{|\\}\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.crystal\n          }\n        },\n        {\n          pattern: /\\{%.+?%\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^\\{%|%\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.crystal\n          }\n        }\n      ]\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csharp\ncsharp.displayName = 'csharp'\ncsharp.aliases = ['dotnet', 'cs']\nfunction csharp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    } // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void',\n      // keywords which are used to declare a type\n      typeDeclaration: 'class enum interface record struct',\n      // contextual keywords\n      // (\"var\" and \"dynamic\" are missing because they are used like types)\n      contextual:\n        'add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)',\n      // all other keywords\n      other:\n        'abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield'\n    } // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var typeDeclarationKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration\n    )\n    var keywords = RegExp(\n      keywordsToPattern(\n        keywordKinds.type +\n          ' ' +\n          keywordKinds.typeDeclaration +\n          ' ' +\n          keywordKinds.contextual +\n          ' ' +\n          keywordKinds.other\n      )\n    )\n    var nonTypeKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.contextual +\n        ' ' +\n        keywordKinds.other\n    )\n    var nonContextualKeywords = keywordsToPattern(\n      keywordKinds.type +\n        ' ' +\n        keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.other\n    ) // types\n    var generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2) // the idea behind the other forbidden characters is to prevent false positives. Same for tupleElement.\n    var nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2)\n    var name = /@?\\b[A-Za-z_]\\w*\\b/.source\n    var genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [name, generic])\n    var identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [\n      nonTypeKeywords,\n      genericName\n    ])\n    var array = /\\[\\s*(?:,\\s*)*\\]/.source\n    var typeExpressionWithoutTuple = replace(\n      /<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source,\n      [identifier, array]\n    )\n    var tupleElement = replace(\n      /[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source,\n      [generic, nestedRound, array]\n    )\n    var tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [tupleElement])\n    var typeExpression = replace(\n      /(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source,\n      [tuple, identifier, array]\n    )\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    } // strings & characters\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#character-literals\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#string-literals\n    var character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source // simplified pattern\n    var regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source\n    var verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source\n    Prism.languages.csharp = Prism.languages.extend('clike', {\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [verbatimString]),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: re(/(^|[^@$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: RegExp(character),\n          greedy: true,\n          alias: 'character'\n        }\n      ],\n      'class-name': [\n        {\n          // Using static\n          // using static System.Math;\n          pattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [\n            identifier\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (type)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [\n            name,\n            typeExpression\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (alias)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Type declarations\n          // class Foo<A, B>\n          // interface Foo<out A, B>\n          pattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [\n            typeDeclarationKeywords,\n            genericName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Single catch exception declaration\n          // catch(Foo)\n          // (things like catch(Foo e) is covered by variable declaration)\n          pattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [identifier]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Name of the type parameter of generic constraints\n          // where Foo : class\n          pattern: re(/(\\bwhere\\s+)<<0>>/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Casts and checks via as and is.\n          // as Foo<A>, is Bar<B>\n          // (things like if(a is Foo b) is covered by variable declaration)\n          pattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [\n            typeExpressionWithoutTuple\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Variable, field and parameter declaration\n          // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)\n          pattern: re(\n            /\\b<<0>>(?=\\s+(?!<<1>>|with\\s*\\{)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/\n              .source,\n            [typeExpression, nonContextualKeywords, name]\n          ),\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals\n      number:\n        /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:ul|lu|[dflmu])?\\b/i,\n      operator: />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n      punctuation: /\\?\\.?|::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('csharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'punctuation', {\n      'named-parameter': {\n        pattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [name]),\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      namespace: {\n        // namespace Foo.Bar {}\n        // using Foo.Bar;\n        pattern: re(\n          /(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source,\n          [name]\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      'type-expression': {\n        // default(Foo), typeof(Foo<Bar>), sizeof(int)\n        pattern: re(\n          /(\\b(?:default|typeof|sizeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/\n            .source,\n          [nestedRound]\n        ),\n        lookbehind: true,\n        alias: 'class-name',\n        inside: typeInside\n      },\n      'return-type': {\n        // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0\n        // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];\n        // int Foo => 0; int Foo { get; set } = 0;\n        pattern: re(\n          /<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source,\n          [typeExpression, identifier]\n        ),\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      'constructor-invocation': {\n        // new List<Foo<Bar[]>> { }\n        pattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [typeExpression]),\n        lookbehind: true,\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      /*'explicit-implementation': {\n// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();\npattern: replace(/\\b<<0>>(?=\\.<<1>>)/, className, methodOrPropertyDeclaration),\ninside: classNameInside,\nalias: 'class-name'\n},*/\n      'generic-method': {\n        // foo<Bar>()\n        pattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [name, generic]),\n        inside: {\n          function: re(/^<<0>>/.source, [name]),\n          generic: {\n            pattern: RegExp(generic),\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      },\n      'type-list': {\n        // The list of types inherited or of generic constraints\n        // class Foo<F> : Bar, IList<FooBar>\n        // where F : Bar, IList<int>\n        pattern: re(\n          /\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))/\n            .source,\n          [\n            typeDeclarationKeywords,\n            genericName,\n            name,\n            typeExpression,\n            keywords.source,\n            nestedRound,\n            /\\bnew\\s*\\(\\s*\\)/.source\n          ]\n        ),\n        lookbehind: true,\n        inside: {\n          'record-arguments': {\n            pattern: re(/(^(?!new\\s*\\()<<0>>\\s*)<<1>>/.source, [\n              genericName,\n              nestedRound\n            ]),\n            lookbehind: true,\n            greedy: true,\n            inside: Prism.languages.csharp\n          },\n          keyword: keywords,\n          'class-name': {\n            pattern: RegExp(typeExpression),\n            greedy: true,\n            inside: typeInside\n          },\n          punctuation: /[,()]/\n        }\n      },\n      preprocessor: {\n        pattern: /(^[\\t ]*)#.*/m,\n        lookbehind: true,\n        alias: 'property',\n        inside: {\n          // highlight preprocessor directives as keywords\n          directive: {\n            pattern:\n              /(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      }\n    }) // attributes\n    var regularStringOrCharacter = regularString + '|' + character\n    var regularStringCharacterOrComment = replace(\n      /\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source,\n      [regularStringOrCharacter]\n    )\n    var roundExpression = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    ) // https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/#attribute-targets\n    var attrTarget =\n      /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/\n        .source\n    var attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [\n      identifier,\n      roundExpression\n    ])\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      attribute: {\n        // Attributes\n        // [Foo], [Foo(1), Bar(2, Prop = \"foo\")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]\n        pattern: re(\n          /((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/\n            .source,\n          [attrTarget, attr]\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          target: {\n            pattern: re(/^<<0>>(?=\\s*:)/.source, [attrTarget]),\n            alias: 'keyword'\n          },\n          'attribute-arguments': {\n            pattern: re(/\\(<<0>>*\\)/.source, [roundExpression]),\n            inside: Prism.languages.csharp\n          },\n          'class-name': {\n            pattern: RegExp(identifier),\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          punctuation: /[:,]/\n        }\n      }\n    }) // string interpolation\n    var formatString = /:[^}\\r\\n]+/.source // multi line\n    var mInterpolationRound = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    )\n    var mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      mInterpolationRound,\n      formatString\n    ]) // single line\n    var sInterpolationRound = nested(\n      replace(\n        /[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/\n          .source,\n        [regularStringOrCharacter]\n      ),\n      2\n    )\n    var sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      sInterpolationRound,\n      formatString\n    ])\n    function createInterpolationInside(interpolation, interpolationRound) {\n      return {\n        interpolation: {\n          pattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [interpolation]),\n          lookbehind: true,\n          inside: {\n            'format-string': {\n              pattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [\n                interpolationRound,\n                formatString\n              ]),\n              lookbehind: true,\n              inside: {\n                punctuation: /^:/\n              }\n            },\n            punctuation: /^\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              alias: 'language-csharp',\n              inside: Prism.languages.csharp\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.insertBefore('csharp', 'string', {\n      'interpolation-string': [\n        {\n          pattern: re(\n            /(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source,\n            [mInterpolation]\n          ),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(mInterpolation, mInterpolationRound)\n        },\n        {\n          pattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [\n            sInterpolation\n          ]),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(sInterpolation, sInterpolationRound)\n        }\n      ]\n    })\n  })(Prism)\n  Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp\n}\n","'use strict'\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = cshtml\ncshtml.displayName = 'cshtml'\ncshtml.aliases = ['razor']\nfunction cshtml(Prism) {\n  Prism.register(refractorCsharp)\n  // Docs:\n  // https://docs.microsoft.com/en-us/aspnet/core/razor-pages/?view=aspnetcore-5.0&tabs=visual-studio\n  // https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-5.0\n  ;(function (Prism) {\n    var commentLike = /\\/(?![/*])|\\/\\/.*[\\r\\n]|\\/\\*[^*]*(?:\\*(?!\\/)[^*]*)*\\*\\//\n      .source\n    var stringLike =\n      /@(?!\")|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|@\"(?:[^\\\\\"]|\"\"|\\\\[\\s\\S])*\"(?!\")/.source +\n      '|' +\n      /'(?:(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'|(?=[^\\\\](?!')))/.source\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<self>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern\n        .replace(/<self>/g, '[^\\\\s\\\\S]')\n        .replace(/<str>/g, '(?:' + stringLike + ')')\n        .replace(/<comment>/g, '(?:' + commentLike + ')')\n    }\n    var round = nested(/\\((?:[^()'\"@/]|<str>|<comment>|<self>)*\\)/.source, 2)\n    var square = nested(/\\[(?:[^\\[\\]'\"@/]|<str>|<comment>|<self>)*\\]/.source, 2)\n    var curly = nested(/\\{(?:[^{}'\"@/]|<str>|<comment>|<self>)*\\}/.source, 2)\n    var angle = nested(/<(?:[^<>'\"@/]|<str>|<comment>|<self>)*>/.source, 2) // Note about the above bracket patterns:\n    // They all ignore HTML expressions that might be in the C# code. This is a problem because HTML (like strings and\n    // comments) is parsed differently. This is a huge problem because HTML might contain brackets and quotes which\n    // messes up the bracket and string counting implemented by the above patterns.\n    //\n    // This problem is not fixable because 1) HTML expression are highly context sensitive and very difficult to detect\n    // and 2) they require one capturing group at every nested level. See the `tagRegion` pattern to admire the\n    // complexity of an HTML expression.\n    //\n    // To somewhat alleviate the problem a bit, the patterns for characters (e.g. 'a') is very permissive, it also\n    // allows invalid characters to support HTML expressions like this: <p>That's it!</p>.\n    var tagAttrs =\n      /(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?/\n        .source\n    var tagContent = /(?!\\d)[^\\s>\\/=$<%]+/.source + tagAttrs + /\\s*\\/?>/.source\n    var tagRegion =\n      /\\B@?/.source +\n      '(?:' +\n      /<([a-zA-Z][\\w:]*)/.source +\n      tagAttrs +\n      /\\s*>/.source +\n      '(?:' +\n      (/[^<]/.source +\n        '|' + // all tags that are not the start tag\n        // eslint-disable-next-line regexp/strict\n        /<\\/?(?!\\1\\b)/.source +\n        tagContent +\n        '|' + // nested start tag\n        nested(\n          // eslint-disable-next-line regexp/strict\n          /<\\1/.source +\n            tagAttrs +\n            /\\s*>/.source +\n            '(?:' +\n            (/[^<]/.source +\n              '|' + // all tags that are not the start tag\n              // eslint-disable-next-line regexp/strict\n              /<\\/?(?!\\1\\b)/.source +\n              tagContent +\n              '|' +\n              '<self>') +\n            ')*' + // eslint-disable-next-line regexp/strict\n            /<\\/\\1\\s*>/.source,\n          2\n        )) +\n      ')*' + // eslint-disable-next-line regexp/strict\n      /<\\/\\1\\s*>/.source +\n      '|' +\n      /</.source +\n      tagContent +\n      ')' // Now for the actual language definition(s):\n    //\n    // Razor as a language has 2 parts:\n    //  1) CSHTML: A markup-like language that has been extended with inline C# code expressions and blocks.\n    //  2) C#+HTML: A variant of C# that can contain CSHTML tags as expressions.\n    //\n    // In the below code, both CSHTML and C#+HTML will be create as separate language definitions that reference each\n    // other. However, only CSHTML will be exported via `Prism.languages`.\n    Prism.languages.cshtml = Prism.languages.extend('markup', {})\n    var csharpWithHtml = Prism.languages.insertBefore(\n      'csharp',\n      'string',\n      {\n        html: {\n          pattern: RegExp(tagRegion),\n          greedy: true,\n          inside: Prism.languages.cshtml\n        }\n      },\n      {\n        csharp: Prism.languages.extend('csharp', {})\n      }\n    )\n    var cs = {\n      pattern: /\\S[\\s\\S]*/,\n      alias: 'language-csharp',\n      inside: csharpWithHtml\n    }\n    Prism.languages.insertBefore('cshtml', 'prolog', {\n      'razor-comment': {\n        pattern: /@\\*[\\s\\S]*?\\*@/,\n        greedy: true,\n        alias: 'comment'\n      },\n      block: {\n        pattern: RegExp(\n          /(^|[^@])@/.source +\n            '(?:' +\n            [\n              // @{ ... }\n              curly, // @code{ ... }\n              /(?:code|functions)\\s*/.source + curly, // @for (...) { ... }\n              /(?:for|foreach|lock|switch|using|while)\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly, // @do { ... } while (...);\n              /do\\s*/.source +\n                curly +\n                /\\s*while\\s*/.source +\n                round +\n                /(?:\\s*;)?/.source, // @try { ... } catch (...) { ... } finally { ... }\n              /try\\s*/.source +\n                curly +\n                /\\s*catch\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly +\n                /\\s*finally\\s*/.source +\n                curly, // @if (...) {...} else if (...) {...} else {...}\n              /if\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly +\n                '(?:' +\n                /\\s*else/.source +\n                '(?:' +\n                /\\s+if\\s*/.source +\n                round +\n                ')?' +\n                /\\s*/.source +\n                curly +\n                ')*'\n            ].join('|') +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^@\\w*/,\n          csharp: cs\n        }\n      },\n      directive: {\n        pattern:\n          /^([ \\t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\\s).*/m,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^@\\w+/,\n          csharp: cs\n        }\n      },\n      value: {\n        pattern: RegExp(\n          /(^|[^@])@/.source +\n            /(?:await\\b\\s*)?/.source +\n            '(?:' +\n            /\\w+\\b/.source +\n            '|' +\n            round +\n            ')' +\n            '(?:' +\n            /[?!]?\\.\\w+\\b/.source +\n            '|' +\n            round +\n            '|' +\n            square +\n            '|' +\n            angle +\n            round +\n            ')*'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'variable',\n        inside: {\n          keyword: /^@/,\n          csharp: cs\n        }\n      },\n      'delegate-operator': {\n        pattern: /(^|[^@])@(?=<)/,\n        lookbehind: true,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.razor = Prism.languages.cshtml\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csp\ncsp.displayName = 'csp'\ncsp.aliases = []\nfunction csp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\n   *\n   * Supports the following:\n   *  - CSP Level 1\n   *  - CSP Level 2\n   *  - CSP Level 3\n   */\n  Prism.languages.csp = {\n    directive: {\n      pattern:\n        /(^|[^-\\da-z])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[^-\\da-z]|$)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    safe: {\n      // CSP2 hashes and nonces are base64 values. CSP3 accepts both base64 and base64url values.\n      // See https://tools.ietf.org/html/rfc4648#section-4\n      // See https://tools.ietf.org/html/rfc4648#section-5\n      pattern:\n        /'(?:deny|none|report-sample|self|strict-dynamic|top-only|(?:nonce|sha(?:256|384|512))-[-+/\\w=]+)'/i,\n      alias: 'selector'\n    },\n    unsafe: {\n      pattern:\n        /(?:'unsafe-(?:allow-redirects|dynamic|eval|hash-attributes|hashed-attributes|hashes|inline)'|\\*)/i,\n      alias: 'function'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = cssExtras\ncssExtras.displayName = 'cssExtras'\ncssExtras.aliases = []\nfunction cssExtras(Prism) {\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var selectorInside\n    Prism.languages.css.selector = {\n      pattern: Prism.languages.css.selector.pattern,\n      lookbehind: true,\n      inside: (selectorInside = {\n        'pseudo-element':\n          /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n        'pseudo-class': /:[-\\w]+/,\n        class: /\\.[-\\w]+/,\n        id: /#[-\\w]+/,\n        attribute: {\n          pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n          greedy: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            'case-sensitivity': {\n              pattern: /(\\s)[si]$/i,\n              lookbehind: true,\n              alias: 'keyword'\n            },\n            namespace: {\n              pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n              lookbehind: true,\n              inside: {\n                punctuation: /\\|$/\n              }\n            },\n            'attr-name': {\n              pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n              lookbehind: true\n            },\n            'attr-value': [\n              string,\n              {\n                pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n                lookbehind: true\n              }\n            ],\n            operator: /[|~*^$]?=/\n          }\n        },\n        'n-th': [\n          {\n            pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n            lookbehind: true,\n            inside: {\n              number: /[\\dn]+/,\n              operator: /[+-]/\n            }\n          },\n          {\n            pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n            lookbehind: true\n          }\n        ],\n        combinator: />|\\+|~|\\|\\|/,\n        // the `tag` token has been existed and removed.\n        // because we can't find a perfect tokenize to match it.\n        // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n        punctuation: /[(),]/\n      })\n    }\n    Prism.languages.css['atrule'].inside['selector-function-argument'].inside =\n      selectorInside\n    Prism.languages.insertBefore('css', 'property', {\n      variable: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n        lookbehind: true\n      }\n    })\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n      lookbehind: true\n    } // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    }\n    Prism.languages.insertBefore('css', 'function', {\n      operator: {\n        pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n        lookbehind: true\n      },\n      // CAREFUL!\n      // Previewers and Inline color use hexcode and color.\n      hexcode: {\n        pattern: /\\B#[\\da-f]{3,8}\\b/i,\n        alias: 'color'\n      },\n      color: [\n        {\n          pattern:\n            /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      // it's important that there is no boundary assertion after the hex digits\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      number: number\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = css\ncss.displayName = 'css'\ncss.aliases = []\nfunction css(Prism) {\n  ;(function (Prism) {\n    var string =\n      /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n        inside: {\n          rule: /^@[\\w-]+/,\n          'selector-function-argument': {\n            pattern:\n              /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n            lookbehind: true,\n            alias: 'selector'\n          },\n          keyword: {\n            pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n            lookbehind: true\n          } // See rest below\n        }\n      },\n      url: {\n        // https://drafts.csswg.org/css-values-3/#urls\n        pattern: RegExp(\n          '\\\\burl\\\\((?:' +\n            string.source +\n            '|' +\n            /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source +\n            ')\\\\)',\n          'i'\n        ),\n        greedy: true,\n        inside: {\n          function: /^url/i,\n          punctuation: /^\\(|\\)$/,\n          string: {\n            pattern: RegExp('^' + string.source + '$'),\n            alias: 'url'\n          }\n        }\n      },\n      selector: {\n        pattern: RegExp(\n          '(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' +\n            string.source +\n            ')*(?=\\\\s*\\\\{)'\n        ),\n        lookbehind: true\n      },\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      property: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n        lookbehind: true\n      },\n      important: /!important\\b/i,\n      function: {\n        pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n        lookbehind: true\n      },\n      punctuation: /[(){};:,]/\n    }\n    Prism.languages.css['atrule'].inside.rest = Prism.languages.css\n    var markup = Prism.languages.markup\n    if (markup) {\n      markup.tag.addInlined('style', 'css')\n      markup.tag.addAttribute('style', 'css')\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csv\ncsv.displayName = 'csv'\ncsv.aliases = []\nfunction csv(Prism) {\n  // https://tools.ietf.org/html/rfc4180\n  Prism.languages.csv = {\n    value: /[^\\r\\n,\"]+|\"(?:[^\"]|\"\")*\"(?!\")/,\n    punctuation: /,/\n  }\n}\n","'use strict'\n\nmodule.exports = cypher\ncypher.displayName = 'cypher'\ncypher.aliases = []\nfunction cypher(Prism) {\n  Prism.languages.cypher = {\n    // https://neo4j.com/docs/cypher-manual/current/syntax/comments/\n    comment: /\\/\\/.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)(?=\\s*[{):])/,\n      lookbehind: true,\n      greedy: true\n    },\n    relationship: {\n      pattern:\n        /(-\\[\\s*(?:\\w+\\s*|`(?:[^`\\\\\\r\\n])*`\\s*)?:\\s*|\\|\\s*:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    identifier: {\n      pattern: /`(?:[^`\\\\\\r\\n])*`/,\n      greedy: true,\n      alias: 'symbol'\n    },\n    variable: /\\$\\w+/,\n    // https://neo4j.com/docs/cypher-manual/current/syntax/reserved/\n    keyword:\n      /\\b(?:ADD|ALL|AND|AS|ASC|ASCENDING|ASSERT|BY|CALL|CASE|COMMIT|CONSTRAINT|CONTAINS|CREATE|CSV|DELETE|DESC|DESCENDING|DETACH|DISTINCT|DO|DROP|ELSE|END|ENDS|EXISTS|FOR|FOREACH|IN|INDEX|IS|JOIN|KEY|LIMIT|LOAD|MANDATORY|MATCH|MERGE|NODE|NOT|OF|ON|OPTIONAL|OR|ORDER(?=\\s+BY)|PERIODIC|REMOVE|REQUIRE|RETURN|SCALAR|SCAN|SET|SKIP|START|STARTS|THEN|UNION|UNIQUE|UNWIND|USING|WHEN|WHERE|WITH|XOR|YIELD)\\b/i,\n    function: /\\b\\w+\\b(?=\\s*\\()/,\n    boolean: /\\b(?:true|false|null)\\b/i,\n    number: /\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)\\b/,\n    // https://neo4j.com/docs/cypher-manual/current/syntax/operators/\n    operator: /:|<--?|--?>?|<>|=~?|[<>]=?|[+*/%^|]|\\.\\.\\.?/,\n    punctuation: /[()[\\]{},;.]/\n  }\n}\n","'use strict'\n\nmodule.exports = d\nd.displayName = 'd'\nd.aliases = []\nfunction d(Prism) {\n  Prism.languages.d = Prism.languages.extend('clike', {\n    comment: [\n      {\n        // Shebang\n        pattern: /^\\s*#!.+/,\n        greedy: true\n      },\n      {\n        pattern: RegExp(\n          /(^|[^\\\\])/.source +\n            '(?:' +\n            [\n              // /+ comment +/\n              // Allow one level of nesting\n              /\\/\\+(?:\\/\\+(?:[^+]|\\+(?!\\/))*\\+\\/|(?!\\/\\+)[\\s\\S])*?\\+\\//.source, // // comment\n              /\\/\\/.*/.source, // /* comment */\n              /\\/\\*[\\s\\S]*?\\*\\//.source\n            ].join('|') +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: RegExp(\n          [\n            // r\"\", x\"\"\n            /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/.source, // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n            /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/.source, // q\"IDENT\n            // ...\n            // IDENT\"\n            /\\bq\"((?!\\d)\\w+)$[\\s\\S]*?^\\1\"/.source, // q\"//\", q\"||\", etc.\n            // eslint-disable-next-line regexp/strict\n            /\\bq\"(.)[\\s\\S]*?\\2\"/.source, // Characters\n            // 'a', '\\\\', '\\n', '\\xFF', '\\377', '\\uFFFF', '\\U0010FFFF', '\\quot'\n            /'(?:\\\\(?:\\W|\\w+)|[^\\\\])'/.source, // eslint-disable-next-line regexp/strict\n            /([\"`])(?:\\\\[\\s\\S]|(?!\\3)[^\\\\])*\\3[cwd]?/.source\n          ].join('|'),\n          'm'\n        ),\n        greedy: true\n      },\n      {\n        pattern: /\\bq\\{(?:\\{[^{}]*\\}|[^{}])*\\}/,\n        greedy: true,\n        alias: 'token-string'\n      }\n    ],\n    // In order: $, keywords and special tokens, globally defined symbols\n    keyword:\n      /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,\n    number: [\n      // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n      // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n      /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]{0,4}/i,\n      {\n        pattern:\n          /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]{0,4}/i,\n        lookbehind: true\n      }\n    ],\n    operator:\n      /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n  })\n  Prism.languages.insertBefore('d', 'keyword', {\n    property: /\\B@\\w*/\n  })\n  Prism.languages.insertBefore('d', 'function', {\n    register: {\n      // Iasm registers\n      pattern:\n        /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n      alias: 'variable'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = dart\ndart.displayName = 'dart'\ndart.aliases = []\nfunction dart(Prism) {\n  ;(function (Prism) {\n    var keywords = [\n      /\\b(?:async|sync|yield)\\*/,\n      /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extension|external|extends|factory|final|finally|for|get|hide|if|implements|interface|import|in|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/\n    ] // Handles named imports, such as http.Client\n    var packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\n      .source // based on the dart naming conventions\n    var className = {\n      pattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        }\n      }\n    }\n    Prism.languages.dart = Prism.languages.extend('clike', {\n      string: [\n        {\n          pattern: /r?(\"\"\"|''')[\\s\\S]*?\\1/,\n          greedy: true\n        },\n        {\n          pattern: /r?([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        className,\n        {\n          // variables and parameters\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      operator:\n        /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n    })\n    Prism.languages.insertBefore('dart', 'function', {\n      metadata: {\n        pattern: /@\\w+/,\n        alias: 'symbol'\n      }\n    })\n    Prism.languages.insertBefore('dart', 'class-name', {\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dataweave\ndataweave.displayName = 'dataweave'\ndataweave.aliases = []\nfunction dataweave(Prism) {\n  ;(function (Prism) {\n    Prism.languages.dataweave = {\n      url: /\\b[A-Za-z]+:\\/\\/[\\w/:.?=&-]+|\\burn:[\\w:.?=&-]+/,\n      property: {\n        pattern: /(?:\\b\\w+#)?(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|\\b\\w+)(?=\\s*[:@])/,\n        greedy: true\n      },\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      'mime-type':\n        /\\b(?:text|audio|video|application|multipart|image)\\/[\\w+-]+/,\n      date: {\n        pattern: /\\|[\\w:+-]+\\|/,\n        greedy: true\n      },\n      comment: [\n        {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      regex: {\n        pattern: /\\/(?:[^\\\\\\/\\r\\n]|\\\\[^\\r\\n])+\\//,\n        greedy: true\n      },\n      function: /\\b[A-Z_]\\w*(?=\\s*\\()/i,\n      number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n      punctuation: /[{}[\\];(),.:@]/,\n      operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\\+\\+?|!|\\?/,\n      boolean: /\\b(?:true|false)\\b/,\n      keyword:\n        /\\b(?:match|input|output|ns|type|update|null|if|else|using|unless|at|is|as|case|do|fun|var|not|and|or)\\b/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dax\ndax.displayName = 'dax'\ndax.aliases = []\nfunction dax(Prism) {\n  Prism.languages.dax = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/).*)/,\n      lookbehind: true\n    },\n    'data-field': {\n      pattern:\n        /'(?:[^']|'')*'(?!')(?:\\[[ \\w\\xA0-\\uFFFF]+\\])?|\\w+\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n      alias: 'symbol'\n    },\n    measure: {\n      pattern: /\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n      alias: 'constant'\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    function:\n      /\\b(?:ABS|ACOS|ACOSH|ACOT|ACOTH|ADDCOLUMNS|ADDMISSINGITEMS|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|AND|APPROXIMATEDISTINCTCOUNT|ASIN|ASINH|ATAN|ATANH|AVERAGE|AVERAGEA|AVERAGEX|BETA\\.DIST|BETA\\.INV|BLANK|CALCULATE|CALCULATETABLE|CALENDAR|CALENDARAUTO|CEILING|CHISQ\\.DIST|CHISQ\\.DIST\\.RT|CHISQ\\.INV|CHISQ\\.INV\\.RT|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|COALESCE|COMBIN|COMBINA|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONFIDENCE\\.NORM|CONFIDENCE\\.T|CONTAINS|CONTAINSROW|CONTAINSSTRING|CONTAINSSTRINGEXACT|CONVERT|COS|COSH|COT|COTH|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSFILTER|CROSSJOIN|CURRENCY|CURRENTGROUP|CUSTOMDATA|DATATABLE|DATE|DATEADD|DATEDIFF|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|DATEVALUE|DAY|DEGREES|DETAILROWS|DISTINCT|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|DIVIDE|EARLIER|EARLIEST|EDATE|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|EOMONTH|ERROR|EVEN|EXACT|EXCEPT|EXP|EXPON\\.DIST|FACT|FALSE|FILTER|FILTERS|FIND|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|FIXED|FLOOR|FORMAT|GCD|GENERATE|GENERATEALL|GENERATESERIES|GEOMEAN|GEOMEANX|GROUPBY|HASONEFILTER|HASONEVALUE|HOUR|IF|IF\\.EAGER|IFERROR|IGNORE|INT|INTERSECT|ISBLANK|ISCROSSFILTERED|ISEMPTY|ISERROR|ISEVEN|ISFILTERED|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISO\\.CEILING|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|KEEPFILTERS|KEYWORDMATCH|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|LCM|LEFT|LEN|LN|LOG|LOG10|LOOKUPVALUE|LOWER|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MID|MIN|MINA|MINUTE|MINX|MOD|MONTH|MROUND|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|NONVISUAL|NORM\\.DIST|NORM\\.INV|NORM\\.S\\.DIST|NORM\\.S\\.INV|NOT|NOW|ODD|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|OR|PARALLELPERIOD|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|PERCENTILE\\.EXC|PERCENTILE\\.INC|PERCENTILEX\\.EXC|PERCENTILEX\\.INC|PERMUT|PI|POISSON\\.DIST|POWER|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|PRODUCT|PRODUCTX|QUARTER|QUOTIENT|RADIANS|RAND|RANDBETWEEN|RANK\\.EQ|RANKX|RELATED|RELATEDTABLE|REMOVEFILTERS|REPLACE|REPT|RIGHT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|ROUND|ROUNDDOWN|ROUNDUP|ROW|SAMEPERIODLASTYEAR|SAMPLE|SEARCH|SECOND|SELECTCOLUMNS|SELECTEDMEASURE|SELECTEDMEASUREFORMATSTRING|SELECTEDMEASURENAME|SELECTEDVALUE|SIGN|SIN|SINH|SQRT|SQRTPI|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|STDEV\\.P|STDEV\\.S|STDEVX\\.P|STDEVX\\.S|SUBSTITUTE|SUBSTITUTEWITHINDEX|SUM|SUMMARIZE|SUMMARIZECOLUMNS|SUMX|SWITCH|T\\.DIST|T\\.DIST\\.2T|T\\.DIST\\.RT|T\\.INV|T\\.INV\\.2T|TAN|TANH|TIME|TIMEVALUE|TODAY|TOPN|TOPNPERLEVEL|TOPNSKIP|TOTALMTD|TOTALQTD|TOTALYTD|TREATAS|TRIM|TRUE|TRUNC|UNICHAR|UNICODE|UNION|UPPER|USERELATIONSHIP|USERNAME|USEROBJECTID|USERPRINCIPALNAME|UTCNOW|UTCTODAY|VALUE|VALUES|VAR\\.P|VAR\\.S|VARX\\.P|VARX\\.S|WEEKDAY|WEEKNUM|XIRR|XNPV|YEAR|YEARFRAC)(?=\\s*\\()/i,\n    keyword:\n      /\\b(?:DEFINE|MEASURE|EVALUATE|ORDER\\s+BY|RETURN|VAR|START\\s+AT|ASC|DESC)\\b/i,\n    boolean: {\n      pattern: /\\b(?:TRUE|FALSE|NULL)\\b/i,\n      alias: 'constant'\n    },\n    number: /\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator: /:=|[-+*\\/=^]|&&?|\\|\\||<(?:=>?|<|>)?|>[>=]?|\\b(?:IN|NOT)\\b/i,\n    punctuation: /[;\\[\\](){}`,.]/\n  }\n}\n","'use strict'\n\nmodule.exports = dhall\ndhall.displayName = 'dhall'\ndhall.aliases = []\nfunction dhall(Prism) {\n  // ABNF grammar:\n  // https://github.com/dhall-lang/dhall-lang/blob/master/standard/dhall.abnf\n  Prism.languages.dhall = {\n    // Multi-line comments can be nested. E.g. {- foo {- bar -} -}\n    // The multi-line pattern is essentially this:\n    //   \\{-(?:[^-{]|-(?!\\})|\\{(?!-)|<SELF>)*-\\}\n    comment:\n      /--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              alias: 'language-dhall',\n              inside: null // see blow\n            },\n            punctuation: /\\$\\{|\\}/\n          }\n        }\n      }\n    },\n    label: {\n      pattern: /`[^`]*`/,\n      greedy: true\n    },\n    url: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L596\n      pattern:\n        /\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,\n      greedy: true\n    },\n    env: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L661\n      pattern: /\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,\n      greedy: true,\n      inside: {\n        function: /^env/,\n        operator: /^:/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    hash: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L725\n      pattern: /\\bsha256:[\\da-fA-F]{64}\\b/,\n      inside: {\n        function: /sha256/,\n        operator: /:/,\n        number: /[\\da-fA-F]{64}/\n      }\n    },\n    // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L359\n    keyword:\n      /\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,\n    builtin: /\\b(?:Some|None)\\b/,\n    boolean: /\\b(?:False|True)\\b/,\n    number:\n      /\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,\n    operator:\n      /\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||===|[!=]=|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,\n    punctuation: /\\.\\.|[{}\\[\\](),./]/,\n    // we'll just assume that every capital word left is a type name\n    'class-name': /\\b[A-Z]\\w*\\b/\n  }\n  Prism.languages.dhall.string.inside.interpolation.inside.expression.inside =\n    Prism.languages.dhall\n}\n","'use strict'\n\nmodule.exports = diff\ndiff.displayName = 'diff'\ndiff.aliases = []\nfunction diff(Prism) {\n  ;(function (Prism) {\n    Prism.languages.diff = {\n      coord: [\n        // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n        /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n        /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n        /^\\d.*$/m\n      ] // deleted, inserted, unchanged, diff\n    }\n    /**\n     * A map from the name of a block to its line prefix.\n     *\n     * @type {Object<string, string>}\n     */\n    var PREFIXES = {\n      'deleted-sign': '-',\n      'deleted-arrow': '<',\n      'inserted-sign': '+',\n      'inserted-arrow': '>',\n      unchanged: ' ',\n      diff: '!'\n    } // add a token for each prefix\n    Object.keys(PREFIXES).forEach(function (name) {\n      var prefix = PREFIXES[name]\n      var alias = []\n      if (!/^\\w+$/.test(name)) {\n        // \"deleted-sign\" -> \"deleted\"\n        alias.push(/\\w+/.exec(name)[0])\n      }\n      if (name === 'diff') {\n        alias.push('bold')\n      }\n      Prism.languages.diff[name] = {\n        pattern: RegExp(\n          '^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+',\n          'm'\n        ),\n        alias: alias,\n        inside: {\n          line: {\n            pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n            lookbehind: true\n          },\n          prefix: {\n            pattern: /[\\s\\S]/,\n            alias: /\\w+/.exec(name)[0]\n          }\n        }\n      }\n    }) // make prefixes available to Diff plugin\n    Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n      value: PREFIXES\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = django\ndjango.displayName = 'django'\ndjango.aliases = ['jinja2']\nfunction django(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n  // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n  ;(function (Prism) {\n    Prism.languages.django = {\n      comment: /^\\{#[\\s\\S]*?#\\}$/,\n      tag: {\n        pattern: /(^\\{%[+-]?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      delimiter: {\n        pattern: /^\\{[{%][+-]?|[+-]?[}%]\\}$/,\n        alias: 'punctuation'\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      filter: {\n        pattern: /(\\|)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      test: {\n        pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b[a-z_]\\w+(?=\\s*\\()/i,\n      keyword:\n        /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      boolean: /[Tt]rue|[Ff]alse|[Nn]one/,\n      variable: /\\b\\w+?\\b/,\n      punctuation: /[{}[\\](),.:;]/\n    }\n    var pattern = /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}|\\{#[\\s\\S]*?#\\}/g\n    var markupTemplating = Prism.languages['markup-templating']\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'django', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'django')\n    }) // Add an Jinja2 alias\n    Prism.languages.jinja2 = Prism.languages.django\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'jinja2', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'jinja2')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dnsZoneFile\ndnsZoneFile.displayName = 'dnsZoneFile'\ndnsZoneFile.aliases = []\nfunction dnsZoneFile(Prism) {\n  Prism.languages['dns-zone-file'] = {\n    comment: /;.*/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(^\\$ORIGIN[ \\t]+)\\S+/m,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|\\s)@(?=\\s|$)/,\n        lookbehind: true\n      }\n    ],\n    keyword: /^\\$(?:ORIGIN|INCLUDE|TTL)(?=\\s|$)/m,\n    class: {\n      // https://tools.ietf.org/html/rfc1035#page-13\n      pattern: /(^|\\s)(?:IN|CH|CS|HS)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      // https://en.wikipedia.org/wiki/List_of_DNS_record_types\n      pattern:\n        /(^|\\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    punctuation: /[()]/\n  }\n  Prism.languages['dns-zone'] = Prism.languages['dns-zone-file']\n}\n","'use strict'\n\nmodule.exports = docker\ndocker.displayName = 'docker'\ndocker.aliases = ['dockerfile']\nfunction docker(Prism) {\n  ;(function (Prism) {\n    // Many of the following regexes will contain negated lookaheads like `[ \\t]+(?![ \\t])`. This is a trick to ensure\n    // that quantifiers behave *atomically*. Atomic quantifiers are necessary to prevent exponential backtracking.\n    var spaceAfterBackSlash =\n      /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source // At least one space, comment, or line break\n    var space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(\n      /<SP_BS>/g,\n      function () {\n        return spaceAfterBackSlash\n      }\n    )\n    var string =\n      /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/\n        .source\n    var option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(\n      /<STR>/g,\n      function () {\n        return string\n      }\n    )\n    var stringRule = {\n      pattern: RegExp(string),\n      greedy: true\n    }\n    var commentRule = {\n      pattern: /(^[ \\t]*)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<OPT>/g, function () {\n          return option\n        })\n        .replace(/<SP>/g, function () {\n          return space\n        })\n      return RegExp(source, flags)\n    }\n    Prism.languages.docker = {\n      instruction: {\n        pattern:\n          /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          options: {\n            pattern: re(\n              /(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source,\n              'i'\n            ),\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              property: {\n                pattern: /(^|\\s)--[\\w-]+/,\n                lookbehind: true\n              },\n              string: [\n                stringRule,\n                {\n                  pattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\n                  lookbehind: true\n                }\n              ],\n              operator: /\\\\$/m,\n              punctuation: /=/\n            }\n          },\n          keyword: [\n            {\n              // https://docs.docker.com/engine/reference/builder/#healthcheck\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#from\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#onbuild\n              pattern: re(/(^ONBUILD<SP>)\\w+/.source, 'i'),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              pattern: /^\\w+/,\n              greedy: true\n            }\n          ],\n          comment: commentRule,\n          string: stringRule,\n          variable: /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\n          operator: /\\\\$/m\n        }\n      },\n      comment: commentRule\n    }\n    Prism.languages.dockerfile = Prism.languages.docker\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dot\ndot.displayName = 'dot'\ndot.aliases = ['gv']\nfunction dot(Prism) {\n  // https://www.graphviz.org/doc/info/lang.html\n  ;(function (Prism) {\n    var ID =\n      '(?:' +\n      [\n        // an identifier\n        /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source, // a number\n        /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source, // a double-quoted string\n        /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source, // HTML-like string\n        /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/\n          .source\n      ].join('|') +\n      ')'\n    var IDInside = {\n      markup: {\n        pattern: /(^<)[\\s\\S]+(?=>$)/,\n        lookbehind: true,\n        alias: ['language-markup', 'language-html', 'language-xml'],\n        inside: Prism.languages.markup\n      }\n    }\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function withID(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return ID\n        }),\n        flags\n      )\n    }\n    Prism.languages.dot = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n        greedy: true\n      },\n      'graph-name': {\n        pattern: withID(\n          /(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source,\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name',\n        inside: IDInside\n      },\n      'attr-value': {\n        pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      'attr-name': {\n        pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n      'compass-point': {\n        pattern: /(:[ \\t\\r\\n]*)(?:[ns][ew]?|[ewc_])(?![\\w\\x80-\\uFFFF])/,\n        lookbehind: true,\n        alias: 'builtin'\n      },\n      node: {\n        pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      operator: /[=:]|-[->]/,\n      punctuation: /[\\[\\]{};,]/\n    }\n    Prism.languages.gv = Prism.languages.dot\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ebnf\nebnf.displayName = 'ebnf'\nebnf.aliases = []\nfunction ebnf(Prism) {\n  Prism.languages.ebnf = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    special: {\n      pattern: /\\?[^?\\r\\n]*\\?/,\n      greedy: true,\n      alias: 'class-name'\n    },\n    definition: {\n      pattern: /^([\\t ]*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n      lookbehind: true,\n      alias: ['rule', 'keyword']\n    },\n    rule: /\\b[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*\\b/i,\n    punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n    operator: /[-=|*/!]/\n  }\n}\n","'use strict'\n\nmodule.exports = editorconfig\neditorconfig.displayName = 'editorconfig'\neditorconfig.aliases = []\nfunction editorconfig(Prism) {\n  Prism.languages.editorconfig = {\n    // https://editorconfig-specification.readthedocs.io/en/latest/\n    comment: /[;#].*/,\n    section: {\n      pattern: /(^[ \\t]*)\\[.+\\]/m,\n      lookbehind: true,\n      alias: 'keyword',\n      inside: {\n        regex: /\\\\\\\\[\\[\\]{},!?.*]/,\n        // Escape special characters with '\\\\'\n        operator: /[!?]|\\.\\.|\\*{1,2}/,\n        punctuation: /[\\[\\]{},]/\n      }\n    },\n    property: {\n      pattern: /(^[ \\t]*)[^\\s=]+(?=[ \\t]*=)/m,\n      lookbehind: true\n    },\n    value: {\n      pattern: /=.*/,\n      alias: 'string',\n      inside: {\n        punctuation: /^=/\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = eiffel\neiffel.displayName = 'eiffel'\neiffel.aliases = []\nfunction eiffel(Prism) {\n  Prism.languages.eiffel = {\n    comment: /--.*/,\n    string: [\n      // Aligned-verbatim-strings\n      {\n        pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n        greedy: true\n      }, // Non-aligned-verbatim-strings\n      {\n        pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n        greedy: true\n      }, // Single-line string\n      {\n        pattern: /\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,\n        greedy: true\n      }\n    ],\n    // normal char | special char | char code\n    char: /'(?:%.|[^%'\\r\\n])+'/,\n    keyword:\n      /\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n    boolean: /\\b(?:True|False)\\b/i,\n    // Convention: class-names are always all upper-case characters\n    'class-name': {\n      pattern: /\\b[A-Z][\\dA-Z_]*\\b/,\n      alias: 'builtin'\n    },\n    number: [\n      // hexa | octal | bin\n      /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i, // Decimal\n      /(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i\n    ],\n    punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n    operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n  }\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = ejs\nejs.displayName = 'ejs'\nejs.aliases = ['eta']\nfunction ejs(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.ejs = {\n      delimiter: {\n        pattern: /^<%[-_=]?|[-_]?%>$/,\n        alias: 'punctuation'\n      },\n      comment: /^#[\\s\\S]*/,\n      'language-javascript': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.javascript\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var ejsPattern = /<%(?!%)[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ejs',\n        ejsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ejs')\n    })\n    Prism.languages.eta = Prism.languages.ejs\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = elixir\nelixir.displayName = 'elixir'\nelixir.aliases = []\nfunction elixir(Prism) {\n  Prism.languages.elixir = {\n    doc: {\n      pattern:\n        /@(?:doc|moduledoc)\\s+(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2)/,\n      inside: {\n        attribute: /^@\\w+/,\n        string: /['\"][\\s\\S]+/\n      }\n    },\n    comment: {\n      pattern: /#.*/m,\n      greedy: true\n    },\n    // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n    regex: {\n      pattern:\n        /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n      greedy: true\n    },\n    string: [\n      {\n        // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n        pattern:\n          /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|#(?!\\{)|[^#\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        // Multi-line strings are allowed\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }\n    ],\n    atom: {\n      // Look-behind prevents bad highlighting of the :: operator\n      pattern: /(^|[^:]):\\w+/,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    module: {\n      pattern: /\\b[A-Z]\\w*\\b/,\n      alias: 'class-name'\n    },\n    // Look-ahead prevents bad highlighting of the :: operator\n    'attr-name': /\\b\\w+\\??:(?!:)/,\n    argument: {\n      // Look-behind prevents bad highlighting of the && operator\n      pattern: /(^|[^&])&\\d+/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'variable'\n    },\n    function: /\\b[_a-zA-Z]\\w*[?!]?(?:(?=\\s*(?:\\.\\s*)?\\()|(?=\\/\\d))/,\n    number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n    keyword:\n      /\\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\\b/,\n    boolean: /\\b(?:true|false|nil)\\b/,\n    operator: [\n      /\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,\n      {\n        // We don't want to match <<\n        pattern: /([^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /([^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /<<|>>|[.,%\\[\\]{}()]/\n  }\n  Prism.languages.elixir.string.forEach(function (o) {\n    o.inside = {\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.elixir\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = elm\nelm.displayName = 'elm'\nelm.aliases = []\nfunction elm(Prism) {\n  Prism.languages.elm = {\n    comment: /--.*|\\{-[\\s\\S]*?-\\}/,\n    char: {\n      pattern: /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+))'/,\n      greedy: true\n    },\n    string: [\n      {\n        // Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true\n      },\n      {\n        pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n        greedy: true\n      }\n    ],\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+(?:[A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:import|as|exposing)\\b/\n      }\n    },\n    keyword:\n      /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n    // decimal integers and floating point numbers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n    // Most of this is needed because of the meaning of a single '.'.\n    // If it stands alone freely, it is the function composition.\n    // It may also be a separator between a module name and an identifier => no\n    // operator. If it comes together with other special characters it is an\n    // operator too.\n    // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n    // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n    operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n    // In Elm, nearly everything is a variable, do not highlight these.\n    hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n    constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n    punctuation: /[{}[\\]|(),.:]/\n  }\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = erb\nerb.displayName = 'erb'\nerb.aliases = []\nfunction erb(Prism) {\n  Prism.register(refractorRuby)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.erb = Prism.languages.extend('ruby', {})\n    Prism.languages.insertBefore('erb', 'comment', {\n      delimiter: {\n        pattern: /^<%=?|%>$/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.hooks.add('before-tokenize', function (env) {\n      var erbPattern =\n        /<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s(?:[^\\r\\n]|[\\r\\n](?!=end))*[\\r\\n]=end)+?%>/gm\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'erb',\n        erbPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = erlang\nerlang.displayName = 'erlang'\nerlang.aliases = []\nfunction erlang(Prism) {\n  Prism.languages.erlang = {\n    comment: /%.+/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'quoted-function': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n      alias: 'function'\n    },\n    'quoted-atom': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n      alias: 'atom'\n    },\n    boolean: /\\b(?:true|false)\\b/,\n    keyword: /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n    number: [\n      /\\$\\\\?./,\n      /\\b\\d+#[a-z0-9]+/i,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    ],\n    function: /\\b[a-z][\\w@]*(?=\\()/,\n    variable: {\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n      lookbehind: true\n    },\n    operator: [\n      /[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    atom: /\\b[a-z][\\w@]*/,\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n  }\n}\n","'use strict'\nvar refractorLua = require('./lua.js')\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = etlua\netlua.displayName = 'etlua'\netlua.aliases = []\nfunction etlua(Prism) {\n  Prism.register(refractorLua)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.etlua = {\n      delimiter: {\n        pattern: /^<%[-=]?|-?%>$/,\n        alias: 'punctuation'\n      },\n      'language-lua': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.lua\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var pattern = /<%[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'etlua',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'etlua')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = excelFormula\nexcelFormula.displayName = 'excelFormula'\nexcelFormula.aliases = []\nfunction excelFormula(Prism) {\n  Prism.languages['excel-formula'] = {\n    comment: {\n      pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    reference: {\n      // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n      // Sales!B2\n      // 'Winter sales'!B2\n      // [Sales.xlsx]Jan!B2:B5\n      // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n      // '[Sales.xlsx]Jan sales'!B2:B5\n      // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n      pattern:\n        /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        operator: /!$/,\n        punctuation: /'/,\n        sheet: {\n          pattern: /[^[\\]]+$/,\n          alias: 'function'\n        },\n        file: {\n          pattern: /\\[[^[\\]]+\\]$/,\n          inside: {\n            punctuation: /[[\\]]/\n          }\n        },\n        path: /[\\s\\S]+/\n      }\n    },\n    'function-name': {\n      pattern: /\\b[A-Z]\\w*(?=\\()/i,\n      alias: 'keyword'\n    },\n    range: {\n      pattern:\n        /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n      alias: 'property',\n      inside: {\n        operator: /:/,\n        cell: /\\$?[A-Z]+\\$?\\d+/i,\n        column: /\\$?[A-Z]+/i,\n        row: /\\$?\\d+/\n      }\n    },\n    cell: {\n      // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n      // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n      pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n      alias: 'property'\n    },\n    number: /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:TRUE|FALSE)\\b/i,\n    operator: /[-+*/^%=&,]|<[=>]?|>=?/,\n    punctuation: /[[\\]();{}|]/\n  }\n  Prism.languages['xlsx'] = Prism.languages['xls'] =\n    Prism.languages['excel-formula']\n}\n","'use strict'\n\nmodule.exports = factor\nfactor.displayName = 'factor'\nfactor.aliases = []\nfunction factor(Prism) {\n  ;(function (Prism) {\n    var comment_inside = {\n      function:\n        /\\b(?:TODOS?|FIX(?:MES?)?|NOTES?|BUGS?|XX+|HACKS?|WARN(?:ING)?|\\?{2,}|!{2,})\\b/\n    }\n    var string_inside = {\n      number: /\\\\[^\\s']|%\\w/\n    }\n    var factor = {\n      comment: [\n        {\n          // ! single-line exclamation point comments with whitespace after/around the !\n          pattern: /(^|\\s)(?:! .*|!$)/,\n          lookbehind: true,\n          inside: comment_inside\n        },\n        /* from basis/multiline: */\n        {\n          // /* comment */, /* comment*/\n          pattern: /(^|\\s)\\/\\*\\s[\\s\\S]*?\\*\\/(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        },\n        {\n          // ![[ comment ]] , ![===[ comment]===]\n          pattern: /(^|\\s)!\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        }\n      ],\n      number: [\n        {\n          // basic base 10 integers 9, -9\n          pattern: /(^|\\s)[+-]?\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // base prefix integers 0b010 0o70 0xad 0d10 0XAD -0xa9\n          pattern: /(^|\\s)[+-]?0(?:b[01]+|o[0-7]+|d\\d+|x[\\dA-F]+)(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // fractional ratios 1/5 -1/5 and the literal float approximations 1/5. -1/5.\n          pattern: /(^|\\s)[+-]?\\d+\\/\\d+\\.?(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // positive mixed numbers 23+1/5 +23+1/5\n          pattern: /(^|\\s)\\+?\\d+\\+\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // negative mixed numbers -23-1/5\n          pattern: /(^|\\s)-\\d+-\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // basic decimal floats -0.01 0. .0 .1 -.1 -1. -12.13 +12.13\n          // and scientific notation with base 10 exponents 3e4 3e-4 .3e-4\n          pattern:\n            /(^|\\s)[+-]?(?:\\d*\\.\\d+|\\d+\\.\\d*|\\d+)(?:e[+-]?\\d+)?(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // NAN literal syntax NAN: 80000deadbeef, NAN: a\n          pattern: /(^|\\s)NAN:\\s+[\\da-fA-F]+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          /*\nbase prefix floats 0x1.0p3 (8.0) 0b1.010p2 (5.0) 0x1.p1 0b1.11111111p11111...\n\"The normalized hex form ±0x1.MMMMMMMMMMMMM[pP]±EEEE allows any floating-point number to be specified precisely.\nThe values of MMMMMMMMMMMMM and EEEE map directly to the mantissa and exponent fields of the binary IEEE 754 representation.\"\n<https://docs.factorcode.org/content/article-syntax-floats.html>\n*/\n          pattern:\n            /(^|\\s)[+-]?0(?:b1\\.[01]*|o1\\.[0-7]*|d1\\.\\d*|x1\\.[\\dA-F]*)p\\d+(?=\\s|$)/i,\n          lookbehind: true\n        }\n      ],\n      // R/ regexp?\\/\\\\/\n      regexp: {\n        pattern:\n          /(^|\\s)R\\/\\s(?:\\\\\\S|[^\\\\/])*\\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'number',\n        inside: {\n          variable: /\\\\\\S/,\n          keyword: /[+?*\\[\\]^$(){}.|]/,\n          operator: {\n            pattern: /(\\/)[idmsr]+(?:-[idmsr]+)?/,\n            lookbehind: true\n          }\n        }\n      },\n      boolean: {\n        pattern: /(^|\\s)[tf](?=\\s|$)/,\n        lookbehind: true\n      },\n      // SBUF\" asd\", URL\" ://...\", P\" /etc/\"\n      'custom-string': {\n        pattern: /(^|\\s)[A-Z0-9\\-]+\"\\s(?:\\\\\\S|[^\"\\\\])*\"/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          number: /\\\\\\S|%\\w|\\//\n        }\n      },\n      'multiline-string': [\n        {\n          // STRING: name \\n content \\n ; -> CONSTANT: name \"content\" (symbol)\n          pattern: /(^|\\s)STRING:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*;(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            number: string_inside.number,\n            // trailing semicolon on its own line\n            'semicolon-or-setlocal': {\n              pattern: /([\\r\\n][ \\t]*);(?=\\s|$)/,\n              lookbehind: true,\n              alias: 'function'\n            }\n          }\n        },\n        {\n          // HEREDOC: marker \\n content \\n marker ; -> \"content\" (immediate)\n          pattern: /(^|\\s)HEREDOC:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*\\S+(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        },\n        {\n          // [[ string ]], [==[ string]==]\n          pattern: /(^|\\s)\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        }\n      ],\n      'special-using': {\n        pattern: /(^|\\s)USING:(?:\\s\\S+)*(?=\\s+;(?:\\s|$))/,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          // this is essentially a regex for vocab names, which i don't want to specify\n          // but the USING: gets picked up as a vocab name\n          string: {\n            pattern: /(\\s)[^:\\s]+/,\n            lookbehind: true\n          }\n        }\n      },\n      /* this description of stack effect literal syntax is not complete and not as specific as theoretically possible\ntrying to do better is more work and regex-computation-time than it's worth though.\n- we'd like to have the \"delimiter\" parts of the stack effect [ (, --, and ) ] be a different (less-important or comment-like) colour to the stack effect contents\n- we'd like if nested stack effects were treated as such rather than just appearing flat (with `inside`)\n- we'd like if the following variable name conventions were recognised specifically:\nspecial row variables = ..a b..\ntype and stack effect annotations end with a colon = ( quot: ( a: ( -- ) -- b ) -- x ), ( x: number -- )\nword throws unconditional error = *\nany other word-like variable name = a ? q' etc\nhttps://docs.factorcode.org/content/article-effects.html\nthese are pretty complicated to highlight properly without a real parser, and therefore out of scope\nthe old pattern, which may be later useful, was: (^|\\s)(?:call|execute|eval)?\\((?:\\s+[^\"\\r\\n\\t ]\\S*)*?\\s+--(?:\\s+[^\"\\n\\t ]\\S*)*?\\s+\\)(?=\\s|$)\n*/\n      // current solution is not great\n      'stack-effect-delimiter': [\n        {\n          // opening parenthesis\n          pattern: /(^|\\s)(?:call|execute|eval)?\\((?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // middle --\n          pattern: /(\\s)--(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing parenthesis\n          pattern: /(\\s)\\)(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      combinators: {\n        pattern: null,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'kernel-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'sequences-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'math-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'constructor-word': {\n        // <array> but not <=>\n        pattern: /(^|\\s)<(?!=+>|-+>)\\S+>(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'other-builtin-syntax': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      /*\nfull list of supported word naming conventions: (the convention appears outside of the [brackets])\nset-[x]\nchange-[x]\nwith-[x]\nnew-[x]\n>[string]\n[base]>\n[string]>[number]\n+[symbol]+\n[boolean-word]?\n?[of]\n[slot-reader]>>\n>>[slot-setter]\n[slot-writer]<<\n([implementation-detail])\n[mutater]!\n[variant]*\n[prettyprint].\n$[help-markup]\n<constructors>, SYNTAX:, etc are supported by their own patterns.\n`with` and `new` from `kernel` are their own builtins.\nsee <https://docs.factorcode.org/content/article-conventions.html>\n*/\n      'conventionally-named-word': {\n        pattern:\n          /(^|\\s)(?!\")(?:(?:set|change|with|new)-\\S+|\\$\\S+|>[^>\\s]+|[^:>\\s]+>|[^>\\s]+>[^>\\s]+|\\+[^+\\s]+\\+|[^?\\s]+\\?|\\?[^?\\s]+|[^>\\s]+>>|>>[^>\\s]+|[^<\\s]+<<|\\([^()\\s]+\\)|[^!\\s]+!|[^*\\s]\\S*\\*|[^.\\s]\\S*\\.)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'colon-syntax': {\n        pattern: /(^|\\s)(?:[A-Z0-9\\-]+#?)?:{1,2}\\s+(?:;\\S+|(?!;)\\S+)(?=\\s|$)/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'semicolon-or-setlocal': {\n        pattern: /(\\s)(?:;|:>)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      // do not highlight leading } or trailing X{ at the begin/end of the file as it's invalid syntax\n      'curly-brace-literal-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)[a-z]*\\{(?=\\s)/i,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\}(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      // do not highlight leading ] or trailing [ at the begin/end of the file as it's invalid syntax\n      'quotation-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)\\[(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\](?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      'normal-word': {\n        pattern: /(^|\\s)[^\"\\s]\\S*(?=\\s|$)/,\n        lookbehind: true\n      },\n      /*\nbasic first-class string \"a\"\nwith escaped double-quote \"a\\\"\"\nescaped backslash \"\\\\\"\nand general escapes since Factor has so many \"\\N\"\nsyntax that works in the reference implementation that isn't fully\nsupported because it's an implementation detail:\n\"string 1\"\"string 2\" -> 2 strings (works anyway)\n\"string\"5 -> string, 5\n\"string\"[ ] -> string, quotation\n{ \"a\"} -> array<string>\nthe rest of those examples all properly recognise the string, but not\nthe other object (number, quotation, etc)\nthis is fine for a regex-only implementation.\n*/\n      string: {\n        pattern: /\"(?:\\\\\\S|[^\"\\\\])*\"/,\n        greedy: true,\n        inside: string_inside\n      }\n    }\n    var escape = function (str) {\n      return (str + '').replace(/([.?*+\\^$\\[\\]\\\\(){}|\\-])/g, '\\\\$1')\n    }\n    var arrToWordsRegExp = function (arr) {\n      return new RegExp('(^|\\\\s)(?:' + arr.map(escape).join('|') + ')(?=\\\\s|$)')\n    }\n    var builtins = {\n      'kernel-builtin': [\n        'or',\n        '2nipd',\n        '4drop',\n        'tuck',\n        'wrapper',\n        'nip',\n        'wrapper?',\n        'callstack>array',\n        'die',\n        'dupd',\n        'callstack',\n        'callstack?',\n        '3dup',\n        'hashcode',\n        'pick',\n        '4nip',\n        'build',\n        '>boolean',\n        'nipd',\n        'clone',\n        '5nip',\n        'eq?',\n        '?',\n        '=',\n        'swapd',\n        '2over',\n        'clear',\n        '2dup',\n        'get-retainstack',\n        'not',\n        'tuple?',\n        'dup',\n        '3nipd',\n        'call',\n        '-rotd',\n        'object',\n        'drop',\n        'assert=',\n        'assert?',\n        '-rot',\n        'execute',\n        'boa',\n        'get-callstack',\n        'curried?',\n        '3drop',\n        'pickd',\n        'overd',\n        'over',\n        'roll',\n        '3nip',\n        'swap',\n        'and',\n        '2nip',\n        'rotd',\n        'throw',\n        '(clone)',\n        'hashcode*',\n        'spin',\n        'reach',\n        '4dup',\n        'equal?',\n        'get-datastack',\n        'assert',\n        '2drop',\n        '<wrapper>',\n        'boolean?',\n        'identity-hashcode',\n        'identity-tuple?',\n        'null',\n        'composed?',\n        'new',\n        '5drop',\n        'rot',\n        '-roll',\n        'xor',\n        'identity-tuple',\n        'boolean'\n      ],\n      'other-builtin-syntax': [\n        // syntax\n        '=======',\n        'recursive',\n        'flushable',\n        '>>',\n        '<<<<<<',\n        'M\\\\',\n        'B',\n        'PRIVATE>',\n        '\\\\',\n        '======',\n        'final',\n        'inline',\n        'delimiter',\n        'deprecated',\n        '<PRIVATE',\n        '>>>>>>',\n        '<<<<<<<',\n        'parse-complex',\n        'malformed-complex',\n        'read-only',\n        '>>>>>>>',\n        'call-next-method',\n        '<<',\n        'foldable', // literals\n        '$',\n        '$[',\n        '${'\n      ],\n      'sequences-builtin': [\n        'member-eq?',\n        'mismatch',\n        'append',\n        'assert-sequence=',\n        'longer',\n        'repetition',\n        'clone-like',\n        '3sequence',\n        'assert-sequence?',\n        'last-index-from',\n        'reversed',\n        'index-from',\n        'cut*',\n        'pad-tail',\n        'join-as',\n        'remove-eq!',\n        'concat-as',\n        'but-last',\n        'snip',\n        'nths',\n        'nth',\n        'sequence',\n        'longest',\n        'slice?',\n        '<slice>',\n        'remove-nth',\n        'tail-slice',\n        'empty?',\n        'tail*',\n        'member?',\n        'virtual-sequence?',\n        'set-length',\n        'drop-prefix',\n        'iota',\n        'unclip',\n        'bounds-error?',\n        'unclip-last-slice',\n        'non-negative-integer-expected',\n        'non-negative-integer-expected?',\n        'midpoint@',\n        'longer?',\n        '?set-nth',\n        '?first',\n        'rest-slice',\n        'prepend-as',\n        'prepend',\n        'fourth',\n        'sift',\n        'subseq-start',\n        'new-sequence',\n        '?last',\n        'like',\n        'first4',\n        '1sequence',\n        'reverse',\n        'slice',\n        'virtual@',\n        'repetition?',\n        'set-last',\n        'index',\n        '4sequence',\n        'max-length',\n        'set-second',\n        'immutable-sequence',\n        'first2',\n        'first3',\n        'supremum',\n        'unclip-slice',\n        'suffix!',\n        'insert-nth',\n        'tail',\n        '3append',\n        'short',\n        'suffix',\n        'concat',\n        'flip',\n        'immutable?',\n        'reverse!',\n        '2sequence',\n        'sum',\n        'delete-all',\n        'indices',\n        'snip-slice',\n        '<iota>',\n        'check-slice',\n        'sequence?',\n        'head',\n        'append-as',\n        'halves',\n        'sequence=',\n        'collapse-slice',\n        '?second',\n        'slice-error?',\n        'product',\n        'bounds-check?',\n        'bounds-check',\n        'immutable',\n        'virtual-exemplar',\n        'harvest',\n        'remove',\n        'pad-head',\n        'last',\n        'set-fourth',\n        'cartesian-product',\n        'remove-eq',\n        'shorten',\n        'shorter',\n        'reversed?',\n        'shorter?',\n        'shortest',\n        'head-slice',\n        'pop*',\n        'tail-slice*',\n        'but-last-slice',\n        'iota?',\n        'append!',\n        'cut-slice',\n        'new-resizable',\n        'head-slice*',\n        'sequence-hashcode',\n        'pop',\n        'set-nth',\n        '?nth',\n        'second',\n        'join',\n        'immutable-sequence?',\n        '<reversed>',\n        '3append-as',\n        'virtual-sequence',\n        'subseq?',\n        'remove-nth!',\n        'length',\n        'last-index',\n        'lengthen',\n        'assert-sequence',\n        'copy',\n        'move',\n        'third',\n        'first',\n        'tail?',\n        'set-first',\n        'prefix',\n        'bounds-error',\n        '<repetition>',\n        'exchange',\n        'surround',\n        'cut',\n        'min-length',\n        'set-third',\n        'push-all',\n        'head?',\n        'subseq-start-from',\n        'delete-slice',\n        'rest',\n        'sum-lengths',\n        'head*',\n        'infimum',\n        'remove!',\n        'glue',\n        'slice-error',\n        'subseq',\n        'push',\n        'replace-slice',\n        'subseq-as',\n        'unclip-last'\n      ],\n      'math-builtin': [\n        'number=',\n        'next-power-of-2',\n        '?1+',\n        'fp-special?',\n        'imaginary-part',\n        'float>bits',\n        'number?',\n        'fp-infinity?',\n        'bignum?',\n        'fp-snan?',\n        'denominator',\n        'gcd',\n        '*',\n        '+',\n        'fp-bitwise=',\n        '-',\n        'u>=',\n        '/',\n        '>=',\n        'bitand',\n        'power-of-2?',\n        'log2-expects-positive',\n        'neg?',\n        '<',\n        'log2',\n        '>',\n        'integer?',\n        'number',\n        'bits>double',\n        '2/',\n        'zero?',\n        'bits>float',\n        'float?',\n        'shift',\n        'ratio?',\n        'rect>',\n        'even?',\n        'ratio',\n        'fp-sign',\n        'bitnot',\n        '>fixnum',\n        'complex?',\n        '/i',\n        'integer>fixnum',\n        '/f',\n        'sgn',\n        '>bignum',\n        'next-float',\n        'u<',\n        'u>',\n        'mod',\n        'recip',\n        'rational',\n        '>float',\n        '2^',\n        'integer',\n        'fixnum?',\n        'neg',\n        'fixnum',\n        'sq',\n        'bignum',\n        '>rect',\n        'bit?',\n        'fp-qnan?',\n        'simple-gcd',\n        'complex',\n        '<fp-nan>',\n        'real',\n        '>fraction',\n        'double>bits',\n        'bitor',\n        'rem',\n        'fp-nan-payload',\n        'real-part',\n        'log2-expects-positive?',\n        'prev-float',\n        'align',\n        'unordered?',\n        'float',\n        'fp-nan?',\n        'abs',\n        'bitxor',\n        'integer>fixnum-strict',\n        'u<=',\n        'odd?',\n        '<=',\n        '/mod',\n        '>integer',\n        'real?',\n        'rational?',\n        'numerator'\n      ] // that's all for now\n    }\n    Object.keys(builtins).forEach(function (k) {\n      factor[k].pattern = arrToWordsRegExp(builtins[k])\n    })\n    var combinators = [\n      // kernel\n      '2bi',\n      'while',\n      '2tri',\n      'bi*',\n      '4dip',\n      'both?',\n      'same?',\n      'tri@',\n      'curry',\n      'prepose',\n      '3bi',\n      '?if',\n      'tri*',\n      '2keep',\n      '3keep',\n      'curried',\n      '2keepd',\n      'when',\n      '2bi*',\n      '2tri*',\n      '4keep',\n      'bi@',\n      'keepdd',\n      'do',\n      'unless*',\n      'tri-curry',\n      'if*',\n      'loop',\n      'bi-curry*',\n      'when*',\n      '2bi@',\n      '2tri@',\n      'with',\n      '2with',\n      'either?',\n      'bi',\n      'until',\n      '3dip',\n      '3curry',\n      'tri-curry*',\n      'tri-curry@',\n      'bi-curry',\n      'keepd',\n      'compose',\n      '2dip',\n      'if',\n      '3tri',\n      'unless',\n      'tuple',\n      'keep',\n      '2curry',\n      'tri',\n      'most',\n      'while*',\n      'dip',\n      'composed',\n      'bi-curry@', // sequences\n      'find-last-from',\n      'trim-head-slice',\n      'map-as',\n      'each-from',\n      'none?',\n      'trim-tail',\n      'partition',\n      'if-empty',\n      'accumulate*',\n      'reject!',\n      'find-from',\n      'accumulate-as',\n      'collector-for-as',\n      'reject',\n      'map',\n      'map-sum',\n      'accumulate!',\n      '2each-from',\n      'follow',\n      'supremum-by',\n      'map!',\n      'unless-empty',\n      'collector',\n      'padding',\n      'reduce-index',\n      'replicate-as',\n      'infimum-by',\n      'trim-tail-slice',\n      'count',\n      'find-index',\n      'filter',\n      'accumulate*!',\n      'reject-as',\n      'map-integers',\n      'map-find',\n      'reduce',\n      'selector',\n      'interleave',\n      '2map',\n      'filter-as',\n      'binary-reduce',\n      'map-index-as',\n      'find',\n      'produce',\n      'filter!',\n      'replicate',\n      'cartesian-map',\n      'cartesian-each',\n      'find-index-from',\n      'map-find-last',\n      '3map-as',\n      '3map',\n      'find-last',\n      'selector-as',\n      '2map-as',\n      '2map-reduce',\n      'accumulate',\n      'each',\n      'each-index',\n      'accumulate*-as',\n      'when-empty',\n      'all?',\n      'collector-as',\n      'push-either',\n      'new-like',\n      'collector-for',\n      '2selector',\n      'push-if',\n      '2all?',\n      'map-reduce',\n      '3each',\n      'any?',\n      'trim-slice',\n      '2reduce',\n      'change-nth',\n      'produce-as',\n      '2each',\n      'trim',\n      'trim-head',\n      'cartesian-find',\n      'map-index', // math\n      'if-zero',\n      'each-integer',\n      'unless-zero',\n      '(find-integer)',\n      'when-zero',\n      'find-last-integer',\n      '(all-integers?)',\n      'times',\n      '(each-integer)',\n      'find-integer',\n      'all-integers?', // math.combinators\n      'unless-negative',\n      'if-positive',\n      'when-positive',\n      'when-negative',\n      'unless-positive',\n      'if-negative', // combinators\n      'case',\n      '2cleave',\n      'cond>quot',\n      'case>quot',\n      '3cleave',\n      'wrong-values',\n      'to-fixed-point',\n      'alist>quot',\n      'cond',\n      'cleave',\n      'call-effect',\n      'recursive-hashcode',\n      'spread',\n      'deep-spread>quot', // combinators.short-circuit\n      '2||',\n      '0||',\n      'n||',\n      '0&&',\n      '2&&',\n      '3||',\n      '1||',\n      '1&&',\n      'n&&',\n      '3&&', // combinators.smart\n      'smart-unless*',\n      'keep-inputs',\n      'reduce-outputs',\n      'smart-when*',\n      'cleave>array',\n      'smart-with',\n      'smart-apply',\n      'smart-if',\n      'inputs/outputs',\n      'output>sequence-n',\n      'map-outputs',\n      'map-reduce-outputs',\n      'dropping',\n      'output>array',\n      'smart-map-reduce',\n      'smart-2map-reduce',\n      'output>array-n',\n      'nullary',\n      'input<sequence',\n      'append-outputs',\n      'drop-inputs',\n      'inputs',\n      'smart-2reduce',\n      'drop-outputs',\n      'smart-reduce',\n      'preserving',\n      'smart-when',\n      'outputs',\n      'append-outputs-as',\n      'smart-unless',\n      'smart-if*',\n      'sum-outputs',\n      'input<sequence-unsafe',\n      'output>sequence' // tafn\n    ]\n    factor.combinators.pattern = arrToWordsRegExp(combinators)\n    Prism.languages.factor = factor\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = $false\n$false.displayName = '$false'\n$false.aliases = []\nfunction $false(Prism) {\n  ;(function (Prism) {\n    /**\n     * Based on the manual by Wouter van Oortmerssen.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2801#issue-829717504}\n     */\n    Prism.languages['false'] = {\n      comment: {\n        pattern: /\\{[^}]*\\}/\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      'character-code': {\n        pattern: /'(?:[^\\r]|\\r\\n?)/,\n        alias: 'number'\n      },\n      'assembler-code': {\n        pattern: /\\d+`/,\n        alias: 'important'\n      },\n      number: /\\d+/,\n      operator: /[-!#$%&'*+,./:;=>?@\\\\^_`|~ßø]/,\n      punctuation: /\\[|\\]/,\n      variable: /[a-z]/,\n      'non-standard': {\n        pattern: /[()<BDO®]/,\n        alias: 'bold'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = firestoreSecurityRules\nfirestoreSecurityRules.displayName = 'firestoreSecurityRules'\nfirestoreSecurityRules.aliases = []\nfunction firestoreSecurityRules(Prism) {\n  Prism.languages['firestore-security-rules'] = Prism.languages.extend(\n    'clike',\n    {\n      comment: /\\/\\/.*/,\n      keyword:\n        /\\b(?:allow|function|if|match|null|return|rules_version|service)\\b/,\n      operator: /&&|\\|\\||[<>!=]=?|[-+*/%]|\\b(?:in|is)\\b/\n    }\n  )\n  delete Prism.languages['firestore-security-rules']['class-name']\n  Prism.languages.insertBefore('firestore-security-rules', 'keyword', {\n    path: {\n      pattern:\n        /(^|[\\s(),])(?:\\/(?:[\\w\\xA0-\\uFFFF]+|\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)))+/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)/,\n          inside: {\n            operator: /=/,\n            keyword: /\\*\\*/,\n            punctuation: /[.$(){}]/\n          }\n        },\n        punctuation: /\\//\n      }\n    },\n    method: {\n      // to make the pattern shorter, the actual method names are omitted\n      pattern: /(\\ballow\\s+)[a-z]+(?:\\s*,\\s*[a-z]+)*(?=\\s*[:;])/,\n      lookbehind: true,\n      alias: 'builtin',\n      inside: {\n        punctuation: /,/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = flow\nflow.displayName = 'flow'\nflow.aliases = []\nfunction flow(Prism) {\n  ;(function (Prism) {\n    Prism.languages.flow = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('flow', 'keyword', {\n      type: [\n        {\n          pattern:\n            /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n          alias: 'tag'\n        }\n      ]\n    })\n    Prism.languages.flow['function-variable'].pattern =\n      /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i\n    delete Prism.languages.flow['parameter']\n    Prism.languages.insertBefore('flow', 'operator', {\n      'flow-punctuation': {\n        pattern: /\\{\\||\\|\\}/,\n        alias: 'punctuation'\n      }\n    })\n    if (!Array.isArray(Prism.languages.flow.keyword)) {\n      Prism.languages.flow.keyword = [Prism.languages.flow.keyword]\n    }\n    Prism.languages.flow.keyword.unshift(\n      {\n        pattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n        lookbehind: true\n      }\n    )\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = fortran\nfortran.displayName = 'fortran'\nfortran.aliases = []\nfunction fortran(Prism) {\n  Prism.languages.fortran = {\n    'quoted-number': {\n      pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n      alias: 'number'\n    },\n    string: {\n      pattern:\n        /(?:\\b\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:[ \\t]*!.*(?:\\r\\n?|\\n)|(?![ \\t]*!))|(?!\\1).)*(?:\\1|&)/,\n      inside: {\n        comment: {\n          pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n          lookbehind: true\n        }\n      }\n    },\n    comment: {\n      pattern: /!.*/,\n      greedy: true\n    },\n    boolean: /\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n    keyword: [\n      // Types\n      /\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i, // END statements\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i, // Statements\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i, // Others\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\n    ],\n    operator: [\n      /\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.[A-Z]+\\./i,\n      {\n        // Use lookbehind to prevent confusion with (/ /)\n        pattern: /(^|(?!\\().)\\/(?!\\))/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n  }\n}\n","'use strict'\n\nmodule.exports = fsharp\nfsharp.displayName = 'fsharp'\nfsharp.aliases = []\nfunction fsharp(Prism) {\n  Prism.languages.fsharp = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    string: {\n      pattern:\n        /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n      lookbehind: true,\n      inside: {\n        operator: /->|\\*/,\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n    number: [\n      /\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/,\n      /\\b0b[01]+(?:y|uy)?\\b/,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\n      /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/\n    ],\n    operator:\n      /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n  })\n  Prism.languages.insertBefore('fsharp', 'keyword', {\n    preprocessor: {\n      pattern: /(^[\\t ]*)#.*/m,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'punctuation', {\n    'computation-expression': {\n      pattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'string', {\n    annotation: {\n      pattern: /\\[<.+?>\\]/,\n      inside: {\n        punctuation: /^\\[<|>\\]$/,\n        'class-name': {\n          pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n          lookbehind: true\n        },\n        'annotation-content': {\n          pattern: /[\\s\\S]+/,\n          inside: Prism.languages.fsharp\n        }\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = ftl\nftl.displayName = 'ftl'\nftl.aliases = []\nfunction ftl(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    // https://freemarker.apache.org/docs/dgui_template_exp.html\n    // FTL expression with 4 levels of nesting supported\n    var FTL_EXPR =\n      /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/\n        .source\n    for (var i = 0; i < 2; i++) {\n      FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\n        return FTL_EXPR\n      })\n    }\n    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var ftl = {\n      comment: /<#--[\\s\\S]*?-->/,\n      string: [\n        {\n          // raw string\n          pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(\n              /<expr>/g,\n              function () {\n                return FTL_EXPR\n              }\n            )\n          ),\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: RegExp(\n                /((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(\n                  /<expr>/g,\n                  function () {\n                    return FTL_EXPR\n                  }\n                )\n              ),\n              lookbehind: true,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^\\$\\{|\\}$/,\n                  alias: 'punctuation'\n                },\n                rest: null\n              }\n            }\n          }\n        }\n      ],\n      keyword: /\\b(?:as)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      'builtin-function': {\n        pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      operator:\n        /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n      punctuation: /[,;.:()[\\]{}]/\n    }\n    ftl.string[1].inside.interpolation.inside.rest = ftl\n    Prism.languages.ftl = {\n      'ftl-comment': {\n        // the pattern is shortened to be more efficient\n        pattern: /^<#--[\\s\\S]*/,\n        alias: 'comment'\n      },\n      'ftl-directive': {\n        pattern: /^<[\\s\\S]+>$/,\n        inside: {\n          directive: {\n            pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          punctuation: /^<\\/?|\\/?>$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      },\n      'ftl-interpolation': {\n        pattern: /^\\$\\{[\\s\\S]*\\}$/,\n        inside: {\n          punctuation: /^\\$\\{|\\}$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      // eslint-disable-next-line regexp/no-useless-lazy\n      var pattern = RegExp(\n        /<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(\n          /<expr>/g,\n          function () {\n            return FTL_EXPR\n          }\n        ),\n        'gi'\n      )\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ftl',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = gap\ngap.displayName = 'gap'\ngap.aliases = []\nfunction gap(Prism) {\n  // https://www.gap-system.org/Manuals/doc/ref/chap4.html\n  // https://www.gap-system.org/Manuals/doc/ref/chap27.html\n  Prism.languages.gap = {\n    shell: {\n      pattern: /^gap>[\\s\\S]*?(?=^gap>|$(?![\\s\\S]))/m,\n      greedy: true,\n      inside: {\n        gap: {\n          pattern: /^(gap>).+(?:(?:\\r(?:\\n|(?!\\n))|\\n)>.*)*/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        punctuation: /^gap>/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\'\"])(?:'(?:[^\\r\\n\\\\']|\\\\.){1,10}'|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"(?!\")|\"\"\"[\\s\\S]*?\"\"\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        continuation: {\n          pattern: /([\\r\\n])>/,\n          lookbehind: true,\n          alias: 'punctuation'\n        }\n      }\n    },\n    keyword:\n      /\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    continuation: {\n      pattern: /([\\r\\n])>/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\\.\\./,\n    punctuation: /[()[\\]{},;.:]/\n  }\n  Prism.languages.gap.shell.inside.gap.inside = Prism.languages.gap\n}\n","'use strict'\n\nmodule.exports = gcode\ngcode.displayName = 'gcode'\ngcode.aliases = []\nfunction gcode(Prism) {\n  Prism.languages.gcode = {\n    comment: /;.*|\\B\\(.*?\\)\\B/,\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    keyword: /\\b[GM]\\d+(?:\\.\\d+)?\\b/,\n    property: /\\b[A-Z]/,\n    checksum: {\n      pattern: /\\*\\d+/,\n      alias: 'punctuation'\n    },\n    // T0:0:0\n    punctuation: /:/\n  }\n}\n","'use strict'\n\nmodule.exports = gdscript\ngdscript.displayName = 'gdscript'\ngdscript.aliases = []\nfunction gdscript(Prism) {\n  Prism.languages.gdscript = {\n    comment: /#.*/,\n    string: {\n      pattern:\n        /@?(?:(\"|')(?:(?!\\1)[^\\n\\\\]|\\\\[\\s\\S])*\\1(?!\"|')|\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\")/,\n      greedy: true\n    },\n    'class-name': {\n      // class_name Foo, extends Bar, class InnerClass\n      // export(int) var baz, export(int, 0) var i\n      // as Node\n      // const FOO: int = 9, var bar: bool = true\n      // func add(reference: Item, amount: int) -> Item:\n      pattern:\n        /(^(?:class_name|class|extends)[ \\t]+|^export\\([ \\t]*|\\bas[ \\t]+|(?:\\b(?:const|var)[ \\t]|[,(])[ \\t]*\\w+[ \\t]*:[ \\t]*|->[ \\t]*)[a-zA-Z_]\\w*/m,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    variable: /\\$\\w+/,\n    number: [\n      /\\b0b[01_]+\\b|\\b0x[\\da-fA-F_]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.[\\d_]+)(?:e[+-]?[\\d_]+)?\\b/,\n      /\\b(?:INF|NAN|PI|TAU)\\b/\n    ],\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /->|:=|&&|\\|\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,\n    punctuation: /[.:,;()[\\]{}]/\n  }\n}\n","'use strict'\n\nmodule.exports = gedcom\ngedcom.displayName = 'gedcom'\ngedcom.aliases = []\nfunction gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    tag: {\n      // Preceded by level and optional pointer\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'string'\n    },\n    level: {\n      pattern: /(^[\\t ]*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = gherkin\ngherkin.displayName = 'gherkin'\ngherkin.aliases = []\nfunction gherkin(Prism) {\n  ;(function (Prism) {\n    var tableRow = /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|(?:(?!\\|).)*/.source\n    Prism.languages.gherkin = {\n      pystring: {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n        alias: 'string'\n      },\n      comment: {\n        pattern: /(^[ \\t]*)#.*/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[ \\t]*)@\\S*/m,\n        lookbehind: true\n      },\n      feature: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|laH|Lastnost|Mak|Mogucnost|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|perbogh|poQbogh malja'|Potrzeba biznesowa|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\\r\\n]+(?:\\r?\\n|\\r|$))*/,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]+/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      scenario: {\n        pattern:\n          /(^[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram senaryo|Dyagram Senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|Examples|EXAMPLZ|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|ghantoH|Grundlage|Hannergrond|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut|lut chovnatlh|lutmey|Lýsing Atburðarásar|Lýsing Dæma|Menggariskan Senario|MISHUN|MISHUN SRSLY|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan senaryo|Plan Senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo|Senaryo deskripsyon|Senaryo Deskripsyon|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie|Situasie Uiteensetting|Skenario|Skenario konsep|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa|Swa hwaer swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/m,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]*/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      'table-body': {\n        // Look-behind is used to skip the table head, which has the same format as any table row\n        pattern: RegExp('(' + tableRow + ')(?:' + tableRow + ')+'),\n        lookbehind: true,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          },\n          td: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'string'\n          },\n          punctuation: /\\|/\n        }\n      },\n      'table-head': {\n        pattern: RegExp(tableRow),\n        inside: {\n          th: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'variable'\n          },\n          punctuation: /\\|/\n        }\n      },\n      atrule: {\n        pattern:\n          /(^[ \\t]+)(?:'ach|'a|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cando|Cand|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|Dato|DEN|Den youse gotta|Dengan|De|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|Entonces|En|Epi|E|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kadar|Kada|Kad|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Majd|Maka|Manawa|Mas|Ma|Menawa|Men|Mutta|Nalikaning|Nalika|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Og|Och|Oletetaan|Onda|Ond|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|qaSDI'|Quando|Quand|Quan|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|ugeholl|Und|Un|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadani|Zadano|Zadan|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t])/m,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          }\n        }\n      },\n      outline: {\n        pattern: /<[^>]+>/,\n        alias: 'variable'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = git\ngit.displayName = 'git'\ngit.aliases = []\nfunction git(Prism) {\n  Prism.languages.git = {\n    /*\n     * A simple one line comment like in a git status command\n     * For instance:\n     * $ git status\n     * # On branch infinite-scroll\n     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n     * # and have 1 and 2 different commits each, respectively.\n     * nothing to commit (working directory clean)\n     */\n    comment: /^#.*/m,\n    /*\n     * Regexp to match the changed lines in a git diff output. Check the example below.\n     */\n    deleted: /^[-–].*/m,\n    inserted: /^\\+.*/m,\n    /*\n     * a string (double and simple quote)\n     */\n    string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n    /*\n     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n     * For instance:\n     * $ git add file.txt\n     */\n    command: {\n      pattern: /^.*\\$ git .*$/m,\n      inside: {\n        /*\n         * A git command can contain a parameter starting by a single or a double dash followed by a string\n         * For instance:\n         * $ git diff --cached\n         * $ git log -p\n         */\n        parameter: /\\s--?\\w+/m\n      }\n    },\n    /*\n     * Coordinates displayed in a git diff command\n     * For instance:\n     * $ git diff\n     * diff --git file.txt file.txt\n     * index 6214953..1d54a52 100644\n     * --- file.txt\n     * +++ file.txt\n     * @@ -1 +1,2 @@\n     * -Here's my tetx file\n     * +Here's my text file\n     * +And this is the second line\n     */\n    coord: /^@@.*@@$/m,\n    /*\n     * Match a \"commit [SHA1]\" line in a git log output.\n     * For instance:\n     * $ git log\n     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n     * Author: lgiraudel\n     * Date:   Mon Feb 17 11:18:34 2014 +0100\n     *\n     *     Add of a new line\n     */\n    'commit-sha1': /^commit \\w{40}$/m\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = glsl\nglsl.displayName = 'glsl'\nglsl.aliases = []\nfunction glsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.glsl = Prism.languages.extend('c', {\n    keyword:\n      /\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = gml\ngml.displayName = 'gml'\ngml.aliases = []\nfunction gml(Prism) {\n  Prism.languages.gamemakerlanguage = Prism.languages.gml =\n    Prism.languages.extend('clike', {\n      keyword:\n        /\\b(?:if|else|switch|case|default|break|for|repeat|while|do|until|continue|exit|return|globalvar|var|enum)\\b/,\n      number:\n        /(?:\\b0x[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]{0,4}/i,\n      operator:\n        /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at|xor)\\b/,\n      constant:\n        /\\b(?:self|other|all|noone|global|local|undefined|pointer_(?:invalid|null)|action_(?:stop|restart|continue|reverse)|pi|GM_build_date|GM_version|timezone_(?:local|utc)|gamespeed_(?:fps|microseconds)|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|pre|post)|keypress|keyrelease|trigger|(?:left|right|middle|no)_button|(?:left|right|middle)_press|(?:left|right|middle)_release|mouse_(?:enter|leave|wheel_up|wheel_down)|global_(?:left|right|middle)_button|global_(?:left|right|middle)_press|global_(?:left|right|middle)_release|joystick(?:1|2)_(?:left|right|up|down|button1|button2|button3|button4|button5|button6|button7|button8)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\\d|step_(?:normal|begin|end)|gui|gui_begin|gui_end)|vk_(?:nokey|anykey|enter|return|shift|control|alt|escape|space|backspace|tab|pause|printscreen|left|right|up|down|home|end|delete|insert|pageup|pagedown|f\\d|numpad\\d|divide|multiply|subtract|add|decimal|lshift|lcontrol|lalt|rshift|rcontrol|ralt)|mb_(?:any|none|left|right|middle)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|purple|red|silver|teal|white|yellow|orange)|fa_(?:left|center|right|top|middle|bottom|readonly|hidden|sysfile|volumeid|directory|archive)|pr_(?:pointlist|linelist|linestrip|trianglelist|trianglestrip|trianglefan)|bm_(?:complex|normal|add|max|subtract|zero|one|src_colour|inv_src_colour|src_color|inv_src_color|src_alpha|inv_src_alpha|dest_alpha|inv_dest_alpha|dest_colour|inv_dest_colour|dest_color|inv_dest_color|src_alpha_sat)|audio_(?:falloff_(?:none|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|exponent_distance|exponent_distance_clamped)|old_system|new_system|mono|stereo|3d)|cr_(?:default|none|arrow|cross|beam|size_nesw|size_ns|size_nwse|size_we|uparrow|hourglass|drag|appstart|handpoint|size_all)|asset_(?:object|unknown|sprite|sound|room|path|script|font|timeline|tiles|shader)|ds_type_(?:map|list|stack|queue|grid|priority)|ef_(?:explosion|ring|ellipse|firework|smoke|smokeup|star|spark|flare|cloud|rain|snow)|pt_shape_(?:pixel|disk|square|line|star|circle|ring|sphere|flare|spark|explosion|cloud|smoke|snow)|ps_(?:distr|shape)_(?:linear|gaussian|invgaussian|rectangle|ellipse|diamond|line)|ty_(?:real|string)|dll_(?:cdel|cdecl|stdcall)|matrix_(?:view|projection|world)|os_(?:win32|windows|macosx|ios|android|linux|unknown|winphone|win8native|psvita|ps4|xboxone|ps3|uwp)|browser_(?:not_a_browser|unknown|ie|firefox|chrome|safari|safari_mobile|opera|tizen|windows_store|ie_mobile)|device_ios_(?:unknown|iphone|iphone_retina|ipad|ipad_retina|iphone5|iphone6|iphone6plus)|device_(?:emulator|tablet)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|of_challenge_(?:win|lose|tie)|leaderboard_type_(?:number|time_mins_secs)|cmpfunc_(?:never|less|equal|lessequal|greater|notequal|greaterequal|always)|cull_(?:noculling|clockwise|counterclockwise)|lighttype_(?:dir|point)|iap_(?:ev_storeload|ev_product|ev_purchase|ev_consume|ev_restore|storeload_ok|storeload_failed|status_uninitialised|status_unavailable|status_loading|status_available|status_processing|status_restoring|failed|unavailable|available|purchased|canceled|refunded)|fb_login_(?:default|fallback_to_webview|no_fallback_to_webview|forcing_webview|use_system_account|forcing_safari)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|reaction_force_x|reaction_force_y|reaction_torque|motor_speed|angle|motor_torque|max_motor_torque|translation|speed|motor_force|max_motor_force|length_1|length_2|damping_ratio|frequency|lower_angle_limit|upper_angle_limit|angle_limits|max_length|max_torque|max_force)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_particle_flag_(?:water|zombie|wall|spring|elastic|viscous|powder|tensile|colourmixing|colormixing)|phy_particle_group_flag_(?:solid|rigid)|phy_particle_data_flag_(?:typeflags|position|velocity|colour|color|category)|achievement_(?:our_info|friends_info|leaderboard_info|info|filter_(?:all_players|friends_only|favorites_only)|type_challenge|type_score_challenge|pic_loaded|show_(?:ui|profile|leaderboard|achievement|bank|friend_picker|purchase_prompt))|network_(?:socket_(?:tcp|udp|bluetooth)|type_(?:connect|disconnect|data|non_blocking_connect)|config_(?:connect_timeout|use_non_blocking_socket|enable_reliable_udp|disable_reliable_udp))|buffer_(?:fixed|grow|wrap|fast|vbuffer|network|u8|s8|u16|s16|u32|s32|u64|f16|f32|f64|bool|text|string|seek_start|seek_relative|seek_end|generalerror|outofspace|outofbounds|invalidtype)|gp_(?:face\\d|shoulderl|shoulderr|shoulderlb|shoulderrb|select|start|stickl|stickr|padu|padd|padl|padr|axislh|axislv|axisrh|axisrv)|ov_(?:friends|community|players|settings|gamegroup|achievements)|lb_sort_(?:none|ascending|descending)|lb_disp_(?:none|numeric|time_sec|time_ms)|ugc_(?:result_success|filetype_(?:community|microtrans)|visibility_(?:public|friends_only|private)|query_RankedBy(?:Vote|PublicationDate|Trend|NumTimesReported|TotalVotesAsc|VotesUp|TextSearch)|query_(?:AcceptedForGameRankedByAcceptanceDate|FavoritedByFriendsRankedByPublicationDate|CreatedByFriendsRankedByPublicationDate|NotYetRated)|sortorder_CreationOrder(?:Desc|Asc)|sortorder_(?:TitleAsc|LastUpdatedDesc|SubscriptionDateDesc|VoteScoreDesc|ForModeration)|list_(?:Published|VotedOn|VotedUp|VotedDown|WillVoteLater|Favorited|Subscribed|UsedOrPlayed|Followed)|match_(?:Items|Items_Mtx|Items_ReadyToUse|Collections|Artwork|Videos|Screenshots|AllGuides|WebGuides|IntegratedGuides|UsableInGame|ControllerBindings))|vertex_usage_(?:position|colour|color|normal|texcoord|textcoord|blendweight|blendindices|psize|tangent|binormal|fog|depth|sample)|vertex_type_(?:float\\d|colour|color|ubyte4)|layerelementtype_(?:undefined|background|instance|oldtilemap|sprite|tilemap|particlesystem|tile)|tile_(?:rotate|flip|mirror|index_mask)|input_type|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|(?:obj|scr|spr|rm)\\w+)\\b/,\n      variable:\n        /\\b(?:x|y|(?:x|y)(?:previous|start)|(?:h|v)speed|direction|speed|friction|gravity|gravity_direction|path_(?:index|position|positionprevious|speed|scale|orientation|endaction)|object_index|id|solid|persistent|mask_index|instance_(?:count|id)|alarm|timeline_(?:index|position|speed|running|loop)|visible|sprite_(?:index|width|height|xoffset|yoffset)|image_(?:number|index|speed|depth|xscale|yscale|angle|alpha|blend)|bbox_(?:left|right|top|bottom)|layer|phy_(?:rotation|(?:position|linear_velocity|speed|com|collision|col_normal)_(?:x|y)|angular_(?:velocity|damping)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|working_directory|webgl_enabled|view_(?:(?:y|x|w|h)view|(?:y|x|w|h)port|(?:v|h)(?:speed|border)|visible|surface_id|object|enabled|current|angle)|undefined|transition_(?:steps|kind|color)|temp_directory|show_(?:score|lives|health)|secure_mode|score|room_(?:width|speed|persistent|last|height|first|caption)|room|pointer_(?:null|invalid)|os_(?:version|type|device|browser)|mouse_(?:y|x|lastbutton|button)|lives|keyboard_(?:string|lastkey|lastchar|key)|iap_data|health|gamemaker_(?:version|registered|pro)|game_(?:save|project|display)_(?:id|name)|fps_real|fps|event_(?:type|object|number|action)|error_(?:occurred|last)|display_aa|delta_time|debug_mode|cursor_sprite|current_(?:year|weekday|time|second|month|minute|hour|day)|caption_(?:score|lives|health)|browser_(?:width|height)|background_(?:yscale|y|xscale|x|width|vtiled|vspeed|visible|showcolour|showcolor|index|htiled|hspeed|height|foreground|colour|color|blend|alpha)|async_load|application_surface|argument(?:_relitive|_count|\\d)|argument|global|local|self|other)\\b/\n    })\n}\n","'use strict'\n\nmodule.exports = gn\ngn.displayName = 'gn'\ngn.aliases = ['gni']\nfunction gn(Prism) {\n  // https://gn.googlesource.com/gn/+/refs/heads/main/docs/reference.md#grammar\n  Prism.languages.gn = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'string-literal': {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[\\s\\S]*?\\}|[a-zA-Z_]\\w*|0x[a-fA-F0-9]{2})/,\n          lookbehind: true,\n          inside: {\n            number: /^\\$0x[\\s\\S]{2}$/,\n            variable: /^\\$\\w+$/,\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: null // see below\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    keyword: /\\b(?:else|if)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    'builtin-function': {\n      // a few functions get special highlighting to improve readability\n      pattern:\n        /\\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\\s*\\()/i,\n      alias: 'keyword'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant:\n      /\\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_out_dir|target_os)\\b/,\n    number: /-?\\b\\d+\\b/,\n    operator: /[-+!=<>]=?|&&|\\|\\|/,\n    punctuation: /[(){}[\\],.]/\n  }\n  Prism.languages.gn['string-literal'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.gn\n  Prism.languages.gni = Prism.languages.gn\n}\n","'use strict'\n\nmodule.exports = go\ngo.displayName = 'go'\ngo.aliases = []\nfunction go(Prism) {\n  Prism.languages.go = Prism.languages.extend('clike', {\n    string: {\n      pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n    boolean: /\\b(?:_|iota|nil|true|false)\\b/,\n    number: /(?:\\b0x[a-f\\d]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n    operator:\n      /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n    builtin:\n      /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/\n  })\n  delete Prism.languages.go['class-name']\n}\n","'use strict'\n\nmodule.exports = graphql\ngraphql.displayName = 'graphql'\ngraphql.aliases = []\nfunction graphql(Prism) {\n  Prism.languages.graphql = {\n    comment: /#.*/,\n    description: {\n      pattern:\n        /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'language-markdown': {\n          pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: Prism.languages.markdown\n        }\n      }\n    },\n    string: {\n      pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:true|false)\\b/,\n    variable: /\\$[a-z_]\\w*/i,\n    directive: {\n      pattern: /@[a-z_]\\w*/i,\n      alias: 'function'\n    },\n    'attr-name': {\n      pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n      greedy: true\n    },\n    'atom-input': {\n      pattern: /[A-Z]\\w*Input(?=!?.*$)/m,\n      alias: 'class-name'\n    },\n    scalar: /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n      lookbehind: true\n    },\n    fragment: {\n      pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-mutation': {\n      pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-query': {\n      pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword:\n      /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n    operator: /[!=|&]|\\.{3}/,\n    'property-query': /\\w+(?=\\s*\\()/,\n    object: /\\w+(?=\\s*\\{)/,\n    punctuation: /[!(){}\\[\\]:=,]/,\n    property: /\\w+/\n  }\n  Prism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n    if (env.language !== 'graphql') {\n      return\n    }\n    /**\n     * get the graphql token stream that we want to customize\n     *\n     * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n     * @type {Token[]}\n     */\n    var validTokens = env.tokens.filter(function (token) {\n      return (\n        typeof token !== 'string' &&\n        token.type !== 'comment' &&\n        token.type !== 'scalar'\n      )\n    })\n    var currentIndex = 0\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {number} offset\n     * @returns {Token | undefined}\n     */\n    function getToken(offset) {\n      return validTokens[currentIndex + offset]\n    }\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {readonly string[]} types\n     * @param {number} [offset=0]\n     * @returns {boolean}\n     */\n    function isTokenType(types, offset) {\n      offset = offset || 0\n      for (var i = 0; i < types.length; i++) {\n        var token = getToken(i + offset)\n        if (!token || token.type !== types[i]) {\n          return false\n        }\n      }\n      return true\n    }\n    /**\n     * Returns the index of the closing bracket to an opening bracket.\n     *\n     * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n     *\n     * If no closing bracket could be found, `-1` will be returned.\n     *\n     * @param {RegExp} open\n     * @param {RegExp} close\n     * @returns {number}\n     */\n    function findClosingBracket(open, close) {\n      var stackHeight = 1\n      for (var i = currentIndex; i < validTokens.length; i++) {\n        var token = validTokens[i]\n        var content = token.content\n        if (token.type === 'punctuation' && typeof content === 'string') {\n          if (open.test(content)) {\n            stackHeight++\n          } else if (close.test(content)) {\n            stackHeight--\n            if (stackHeight === 0) {\n              return i\n            }\n          }\n        }\n      }\n      return -1\n    }\n    /**\n     * Adds an alias to the given token.\n     *\n     * @param {Token} token\n     * @param {string} alias\n     * @returns {void}\n     */\n    function addAlias(token, alias) {\n      var aliases = token.alias\n      if (!aliases) {\n        token.alias = aliases = []\n      } else if (!Array.isArray(aliases)) {\n        token.alias = aliases = [aliases]\n      }\n      aliases.push(alias)\n    }\n    for (; currentIndex < validTokens.length; ) {\n      var startToken = validTokens[currentIndex++] // add special aliases for mutation tokens\n      if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n        // any array of the names of all input variables (if any)\n        var inputVariables = []\n        if (\n          isTokenType(['definition-mutation', 'punctuation']) &&\n          getToken(1).content === '('\n        ) {\n          // definition\n          currentIndex += 2 // skip 'definition-mutation' and 'punctuation'\n          var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/)\n          if (definitionEnd === -1) {\n            continue\n          } // find all input variables\n          for (; currentIndex < definitionEnd; currentIndex++) {\n            var t = getToken(0)\n            if (t.type === 'variable') {\n              addAlias(t, 'variable-input')\n              inputVariables.push(t.content)\n            }\n          }\n          currentIndex = definitionEnd + 1\n        }\n        if (\n          isTokenType(['punctuation', 'property-query']) &&\n          getToken(0).content === '{'\n        ) {\n          currentIndex++ // skip opening bracket\n          addAlias(getToken(0), 'property-mutation')\n          if (inputVariables.length > 0) {\n            var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/)\n            if (mutationEnd === -1) {\n              continue\n            } // give references to input variables a special alias\n            for (var i = currentIndex; i < mutationEnd; i++) {\n              var varToken = validTokens[i]\n              if (\n                varToken.type === 'variable' &&\n                inputVariables.indexOf(varToken.content) >= 0\n              ) {\n                addAlias(varToken, 'variable-input')\n              }\n            }\n          }\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = groovy\ngroovy.displayName = 'groovy'\ngroovy.aliases = []\nfunction groovy(Prism) {\n  Prism.languages.groovy = Prism.languages.extend('clike', {\n    string: [\n      {\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n        pattern:\n          /(\"\"\"|''')(?:[^\\\\]|\\\\[\\s\\S])*?\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true\n      },\n      {\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n        // simple division (see JS regex), so find a fix maybe?\n        pattern: /([\"'/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }\n    ],\n    keyword:\n      /\\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n    number:\n      /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n    operator: {\n      pattern:\n        /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n      lookbehind: true\n    },\n    punctuation: /\\.+|[{}[\\];(),:$]/\n  })\n  Prism.languages.insertBefore('groovy', 'string', {\n    shebang: {\n      pattern: /#!.+/,\n      alias: 'comment'\n    }\n  })\n  Prism.languages.insertBefore('groovy', 'punctuation', {\n    'spock-block': /\\b(?:setup|given|when|then|and|cleanup|expect|where):/\n  })\n  Prism.languages.insertBefore('groovy', 'function', {\n    annotation: {\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true,\n      alias: 'punctuation'\n    }\n  }) // Handle string interpolation\n  Prism.hooks.add('wrap', function (env) {\n    if (env.language === 'groovy' && env.type === 'string') {\n      var delimiter = env.content.value[0]\n      if (delimiter != \"'\") {\n        var pattern = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/\n        if (delimiter === '$') {\n          pattern = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/\n        } // To prevent double HTML-encoding we have to decode env.content first\n        env.content.value = env.content.value\n          .replace(/&lt;/g, '<')\n          .replace(/&amp;/g, '&')\n        env.content = Prism.highlight(env.content.value, {\n          expression: {\n            pattern: pattern,\n            lookbehind: true,\n            inside: Prism.languages.groovy\n          }\n        })\n        env.classes.push(delimiter === '/' ? 'regex' : 'gstring')\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nmodule.exports = haml\nhaml.displayName = 'haml'\nhaml.aliases = []\nfunction haml(Prism) {\n  Prism.register(refractorRuby)\n  /* TODO\nHandle multiline code after tag\n%foo= some |\nmultiline |\ncode |\n*/\n  ;(function (Prism) {\n    Prism.languages.haml = {\n      // Multiline stuff should appear before the rest\n      'multiline-comment': {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      'multiline-code': [\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*\\|[\\t ]*)*/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        }\n      ],\n      // See at the end of the file for known filters\n      filter: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'variable'\n          }\n        }\n      },\n      markup: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      },\n      doctype: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n        lookbehind: true\n      },\n      tag: {\n        // Allows for one nested group of braces\n        pattern:\n          /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^{}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              // Lookbehind tries to prevent interpolations from breaking it all\n              // Allows for one nested group of braces\n              pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^{}])+\\}/,\n              lookbehind: true,\n              inside: Prism.languages.ruby\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n                  lookbehind: true\n                },\n                'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[=(),]/\n              }\n            },\n            {\n              pattern: /\\[[^\\]]+\\]/,\n              inside: Prism.languages.ruby\n            }\n          ],\n          punctuation: /[<>]/\n        }\n      },\n      code: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n        lookbehind: true,\n        inside: Prism.languages.ruby\n      },\n      // Interpolations in plain text\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.ruby\n        }\n      },\n      punctuation: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n        lookbehind: true\n      }\n    }\n    var filter_pattern =\n      '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ].+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+' // Non exhaustive list of available filters and associated languages\n    var filters = [\n      'css',\n      {\n        filter: 'coffee',\n        language: 'coffeescript'\n      },\n      'erb',\n      'javascript',\n      'less',\n      'markdown',\n      'ruby',\n      'scss',\n      'textile'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string'\n          ? {\n              filter: filter,\n              language: filter\n            }\n          : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('{{filter_name}}', function () {\n              return filter.filter\n            })\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            },\n            rest: Prism.languages[filter.language]\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('haml', 'filter', all_filters)\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = handlebars\nhandlebars.displayName = 'handlebars'\nhandlebars.aliases = ['hbs']\nfunction handlebars(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.handlebars = {\n      comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n      delimiter: {\n        pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      boolean: /\\b(?:true|false)\\b/,\n      block: {\n        pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/i,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      brackets: {\n        pattern: /\\[[^\\]]+\\]/,\n        inside: {\n          punctuation: /\\[|\\]/,\n          variable: /[\\s\\S]+/\n        }\n      },\n      punctuation: /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n      variable: /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'handlebars',\n        handlebarsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(\n        env,\n        'handlebars'\n      )\n    })\n    Prism.languages.hbs = Prism.languages.handlebars\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = haskell\nhaskell.displayName = 'haskell'\nhaskell.aliases = ['hs']\nfunction haskell(Prism) {\n  Prism.languages.haskell = {\n    comment: {\n      pattern:\n        /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|$)|\\{-[\\s\\S]*?-\\})/m,\n      lookbehind: true\n    },\n    char: {\n      pattern:\n        /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\(?:\\S|\\s+\\\\))*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:import|qualified|as|hiding)\\b/,\n        punctuation: /\\./\n      }\n    },\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n    // decimal integers and floating point numbers | octal integers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n    operator: [\n      {\n        // infix operator\n        pattern: /`(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n        greedy: true\n      },\n      {\n        // function composition\n        pattern: /(\\s)\\.(?=\\s)/,\n        lookbehind: true\n      }, // Most of this is needed because of the meaning of a single '.'.\n      // If it stands alone freely, it is the function composition.\n      // It may also be a separator between a module name and an identifier => no\n      // operator. If it comes together with other special characters it is an\n      // operator too.\n      //\n      // This regex means: /[-!#$%*+=?&@|~.:<>^\\\\\\/]+/ without /\\./.\n      /[-!#$%*+=?&@|~:<>^\\\\\\/][-!#$%*+=?&@|~.:<>^\\\\\\/]*|\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+/\n    ],\n    // In Haskell, nearly everything is a variable, do not highlight these.\n    hvariable: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    constant: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.hs = Prism.languages.haskell\n}\n","'use strict'\n\nmodule.exports = haxe\nhaxe.displayName = 'haxe'\nhaxe.aliases = []\nfunction haxe(Prism) {\n  Prism.languages.haxe = Prism.languages.extend('clike', {\n    // Strings can be multi-line\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,\n          lookbehind: true,\n          inside: {\n            interpolation: {\n              pattern: /^\\$\\w*/,\n              alias: 'variable'\n            } // See rest below\n          }\n        }\n      }\n    },\n    // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n    keyword:\n      /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,\n    operator: /\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/\n  })\n  Prism.languages.insertBefore('haxe', 'class-name', {\n    regex: {\n      pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'keyword', {\n    preprocessor: {\n      pattern: /#\\w+/,\n      alias: 'builtin'\n    },\n    metadata: {\n      pattern: /@:?\\w+/,\n      alias: 'symbol'\n    },\n    reification: {\n      pattern: /\\$(?:\\w+|(?=\\{))/,\n      alias: 'variable'\n    }\n  })\n  Prism.languages.haxe['string'].inside['interpolation'].inside.rest =\n    Prism.languages.haxe\n  delete Prism.languages.haxe['class-name']\n}\n","'use strict'\n\nmodule.exports = hcl\nhcl.displayName = 'hcl'\nhcl.aliases = []\nfunction hcl(Prism) {\n  Prism.languages.hcl = {\n    comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    heredoc: {\n      pattern: /<<-?(\\w+\\b)[\\s\\S]*?^[ \\t]*\\1/m,\n      greedy: true,\n      alias: 'string'\n    },\n    keyword: [\n      {\n        pattern:\n          /(?:resource|data)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+\\{)/i,\n        inside: {\n          type: {\n            pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      {\n        pattern:\n          /(?:provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?=\\{)/i,\n        inside: {\n          type: {\n            pattern:\n              /(provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      /[\\w-]+(?=\\s+\\{)/\n    ],\n    property: [/[-\\w\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\n    string: {\n      pattern:\n        /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+(?!\\$)|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n          lookbehind: true,\n          inside: {\n            type: {\n              pattern:\n                /(\\b(?:terraform|var|self|count|module|path|data|local)\\b\\.)[\\w\\*]+/i,\n              lookbehind: true,\n              alias: 'variable'\n            },\n            keyword: /\\b(?:terraform|var|self|count|module|path|data|local)\\b/i,\n            function: /\\w+(?=\\()/,\n            string: {\n              pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n              greedy: true\n            },\n            number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n            punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n          }\n        }\n      }\n    },\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:true|false)\\b/i,\n    punctuation: /[=\\[\\]{}]/\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = hlsl\nhlsl.displayName = 'hlsl'\nhlsl.aliases = []\nfunction hlsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.hlsl = Prism.languages.extend('c', {\n    // Regarding keywords and class names:\n    // The list of all keywords was split into 'keyword' and 'class-name' tokens based on whether they are capitalized.\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-keywords\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-reserved-words\n    'class-name': [\n      Prism.languages.c['class-name'],\n      /\\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RasterizerState|RenderTargetView|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\\b/\n    ],\n    keyword: [\n      // HLSL keyword\n      /\\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\\b/, // scalar, vector, and matrix types\n      /\\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\\b/\n    ],\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-grammar#floating-point-numbers\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?|\\b0x[\\da-fA-F]+)[fFhHlLuU]?\\b/,\n    boolean: /\\b(?:false|true)\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = hoon\nhoon.displayName = 'hoon'\nhoon.aliases = []\nfunction hoon(Prism) {\n  Prism.languages.hoon = {\n    constant: /%(?:\\.[ny]|[\\w-]+)/,\n    comment: {\n      pattern: /::.*/,\n      greedy: true\n    },\n    'class-name': [\n      {\n        pattern: /@(?:[A-Za-z0-9-]*[A-Za-z0-9])?/\n      },\n      /\\*/\n    ],\n    function: /(?:\\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword:\n      /\\.[\\^\\+\\*=\\?]|![><:\\.=\\?!]|=[>|:,\\.\\-\\^<+;/~\\*\\?]|\\?[>|:\\.\\-\\^<\\+&~=@!]|\\|[\\$_%:\\.\\-\\^~\\*=@\\?]|\\+[|\\$\\+\\*]|:[_\\-\\^\\+~\\*]|%[_:\\.\\-\\^\\+~\\*=]|\\^[|:\\.\\-\\+&~\\*=\\?]|\\$[|_%:<>\\-\\^&~@=\\?]|;[:<\\+;\\/~\\*=]|~[>|\\$_%<\\+\\/&=\\?!]|--|==/\n  }\n}\n","'use strict'\n\nmodule.exports = hpkp\nhpkp.displayName = 'hpkp'\nhpkp.aliases = []\nfunction hpkp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n   */\n  Prism.languages.hpkp = {\n    directive: {\n      pattern:\n        /\\b(?:(?:includeSubDomains|preload|strict)(?: |;)|pin-sha256=\"[a-zA-Z\\d+=/]+\"|(?:max-age|report-uri)=|report-to )/,\n      alias: 'keyword'\n    },\n    safe: {\n      pattern: /\\b\\d{7,}\\b/,\n      alias: 'selector'\n    },\n    unsafe: {\n      pattern: /\\b\\d{1,6}\\b/,\n      alias: 'function'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = hsts\nhsts.displayName = 'hsts'\nhsts.aliases = []\nfunction hsts(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n   */\n  Prism.languages.hsts = {\n    directive: {\n      pattern: /\\b(?:max-age=|includeSubDomains|preload)/,\n      alias: 'keyword'\n    },\n    safe: {\n      pattern: /\\b\\d{8,}\\b/,\n      alias: 'selector'\n    },\n    unsafe: {\n      pattern: /\\b\\d{1,7}\\b/,\n      alias: 'function'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = http\nhttp.displayName = 'http'\nhttp.aliases = []\nfunction http(Prism) {\n  ;(function (Prism) {\n    Prism.languages.http = {\n      'request-line': {\n        pattern:\n          /^(?:GET|HEAD|POST|PUT|DELETE|CONNECT|OPTIONS|TRACE|PATCH|PRI|SEARCH)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[0-9.]+/m,\n        inside: {\n          // HTTP Method\n          method: {\n            pattern: /^[A-Z]+\\b/,\n            alias: 'property'\n          },\n          // Request Target e.g. http://example.com, /path/to/file\n          'request-target': {\n            pattern: /^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,\n            lookbehind: true,\n            alias: 'url',\n            inside: Prism.languages.uri\n          },\n          // HTTP Version\n          'http-version': {\n            pattern: /^(\\s)HTTP\\/[0-9.]+/,\n            lookbehind: true,\n            alias: 'property'\n          }\n        }\n      },\n      'response-status': {\n        pattern: /^HTTP\\/[0-9.]+ \\d+ .+/m,\n        inside: {\n          // HTTP Version\n          'http-version': {\n            pattern: /^HTTP\\/[0-9.]+/,\n            alias: 'property'\n          },\n          // Status Code\n          'status-code': {\n            pattern: /^(\\s)\\d+(?=\\s)/,\n            lookbehind: true,\n            alias: 'number'\n          },\n          // Reason Phrase\n          'reason-phrase': {\n            pattern: /^(\\s).+/,\n            lookbehind: true,\n            alias: 'string'\n          }\n        }\n      },\n      // HTTP header name\n      'header-name': {\n        pattern: /^[\\w-]+:(?=.)/m,\n        alias: 'keyword'\n      }\n    } // Create a mapping of Content-Type headers to language definitions\n    var langs = Prism.languages\n    var httpLanguages = {\n      'application/javascript': langs.javascript,\n      'application/json': langs.json || langs.javascript,\n      'application/xml': langs.xml,\n      'text/xml': langs.xml,\n      'text/html': langs.html,\n      'text/css': langs.css\n    } // Declare which types can also be suffixes\n    var suffixTypes = {\n      'application/json': true,\n      'application/xml': true\n    }\n    /**\n     * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n     *\n     * @param {string} contentType\n     * @returns {string}\n     */\n    function getSuffixPattern(contentType) {\n      var suffix = contentType.replace(/^[a-z]+\\//, '')\n      var suffixPattern = '\\\\w+/(?:[\\\\w.-]+\\\\+)+' + suffix + '(?![+\\\\w.-])'\n      return '(?:' + contentType + '|' + suffixPattern + ')'\n    } // Insert each content type parser that has its associated language\n    // currently loaded.\n    var options\n    for (var contentType in httpLanguages) {\n      if (httpLanguages[contentType]) {\n        options = options || {}\n        var pattern = suffixTypes[contentType]\n          ? getSuffixPattern(contentType)\n          : contentType\n        options[contentType.replace(/\\//g, '-')] = {\n          pattern: RegExp(\n            '(content-type:\\\\s*' +\n              pattern +\n              '(?:(?:\\\\r\\\\n?|\\\\n).+)*)(?:\\\\r?\\\\n|\\\\r){2}[\\\\s\\\\S]*',\n            'i'\n          ),\n          lookbehind: true,\n          inside: httpLanguages[contentType]\n        }\n      }\n    }\n    if (options) {\n      Prism.languages.insertBefore('http', 'header-name', options)\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ichigojam\nichigojam.displayName = 'ichigojam'\nichigojam.aliases = []\nfunction ichigojam(Prism) {\n  // according to the offical reference (EN)\n  // https://ichigojam.net/IchigoJam-en.html\n  Prism.languages.ichigojam = {\n    comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/i,\n      greedy: true\n    },\n    number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GSB|GOTO|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|RIGHT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n    label: /(?:\\B@\\S+)/i,\n    operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n    punctuation: /[\\[,;:()\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = icon\nicon.displayName = 'icon'\nicon.aliases = []\nfunction icon(Prism) {\n  Prism.languages.icon = {\n    comment: /#.*/,\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n    'builtin-keyword': {\n      pattern:\n        /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n      alias: 'variable'\n    },\n    directive: {\n      pattern: /\\$\\w+/,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n    operator:\n      /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n    punctuation: /[\\[\\](){},;]/\n  }\n}\n","'use strict'\n\nmodule.exports = icuMessageFormat\nicuMessageFormat.displayName = 'icuMessageFormat'\nicuMessageFormat.aliases = []\nfunction icuMessageFormat(Prism) {\n  // https://unicode-org.github.io/icu/userguide/format_parse/messages/\n  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/MessageFormat.html\n  ;(function (Prism) {\n    /**\n     * @param {string} source\n     * @param {number} level\n     * @returns {string}\n     */\n    function nested(source, level) {\n      if (level <= 0) {\n        return /[]/.source\n      } else {\n        return source.replace(/<SELF>/g, function () {\n          return nested(source, level - 1)\n        })\n      }\n    }\n    var stringPattern = /'[{}:=,](?:[^']|'')*'(?!')/\n    var escape = {\n      pattern: /''/,\n      greedy: true,\n      alias: 'operator'\n    }\n    var string = {\n      pattern: stringPattern,\n      greedy: true,\n      inside: {\n        escape: escape\n      }\n    }\n    var argumentSource = nested(\n      /\\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\\}/.source.replace(\n        /<STR>/g,\n        function () {\n          return stringPattern.source\n        }\n      ),\n      8\n    )\n    var nestedMessage = {\n      pattern: RegExp(argumentSource),\n      inside: {\n        message: {\n          pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        'message-delimiter': {\n          pattern: /./,\n          alias: 'punctuation'\n        }\n      }\n    }\n    Prism.languages['icu-message-format'] = {\n      argument: {\n        pattern: RegExp(argumentSource),\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n            lookbehind: true,\n            inside: {\n              'argument-name': {\n                pattern: /^(\\s*)[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'choice-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1ChoiceFormat.html#details\n                pattern: /^(\\s*,\\s*choice\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  punctuation: /\\|/,\n                  range: {\n                    pattern: /^(\\s*)[+-]?(?:\\d+(?:\\.\\d*)?|\\u221e)\\s*[<#\\u2264]/,\n                    lookbehind: true,\n                    inside: {\n                      operator: /[<#\\u2264]/,\n                      number: /\\S+/\n                    }\n                  },\n                  rest: null // see below\n                }\n              },\n              'plural-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern:\n                  /^(\\s*,\\s*(?:plural|selectordinal)\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  offset: /^offset:\\s*\\d+/,\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /=\\d+|[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^(?:zero|one|two|few|many|other)$/\n                    }\n                  }\n                }\n              },\n              'select-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/SelectFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern: /^(\\s*,\\s*select\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^other$/\n                    }\n                  }\n                }\n              },\n              keyword: /\\b(?:choice|plural|select|selectordinal)\\b/,\n              'arg-type': {\n                pattern: /\\b(?:number|date|time|spellout|ordinal|duration)\\b/,\n                alias: 'keyword'\n              },\n              'arg-skeleton': {\n                pattern: /(,\\s*)::[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'arg-style': {\n                pattern:\n                  /(,\\s*)(?:short|medium|long|full|integer|currency|percent)(?=\\s*$)/,\n                lookbehind: true\n              },\n              'arg-style-text': {\n                pattern: RegExp(\n                  /(^\\s*,\\s*(?=\\S))/.source +\n                    nested(/(?:[^{}']|'[^']*'|\\{(?:<SELF>)?\\})+/.source, 8) +\n                    '$'\n                ),\n                lookbehind: true,\n                alias: 'string'\n              },\n              punctuation: /,/\n            }\n          },\n          'argument-delimiter': {\n            pattern: /./,\n            alias: 'operator'\n          }\n        }\n      },\n      escape: escape,\n      string: string\n    }\n    nestedMessage.inside.message.inside = Prism.languages['icu-message-format']\n    Prism.languages['icu-message-format'].argument.inside.content.inside[\n      'choice-style'\n    ].inside.rest = Prism.languages['icu-message-format']\n  })(Prism)\n}\n","'use strict'\nvar refractorHaskell = require('./haskell.js')\nmodule.exports = idris\nidris.displayName = 'idris'\nidris.aliases = ['idr']\nfunction idris(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.idris = Prism.languages.extend('haskell', {\n    comment: {\n      pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n    },\n    keyword:\n      /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n    'import-statement': {\n      pattern: /(^\\s*)import\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n      lookbehind: true\n    },\n    builtin: undefined\n  })\n  Prism.languages.idr = Prism.languages.idris\n}\n","'use strict'\n\nmodule.exports = iecst\niecst.displayName = 'iecst'\niecst.aliases = []\nfunction iecst(Prism) {\n  Prism.languages.iecst = {\n    comment: [\n      {\n        pattern:\n          /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\(\\*[\\s\\S]*?(?:\\*\\)|$)|\\{[\\s\\S]*?(?:\\}|$))/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'class-name':\n      /\\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:GLOBAL|INPUT|PUTPUT|IN_OUT|ACCESS|TEMP|EXTERNAL|CONFIG)|VAR|METHOD|PROPERTY)\\b/i,\n    keyword:\n      /\\b(?:(?:END_)?(?:IF|WHILE|REPEAT|CASE|FOR)|ELSE|FROM|THEN|ELSIF|DO|TO|BY|PRIVATE|PUBLIC|PROTECTED|CONSTANT|RETURN|EXIT|CONTINUE|GOTO|JMP|AT|RETAIN|NON_RETAIN|TASK|WITH|UNTIL|USING|EXTENDS|IMPLEMENTS|GET|SET|__TRY|__CATCH|__FINALLY|__ENDTRY)\\b/,\n    variable:\n      /\\b(?:AT|BOOL|BYTE|(?:D|L)?WORD|U?(?:S|D|L)?INT|L?REAL|TIME(?:_OF_DAY)?|TOD|DT|DATE(?:_AND_TIME)?|STRING|ARRAY|ANY|POINTER)\\b/,\n    symbol: /%[IQM][XBWDL][\\d.]*|%[IQ][\\d.]*/,\n    number:\n      /\\b(?:16#[\\da-f]+|2#[01_]+|0x[\\da-f]+)\\b|\\b(?:T|D|DT|TOD)#[\\d_shmd:]*|\\b[A-Z]*#[\\d.,_]*|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:TRUE|FALSE|NULL)\\b/,\n    function: /\\w+(?=\\()/,\n    operator:\n      /(?:S?R?:?=>?|&&?|\\*\\*?|<=?|>=?|[-:^/+])|\\b(?:OR|AND|MOD|NOT|XOR|LE|GE|EQ|NE|GT|LT)\\b/,\n    punctuation: /[();]/,\n    type: {\n      pattern: /#/,\n      alias: 'selector'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = ignore\nignore.displayName = 'ignore'\nignore.aliases = ['gitignore', 'hgignore', 'npmignore']\nfunction ignore(Prism) {\n  ;(function (Prism) {\n    Prism.languages.ignore = {\n      // https://git-scm.com/docs/gitignore\n      comment: /^#.*/m,\n      entry: {\n        pattern: /\\S(?:.*(?:(?:\\\\ )|\\S))?/,\n        alias: 'string',\n        inside: {\n          operator: /^!|\\*\\*?|\\?/,\n          regex: {\n            pattern: /(^|[^\\\\])\\[[^\\[\\]]*\\]/,\n            lookbehind: true\n          },\n          punctuation: /\\//\n        }\n      }\n    }\n    Prism.languages.gitignore = Prism.languages.ignore\n    Prism.languages.hgignore = Prism.languages.ignore\n    Prism.languages.npmignore = Prism.languages.ignore\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = inform7\ninform7.displayName = 'inform7'\ninform7.aliases = []\nfunction inform7(Prism) {\n  Prism.languages.inform7 = {\n    string: {\n      pattern: /\"[^\"]*\"/,\n      inside: {\n        substitution: {\n          pattern: /\\[[^\\[\\]]+\\]/,\n          inside: {\n            delimiter: {\n              pattern: /\\[|\\]/,\n              alias: 'punctuation'\n            } // See rest below\n          }\n        }\n      }\n    },\n    comment: {\n      pattern: /\\[[^\\[\\]]+\\]/,\n      greedy: true\n    },\n    title: {\n      pattern: /^[ \\t]*(?:volume|book|part(?! of)|chapter|section|table)\\b.+/im,\n      alias: 'important'\n    },\n    number: {\n      pattern:\n        /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?(?:(?!\\d)\\w+)?|\\b(?:one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve))\\b(?!-)/i,\n      lookbehind: true\n    },\n    verb: {\n      pattern:\n        /(^|[^-])\\b(?:applying to|are|attacking|answering|asking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:s|ing)?|consulting|contain(?:s|ing)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:ve|s|ving)|hold(?:s|ing)?|impl(?:y|ies)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:s|ing)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:s|ing)?|setting|showing|singing|sleeping|smelling|squeezing|switching|support(?:s|ing)?|swearing|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:s|ing)?|var(?:y|ies|ying)|waiting|waking|waving|wear(?:s|ing)?)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    keyword: {\n      pattern:\n        /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|unless|the story)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n      lookbehind: true\n    },\n    property: {\n      pattern:\n        /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: on| off)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    position: {\n      pattern:\n        /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      pattern:\n        /(^|[^-])\\b(?:actions?|activit(?:y|ies)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    punctuation: /[.,:;(){}]/\n  }\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest =\n    Prism.languages.inform7 // We don't want the remaining text in the substitution to be highlighted as the string.\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest.text = {\n    pattern: /\\S(?:\\s*\\S)*/,\n    alias: 'comment'\n  }\n}\n","'use strict'\n\nmodule.exports = ini\nini.displayName = 'ini'\nini.aliases = []\nfunction ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    header: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern:\n        /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  }\n}\n","'use strict'\n\nmodule.exports = io\nio.displayName = 'io'\nio.aliases = []\nfunction io(Prism) {\n  Prism.languages.io = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }\n    ],\n    'triple-quoted-string': {\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:activate|activeCoroCount|asString|block|break|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getSlot|getEnvironmentVariable|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|call|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n    builtin:\n      /\\b(?:Array|AudioDevice|AudioMixer|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Regex|SGML|SGMLElement|SGMLParser|SQLite|Server|Sequence|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink|Random|BigNum)\\b/,\n    boolean: /\\b(?:true|false|nil)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?/i,\n    operator:\n      /[=!*/%+\\-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|\\b(?:return|and|or|not)\\b|@@?|\\?\\??|\\.\\./,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = j\nj.displayName = 'j'\nj.aliases = []\nfunction j(Prism) {\n  Prism.languages.j = {\n    comment: /\\bNB\\..*/,\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:(?:adverb|conjunction|CR|def|define|dyad|LF|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n    verb: {\n      // Negative look-ahead prevents bad highlighting\n      // of ^: ;. =. =: !. !:\n      pattern:\n        /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:[ejpx]|ad|ar)_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_\\b(?!\\.))/,\n    adverb: {\n      pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n      alias: 'builtin'\n    },\n    operator: /[=a][.:]|_\\./,\n    conjunction: {\n      pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n      alias: 'variable'\n    },\n    punctuation: /[()]/\n  }\n}\n","'use strict'\n\nmodule.exports = java\njava.displayName = 'java'\njava.aliases = []\nfunction java(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/ // full package (optional) + parent classes (optional)\n    var classNamePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\n      .source // based on the java naming conventions\n    var className = {\n      pattern: RegExp(classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /\\./\n      }\n    }\n    Prism.languages.java = Prism.languages.extend('clike', {\n      'class-name': [\n        className,\n        {\n          // variables and parameters\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      function: [\n        Prism.languages.clike.function,\n        {\n          pattern: /(::\\s*)[a-z_]\\w*/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('java', 'string', {\n      'triple-quoted-string': {\n        // http://openjdk.java.net/jeps/355#Description\n        pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n        greedy: true,\n        alias: 'string'\n      }\n    })\n    Prism.languages.insertBefore('java', 'class-name', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      },\n      namespace: {\n        pattern: RegExp(\n          /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(\n            /<keyword>/g,\n            function () {\n              return keywords.source\n            }\n          )\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJava = require('./java.js')\nvar refractorJavadoclike = require('./javadoclike.js')\nmodule.exports = javadoc\njavadoc.displayName = 'javadoc'\njavadoc.aliases = []\nfunction javadoc(Prism) {\n  Prism.register(refractorJava)\n  Prism.register(refractorJavadoclike)\n  ;(function (Prism) {\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source\n    var reference =\n      /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(\n        /<mem>/g,\n        function () {\n          return memberReference\n        }\n      )\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {})\n    Prism.languages.insertBefore('javadoc', 'keyword', {\n      reference: {\n        pattern: RegExp(\n          /(@(?:exception|throws|see|link|linkplain|value)\\s+(?:\\*\\s*)?)/\n            .source +\n            '(?:' +\n            reference +\n            ')'\n        ),\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n            lookbehind: true\n          },\n          field: {\n            pattern: /(#\\s*)\\w+/,\n            lookbehind: true\n          },\n          namespace: {\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          'class-name': /\\b[A-Z]\\w*/,\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[#()[\\],.]/\n        }\n      },\n      'class-name': {\n        // @param <T> the first generic type parameter\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.<>]/\n        }\n      },\n      'code-section': [\n        {\n          pattern:\n            /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n          lookbehind: true,\n          inside: {\n            code: {\n              // there can't be any HTML inside of {@code} tags\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: Prism.languages.java,\n              alias: 'language-java'\n            }\n          }\n        },\n        {\n          pattern:\n            /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n          lookbehind: true,\n          inside: {\n            line: {\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: {\n                // highlight HTML tags and entities\n                tag: Prism.languages.markup.tag,\n                entity: Prism.languages.markup.entity,\n                code: {\n                  // everything else is Java code\n                  pattern: /.+/,\n                  inside: Prism.languages.java,\n                  alias: 'language-java'\n                }\n              }\n            }\n          }\n        }\n      ],\n      tag: Prism.languages.markup.tag,\n      entity: Prism.languages.markup.entity\n    })\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = javadoclike\njavadoclike.displayName = 'javadoclike'\njavadoclike.aliases = []\nfunction javadoclike(Prism) {\n  ;(function (Prism) {\n    var javaDocLike = (Prism.languages.javadoclike = {\n      parameter: {\n        pattern:\n          /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:param|arg|arguments)\\s+)\\w+/m,\n        lookbehind: true\n      },\n      keyword: {\n        // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n        // @word, {@word}\n        pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n        lookbehind: true\n      },\n      punctuation: /[{}]/\n    })\n    /**\n     * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n     *\n     * @param {string} lang the language add doc comment support to.\n     * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n     */\n    function docCommentSupport(lang, callback) {\n      var tokenName = 'doc-comment'\n      var grammar = Prism.languages[lang]\n      if (!grammar) {\n        return\n      }\n      var token = grammar[tokenName]\n      if (!token) {\n        // add doc comment: /** */\n        var definition = {}\n        definition[tokenName] = {\n          pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          alias: 'comment'\n        }\n        grammar = Prism.languages.insertBefore(lang, 'comment', definition)\n        token = grammar[tokenName]\n      }\n      if (token instanceof RegExp) {\n        // convert regex to object\n        token = grammar[tokenName] = {\n          pattern: token\n        }\n      }\n      if (Array.isArray(token)) {\n        for (var i = 0, l = token.length; i < l; i++) {\n          if (token[i] instanceof RegExp) {\n            token[i] = {\n              pattern: token[i]\n            }\n          }\n          callback(token[i])\n        }\n      } else {\n        callback(token)\n      }\n    }\n    /**\n     * Adds doc-comment support to the given languages for the given documentation language.\n     *\n     * @param {string[]|string} languages\n     * @param {Object} docLanguage\n     */\n    function addSupport(languages, docLanguage) {\n      if (typeof languages === 'string') {\n        languages = [languages]\n      }\n      languages.forEach(function (lang) {\n        docCommentSupport(lang, function (pattern) {\n          if (!pattern.inside) {\n            pattern.inside = {}\n          }\n          pattern.inside.rest = docLanguage\n        })\n      })\n    }\n    Object.defineProperty(javaDocLike, 'addSupport', {\n      value: addSupport\n    })\n    javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = javascript\njavascript.displayName = 'javascript'\njavascript.aliases = ['js']\nfunction javascript(Prism) {\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    'class-name': [\n      Prism.languages.clike['class-name'],\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /((?:^|\\})\\s*)catch\\b/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n        lookbehind: true\n      }\n    ],\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function:\n      /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    number:\n      /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n  })\n  Prism.languages.javascript['class-name'][0].pattern =\n    /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      // eslint-disable-next-line regexp/no-dupe-characters-character-class\n      pattern:\n        /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\/|\\/$/,\n        'regex-flags': /^[a-z]+$/\n      }\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern:\n        /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    },\n    parameter: [\n      {\n        pattern:\n          /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    ],\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n  })\n  Prism.languages.insertBefore('javascript', 'string', {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    'template-string': {\n      pattern:\n        /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.addInlined('script', 'javascript') // add attribute support for all DOM events.\n    // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n    Prism.languages.markup.tag.addAttribute(\n      /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/\n        .source,\n      'javascript'\n    )\n  }\n  Prism.languages.js = Prism.languages.javascript\n}\n","'use strict'\n\nmodule.exports = javastacktrace\njavastacktrace.displayName = 'javastacktrace'\njavastacktrace.aliases = []\nfunction javastacktrace(Prism) {\n  // Specification:\n  // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/Throwable.html#printStackTrace()\n  Prism.languages.javastacktrace = {\n    // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: com.example.myproject.MyProjectServletException\n    // Caused by: MidLevelException: LowLevelException\n    // Suppressed: Resource$CloseFailException: Resource ID = 0\n    summary: {\n      pattern:\n        /^[\\t ]*(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?::.*)?$/m,\n      inside: {\n        keyword: {\n          pattern:\n            /^(\\s*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\n          lookbehind: true\n        },\n        // the current thread if the summary starts with 'Exception in thread'\n        string: {\n          pattern: /^(\\s*)\"[^\"]*\"/,\n          lookbehind: true\n        },\n        exceptions: {\n          pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\n          lookbehind: true,\n          inside: {\n            'class-name': /[\\w$]+(?=$|:)/,\n            namespace: /[a-z]\\w*/,\n            punctuation: /[.:]/\n          }\n        },\n        message: {\n          pattern: /(:\\s*)\\S.*/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        punctuation: /:/\n      }\n    },\n    // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)\n    // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes\n    // at java.base/java.lang.Class.forName0(Native Method)\n    // at Util.<init>(Unknown Source)\n    // at com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)\n    // at com.foo.loader//com.foo.bar.App.run(App.java:12)\n    // at acme@2.1/org.acme.Lib.test(Lib.java:80)\n    // at MyClass.mash(MyClass.java:9)\n    //\n    // More information:\n    // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StackTraceElement.html#toString()\n    //\n    // A valid Java module name is defined as:\n    //   \"A module name consists of one or more Java identifiers (§3.8) separated by \".\" tokens.\"\n    // https://docs.oracle.com/javase/specs/jls/se9/html/jls-6.html#jls-ModuleName\n    //\n    // A Java module version is defined by this class:\n    // https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleDescriptor.Version.html\n    // This is the implementation of the `parse` method in JDK13:\n    // https://github.com/matcdac/jdk/blob/2305df71d1b7710266ae0956d73927a225132c0f/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java#L1108\n    // However, to keep this simple, a version will be matched by the pattern /@[\\w$.+-]*/.\n    'stack-frame': {\n      pattern: /^[\\t ]*at (?:[\\w$./]|@[\\w$.+-]*\\/)+(?:<init>)?\\([^()]*\\)/m,\n      inside: {\n        keyword: {\n          pattern: /^(\\s*)at(?= )/,\n          lookbehind: true\n        },\n        source: [\n          // (Main.java:15)\n          // (Main.scala:15)\n          {\n            pattern: /(\\()\\w+\\.\\w+:\\d+(?=\\))/,\n            lookbehind: true,\n            inside: {\n              file: /^\\w+\\.\\w+/,\n              punctuation: /:/,\n              'line-number': {\n                pattern: /\\d+/,\n                alias: 'number'\n              }\n            }\n          }, // (Unknown Source)\n          // (Native Method)\n          // (...something...)\n          {\n            pattern: /(\\()[^()]*(?=\\))/,\n            lookbehind: true,\n            inside: {\n              keyword: /^(?:Unknown Source|Native Method)$/\n            }\n          }\n        ],\n        'class-name': /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\n        function: /(?:<init>|[\\w$]+)(?=\\()/,\n        'class-loader': {\n          pattern: /(\\s)[a-z]\\w*(?:\\.[a-z]\\w*)*(?=\\/[\\w@$.]*\\/)/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        module: {\n          pattern: /([\\s/])[a-z]\\w*(?:\\.[a-z]\\w*)*(?:@[\\w$.+-]*)?(?=\\/)/,\n          lookbehind: true,\n          inside: {\n            version: {\n              pattern: /(@)[\\s\\S]+/,\n              lookbehind: true,\n              alias: 'number'\n            },\n            punctuation: /[@.]/\n          }\n        },\n        namespace: {\n          pattern: /(?:[a-z]\\w*\\.)+/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()/.]/\n      }\n    },\n    // ... 32 more\n    // ... 32 common frames omitted\n    more: {\n      pattern: /^[\\t ]*\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\n      inside: {\n        punctuation: /\\.{3}/,\n        number: /\\d+/,\n        keyword: /\\b[a-z]+(?: [a-z]+)*\\b/\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = jexl\njexl.displayName = 'jexl'\njexl.aliases = []\nfunction jexl(Prism) {\n  Prism.languages.jexl = {\n    string: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    transform: {\n      pattern:\n        /(\\|\\s*)[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*/,\n      alias: 'function',\n      lookbehind: true\n    },\n    function:\n      /[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*\\s*(?=\\()/,\n    number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+\\b/,\n    operator: /[<>!]=?|-|\\+|&&|==|\\|\\|?|\\/\\/?|[?:*^%]/,\n    boolean: /\\b(?:true|false)\\b/,\n    keyword: /\\bin\\b/,\n    punctuation: /[{}[\\](),.]/\n  }\n}\n","'use strict'\n\nmodule.exports = jolie\njolie.displayName = 'jolie'\njolie.aliases = []\nfunction jolie(Prism) {\n  Prism.languages.jolie = Prism.languages.extend('clike', {\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:include|define|is_defined|undef|main|init|outputPort|inputPort|Location|Protocol|Interfaces|RequestResponse|OneWay|type|interface|extender|throws|cset|csets|forward|Aggregates|Redirects|embedded|courier|execution|sequential|concurrent|single|scope|install|throw|comp|cH|default|global|linkIn|linkOut|synchronized|this|new|for|if|else|while|in|Jolie|Java|Javascript|nullProcess|spawn|constants|with|provide|until|exit|foreach|instanceof|over|service)\\b/,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n    operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[:?\\/%^]/,\n    punctuation: /[,.]/,\n    builtin:\n      /\\b(?:undefined|string|int|void|long|Byte|bool|double|float|char|any)\\b/,\n    symbol: /[|;@]/\n  })\n  delete Prism.languages.jolie['class-name']\n  Prism.languages.insertBefore('jolie', 'keyword', {\n    function: {\n      pattern: /((?:\\b(?:outputPort|inputPort|in|service|courier)\\b|@)\\s*)\\w+/,\n      lookbehind: true\n    },\n    aggregates: {\n      pattern:\n        /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n      lookbehind: true,\n      inside: {\n        'with-extension': {\n          pattern: /\\bwith\\s+\\w+/,\n          inside: {\n            keyword: /\\bwith\\b/\n          }\n        },\n        function: {\n          pattern: /\\w+/\n        },\n        punctuation: {\n          pattern: /,/\n        }\n      }\n    },\n    redirects: {\n      pattern:\n        /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n      lookbehind: true,\n      inside: {\n        punctuation: {\n          pattern: /,/\n        },\n        function: {\n          pattern: /\\w+/\n        },\n        symbol: {\n          pattern: /=>/\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = jq\njq.displayName = 'jq'\njq.aliases = []\nfunction jq(Prism) {\n  ;(function (Prism) {\n    var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var string = RegExp(\n      /\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(/__/g, function () {\n        return interpolation\n      })\n    )\n    var stringInterpolation = {\n      interpolation: {\n        pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n        lookbehind: true,\n        inside: {\n          content: {\n            pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          punctuation: /^\\\\\\(|\\)$/\n        }\n      }\n    }\n    var jq = (Prism.languages.jq = {\n      comment: /#.*/,\n      property: {\n        pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n        greedy: true,\n        inside: stringInterpolation\n      },\n      string: {\n        pattern: string,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      function: {\n        pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n        lookbehind: true\n      },\n      variable: /\\B\\$\\w+/,\n      'property-literal': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        alias: 'property'\n      },\n      keyword:\n        /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\n      operator: [\n        {\n          pattern: /\\|=?/,\n          alias: 'pipe'\n        },\n        /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|or|not)\\b/\n      ],\n      'c-style-function': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        alias: 'function'\n      },\n      punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n      dot: {\n        pattern: /\\./,\n        alias: 'important'\n      }\n    })\n    stringInterpolation.interpolation.inside.content.inside = jq\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = jsExtras\njsExtras.displayName = 'jsExtras'\njsExtras.aliases = []\nfunction jsExtras(Prism) {\n  ;(function (Prism) {\n    Prism.languages.insertBefore('javascript', 'function-variable', {\n      'method-variable': {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' +\n            Prism.languages.javascript['function-variable'].pattern.source\n        ),\n        lookbehind: true,\n        alias: ['function-variable', 'method', 'function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'function', {\n      method: {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source\n        ),\n        lookbehind: true,\n        alias: ['function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'constant', {\n      'known-class-name': [\n        {\n          // standard built-ins\n          // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n          pattern:\n            /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n          alias: 'class-name'\n        },\n        {\n          // errors\n          pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n          alias: 'class-name'\n        }\n      ]\n    })\n    /**\n     * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n     *\n     * @param {string} source\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function withId(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source\n        }),\n        flags\n      )\n    }\n    Prism.languages.insertBefore('javascript', 'keyword', {\n      imports: {\n        // https://tc39.es/ecma262/#sec-imports\n        pattern: withId(\n          /(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      exports: {\n        // https://tc39.es/ecma262/#sec-exports\n        pattern: withId(\n          /(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    })\n    Prism.languages.javascript['keyword'].unshift(\n      {\n        pattern: /\\b(?:as|default|export|from|import)\\b/,\n        alias: 'module'\n      },\n      {\n        pattern:\n          /\\b(?:await|break|catch|continue|do|else|for|finally|if|return|switch|throw|try|while|yield)\\b/,\n        alias: 'control-flow'\n      },\n      {\n        pattern: /\\bnull\\b/,\n        alias: ['null', 'nil']\n      },\n      {\n        pattern: /\\bundefined\\b/,\n        alias: 'nil'\n      }\n    )\n    Prism.languages.insertBefore('javascript', 'operator', {\n      spread: {\n        pattern: /\\.{3}/,\n        alias: 'operator'\n      },\n      arrow: {\n        pattern: /=>/,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'punctuation', {\n      'property-access': {\n        pattern: withId(/(\\.\\s*)#?<ID>/.source),\n        lookbehind: true\n      },\n      'maybe-class-name': {\n        pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n        lookbehind: true\n      },\n      dom: {\n        // this contains only a few commonly used DOM variables\n        pattern:\n          /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n        alias: 'variable'\n      },\n      console: {\n        pattern: /\\bconsole(?=\\s*\\.)/,\n        alias: 'class-name'\n      }\n    }) // add 'maybe-class-name' to tokens which might be a class name\n    var maybeClassNameTokens = [\n      'function',\n      'function-variable',\n      'method',\n      'method-variable',\n      'property-access'\n    ]\n    for (var i = 0; i < maybeClassNameTokens.length; i++) {\n      var token = maybeClassNameTokens[i]\n      var value = Prism.languages.javascript[token] // convert regex to object\n      if (Prism.util.type(value) === 'RegExp') {\n        value = Prism.languages.javascript[token] = {\n          pattern: value\n        }\n      } // keep in mind that we don't support arrays\n      var inside = value.inside || {}\n      value.inside = inside\n      inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = jsTemplates\njsTemplates.displayName = 'jsTemplates'\njsTemplates.aliases = []\nfunction jsTemplates(Prism) {\n  ;(function (Prism) {\n    var templateString = Prism.languages.javascript['template-string'] // see the pattern in prism-javascript.js\n    var templateLiteralPattern = templateString.pattern.source\n    var interpolationObject = templateString.inside['interpolation']\n    var interpolationPunctuationObject =\n      interpolationObject.inside['interpolation-punctuation']\n    var interpolationPattern = interpolationObject.pattern.source\n    /**\n     * Creates a new pattern to match a template string with a special tag.\n     *\n     * This will return `undefined` if there is no grammar with the given language id.\n     *\n     * @param {string} language The language id of the embedded language. E.g. `markdown`.\n     * @param {string} tag The regex pattern to match the tag.\n     * @returns {object | undefined}\n     * @example\n     * createTemplate('css', /\\bcss/.source);\n     */\n    function createTemplate(language, tag) {\n      if (!Prism.languages[language]) {\n        return undefined\n      }\n      return {\n        pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'template-punctuation': {\n            pattern: /^`|`$/,\n            alias: 'string'\n          },\n          'embedded-code': {\n            pattern: /[\\s\\S]+/,\n            alias: language\n          }\n        }\n      }\n    }\n    Prism.languages.javascript['template-string'] = [\n      // styled-jsx:\n      //   css`a { color: #25F; }`\n      // styled-components:\n      //   styled.h1`color: red;`\n      createTemplate(\n        'css',\n        /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/\n          .source\n      ), // html`<p></p>`\n      // div.innerHTML = `<p></p>`\n      createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n      createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n      createTemplate('markdown', /\\b(?:md|markdown)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n      createTemplate(\n        'graphql',\n        /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source\n      ), // sql`...`\n      createTemplate('sql', /\\bsql/.source), // vanilla template string\n      templateString\n    ].filter(Boolean)\n    /**\n     * Returns a specific placeholder literal for the given language.\n     *\n     * @param {number} counter\n     * @param {string} language\n     * @returns {string}\n     */\n    function getPlaceholder(counter, language) {\n      return '___' + language.toUpperCase() + '_' + counter + '___'\n    }\n    /**\n     * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n     *\n     * @param {string} code\n     * @param {any} grammar\n     * @param {string} language\n     * @returns {(string|Token)[]}\n     */\n    function tokenizeWithHooks(code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language\n      }\n      Prism.hooks.run('before-tokenize', env)\n      env.tokens = Prism.tokenize(env.code, env.grammar)\n      Prism.hooks.run('after-tokenize', env)\n      return env.tokens\n    }\n    /**\n     * Returns the token of the given JavaScript interpolation expression.\n     *\n     * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n     * @returns {Token}\n     */\n    function tokenizeInterpolationExpression(expression) {\n      var tempGrammar = {}\n      tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject\n      /** @type {Array} */\n      var tokens = Prism.tokenize(expression, tempGrammar)\n      if (tokens.length === 3) {\n        /**\n         * The token array will look like this\n         * [\n         *     [\"interpolation-punctuation\", \"${\"]\n         *     \"...\" // JavaScript expression of the interpolation\n         *     [\"interpolation-punctuation\", \"}\"]\n         * ]\n         */\n        var args = [1, 1]\n        args.push.apply(\n          args,\n          tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript')\n        )\n        tokens.splice.apply(tokens, args)\n      }\n      return new Prism.Token(\n        'interpolation',\n        tokens,\n        interpolationObject.alias,\n        expression\n      )\n    }\n    /**\n     * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n     *\n     * This function has 3 phases:\n     *\n     * 1. Replace all JavaScript interpolation expression with a placeholder.\n     *    The placeholder will have the syntax of a identify of the target language.\n     * 2. Tokenize the code with placeholders.\n     * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n     *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n     *    tokenized as two tokens by the grammar of the embedded language.\n     *\n     * @param {string} code\n     * @param {object} grammar\n     * @param {string} language\n     * @returns {Token}\n     */\n    function tokenizeEmbedded(code, grammar, language) {\n      // 1. First filter out all interpolations\n      // because they might be escaped, we need a lookbehind, so we use Prism\n      /** @type {(Token|string)[]} */\n      var _tokens = Prism.tokenize(code, {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          lookbehind: true\n        }\n      }) // replace all interpolations with a placeholder which is not in the code already\n      var placeholderCounter = 0\n      /** @type {Object<string, string>} */\n      var placeholderMap = {}\n      var embeddedCode = _tokens\n        .map(function (token) {\n          if (typeof token === 'string') {\n            return token\n          } else {\n            var interpolationExpression = token.content\n            var placeholder\n            while (\n              code.indexOf(\n                (placeholder = getPlaceholder(placeholderCounter++, language))\n              ) !== -1\n            ) {\n              /* noop */\n            }\n            placeholderMap[placeholder] = interpolationExpression\n            return placeholder\n          }\n        })\n        .join('') // 2. Tokenize the embedded code\n      var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language) // 3. Re-insert the interpolation\n      var placeholders = Object.keys(placeholderMap)\n      placeholderCounter = 0\n      /**\n       *\n       * @param {(Token|string)[]} tokens\n       * @returns {void}\n       */\n      function walkTokens(tokens) {\n        for (var i = 0; i < tokens.length; i++) {\n          if (placeholderCounter >= placeholders.length) {\n            return\n          }\n          var token = tokens[i]\n          if (typeof token === 'string' || typeof token.content === 'string') {\n            var placeholder = placeholders[placeholderCounter]\n            var s =\n              typeof token === 'string'\n                ? token\n                : /** @type {string} */\n                  token.content\n            var index = s.indexOf(placeholder)\n            if (index !== -1) {\n              ++placeholderCounter\n              var before = s.substring(0, index)\n              var middle = tokenizeInterpolationExpression(\n                placeholderMap[placeholder]\n              )\n              var after = s.substring(index + placeholder.length)\n              var replacement = []\n              if (before) {\n                replacement.push(before)\n              }\n              replacement.push(middle)\n              if (after) {\n                var afterTokens = [after]\n                walkTokens(afterTokens)\n                replacement.push.apply(replacement, afterTokens)\n              }\n              if (typeof token === 'string') {\n                tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                i += replacement.length - 1\n              } else {\n                token.content = replacement\n              }\n            }\n          } else {\n            var content = token.content\n            if (Array.isArray(content)) {\n              walkTokens(content)\n            } else {\n              walkTokens([content])\n            }\n          }\n        }\n      }\n      walkTokens(embeddedTokens)\n      return new Prism.Token(\n        language,\n        embeddedTokens,\n        'language-' + language,\n        code\n      )\n    }\n    /**\n     * The languages for which JS templating will handle tagged template literals.\n     *\n     * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n     */\n    var supportedLanguages = {\n      javascript: true,\n      js: true,\n      typescript: true,\n      ts: true,\n      jsx: true,\n      tsx: true\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (!(env.language in supportedLanguages)) {\n        return\n      }\n      /**\n       * Finds and tokenizes all template strings with an embedded languages.\n       *\n       * @param {(Token | string)[]} tokens\n       * @returns {void}\n       */\n      function findTemplateStrings(tokens) {\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (typeof token === 'string') {\n            continue\n          }\n          var content = token.content\n          if (!Array.isArray(content)) {\n            if (typeof content !== 'string') {\n              findTemplateStrings([content])\n            }\n            continue\n          }\n          if (token.type === 'template-string') {\n            /**\n             * A JavaScript template-string token will look like this:\n             *\n             * [\"template-string\", [\n             *     [\"template-punctuation\", \"`\"],\n             *     (\n             *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n             *         or\n             *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n             *                                  It also has an alias which is the language of the embedded code.\n             *     ),\n             *     [\"template-punctuation\", \"`\"]\n             * ]]\n             */\n            var embedded = content[1]\n            if (\n              content.length === 3 &&\n              typeof embedded !== 'string' &&\n              embedded.type === 'embedded-code'\n            ) {\n              // get string content\n              var code = stringContent(embedded)\n              var alias = embedded.alias\n              var language = Array.isArray(alias) ? alias[0] : alias\n              var grammar = Prism.languages[language]\n              if (!grammar) {\n                // the embedded language isn't registered.\n                continue\n              }\n              content[1] = tokenizeEmbedded(code, grammar, language)\n            }\n          } else {\n            findTemplateStrings(content)\n          }\n        }\n      }\n      findTemplateStrings(env.tokens)\n    })\n    /**\n     * Returns the string content of a token or token stream.\n     *\n     * @param {string | Token | (string | Token)[]} value\n     * @returns {string}\n     */\n    function stringContent(value) {\n      if (typeof value === 'string') {\n        return value\n      } else if (Array.isArray(value)) {\n        return value.map(stringContent).join('')\n      } else {\n        return stringContent(value.content)\n      }\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorJavadoclike = require('./javadoclike.js')\nvar refractorTypescript = require('./typescript.js')\nmodule.exports = jsdoc\njsdoc.displayName = 'jsdoc'\njsdoc.aliases = []\nfunction jsdoc(Prism) {\n  Prism.register(refractorJavadoclike)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var javascript = Prism.languages.javascript\n    var type = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source\n    var parameterPrefix =\n      '(@(?:param|arg|argument|property)\\\\s+(?:' + type + '\\\\s+)?)'\n    Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        // @param {string} foo - foo bar\n        pattern: RegExp(\n          parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('jsdoc', 'keyword', {\n      'optional-parameter': {\n        // @param {string} [baz.foo=\"bar\"] foo bar\n        pattern: RegExp(\n          parameterPrefix +\n            /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          parameter: {\n            pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          code: {\n            pattern: /(=)[\\s\\S]*(?=\\]$)/,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          },\n          punctuation: /[=[\\]]/\n        }\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(@(?:augments|extends|class|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(\n              /<TYPE>/g,\n              function () {\n                return type\n              }\n            )\n          ),\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        {\n          pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n          lookbehind: true,\n          inside: {\n            string: javascript.string,\n            number: javascript.number,\n            boolean: javascript.boolean,\n            keyword: Prism.languages.typescript.keyword,\n            operator: /=>|\\.\\.\\.|[&|?:*]/,\n            punctuation: /[.,;=<>{}()[\\]]/\n          }\n        }\n      ],\n      example: {\n        pattern:\n          /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n        lookbehind: true,\n        inside: {\n          code: {\n            pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          }\n        }\n      }\n    })\n    Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = json\njson.displayName = 'json'\njson.aliases = ['webmanifest']\nfunction json(Prism) {\n  // https://www.json.org/json-en.html\n  Prism.languages.json = {\n    property: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    punctuation: /[{}[\\],]/,\n    operator: /:/,\n    boolean: /\\b(?:true|false)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.languages.webmanifest = Prism.languages.json\n}\n","'use strict'\nvar refractorJson = require('./json.js')\nmodule.exports = json5\njson5.displayName = 'json5'\njson5.aliases = []\nfunction json5(Prism) {\n  Prism.register(refractorJson)\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/\n    Prism.languages.json5 = Prism.languages.extend('json', {\n      property: [\n        {\n          pattern: RegExp(string.source + '(?=\\\\s*:)'),\n          greedy: true\n        },\n        {\n          pattern:\n            /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\n          alias: 'unquoted'\n        }\n      ],\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      number:\n        /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJson = require('./json.js')\nmodule.exports = jsonp\njsonp.displayName = 'jsonp'\njsonp.aliases = []\nfunction jsonp(Prism) {\n  Prism.register(refractorJson)\n  Prism.languages.jsonp = Prism.languages.extend('json', {\n    punctuation: /[{}[\\]();,.]/\n  })\n  Prism.languages.insertBefore('jsonp', 'punctuation', {\n    function: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*\\()/\n  })\n}\n","'use strict'\n\nmodule.exports = jsstacktrace\njsstacktrace.displayName = 'jsstacktrace'\njsstacktrace.aliases = []\nfunction jsstacktrace(Prism) {\n  Prism.languages.jsstacktrace = {\n    'error-message': {\n      pattern: /^\\S.*/m,\n      alias: 'string'\n    },\n    'stack-frame': {\n      pattern: /(^[ \\t]+)at[ \\t].*/m,\n      lookbehind: true,\n      inside: {\n        'not-my-code': {\n          pattern:\n            /^at[ \\t]+(?!\\s)(?:node\\.js|<unknown>|.*(?:node_modules|\\(<anonymous>\\)|\\(<unknown>|<anonymous>$|\\(internal\\/|\\(node\\.js)).*/m,\n          alias: 'comment'\n        },\n        filename: {\n          pattern: /(\\bat\\s+(?!\\s)|\\()(?:[a-zA-Z]:)?[^():]+(?=:)/,\n          lookbehind: true,\n          alias: 'url'\n        },\n        function: {\n          pattern:\n            /(at\\s+(?:new\\s+)?)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF<][.$\\w\\xA0-\\uFFFF<>]*/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()]/,\n        keyword: /\\b(?:at|new)\\b/,\n        alias: {\n          pattern: /\\[(?:as\\s+)?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\]/,\n          alias: 'variable'\n        },\n        'line-number': {\n          pattern: /:[0-9]+(?::[0-9]+)?\\b/,\n          alias: 'number',\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = jsx\njsx.displayName = 'jsx'\njsx.aliases = []\nfunction jsx(Prism) {\n  ;(function (Prism) {\n    var javascript = Prism.util.clone(Prism.languages.javascript)\n    var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source\n    var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source\n    var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<S>/g, function () {\n          return space\n        })\n        .replace(/<BRACES>/g, function () {\n          return braces\n        })\n        .replace(/<SPREAD>/g, function () {\n          return spread\n        })\n      return RegExp(source, flags)\n    }\n    spread = re(spread).source\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript)\n    Prism.languages.jsx.tag.pattern = re(\n      /<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/\n        .source\n    )\n    Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i\n    Prism.languages.jsx.tag.inside['attr-value'].pattern =\n      /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/i\n    Prism.languages.jsx.tag.inside['tag'].inside['class-name'] =\n      /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/\n    Prism.languages.jsx.tag.inside['comment'] = javascript['comment']\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-name',\n      {\n        spread: {\n          pattern: re(/<SPREAD>/.source),\n          inside: Prism.languages.jsx\n        }\n      },\n      Prism.languages.jsx.tag\n    )\n    Prism.languages.insertBefore(\n      'inside',\n      'special-attr',\n      {\n        script: {\n          // Allow for two levels of nesting\n          pattern: re(/=<BRACES>/.source),\n          inside: {\n            'script-punctuation': {\n              pattern: /^=(?=\\{)/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.jsx\n          },\n          alias: 'language-javascript'\n        }\n      },\n      Prism.languages.jsx.tag\n    ) // The following will handle plain text inside tags\n    var stringifyToken = function (token) {\n      if (!token) {\n        return ''\n      }\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function (tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{'\n          ) {\n            // Here we might have entered a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside a JSX context.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token) // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            tokens[i] = new Prism.Token(\n              'plain-text',\n              plainText,\n              null,\n              plainText\n            )\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = julia\njulia.displayName = 'julia'\njulia.aliases = []\nfunction julia(Prism) {\n  Prism.languages.julia = {\n    comment: {\n      // support one level of nested comments\n      // https://github.com/JuliaLang/julia/pull/6128\n      pattern:\n        /(^|[^\\\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,\n      lookbehind: true\n    },\n    regex: {\n      // https://docs.julialang.org/en/v1/manual/strings/#Regular-Expressions-1\n      pattern: /r\"(?:\\\\.|[^\"\\\\\\r\\n])*\"[imsx]{0,4}/,\n      greedy: true\n    },\n    string: {\n      // https://docs.julialang.org/en/v1/manual/strings/#man-characters-1\n      // https://docs.julialang.org/en/v1/manual/strings/#String-Basics-1\n      // https://docs.julialang.org/en/v1/manual/strings/#non-standard-string-literals-1\n      // https://docs.julialang.org/en/v1/manual/running-external-programs/#Running-External-Programs-1\n      pattern:\n        /\"\"\"[\\s\\S]+?\"\"\"|(?:\\b\\w+)?\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(^|[^\\w'])'(?:\\\\[^\\r\\n][^'\\r\\n]*|[^\\\\\\r\\n])'|`(?:[^\\\\`\\r\\n]|\\\\.)*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    number:\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+(?:_[\\da-f]+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[efp][+-]?\\d+(?:_\\d+)*)?j?/i,\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/#Operator-Precedence-and-Associativity-1\n    operator:\n      /&&|\\|\\||[-+*^%÷⊻&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,\n    punctuation: /::?|[{}[\\]();,.?]/,\n    // https://docs.julialang.org/en/v1/base/numbers/#Base.im\n    constant: /\\b(?:(?:NaN|Inf)(?:16|32|64)?|im|pi)\\b|[πℯ]/\n  }\n}\n","'use strict'\n\nmodule.exports = keyman\nkeyman.displayName = 'keyman'\nkeyman.aliases = []\nfunction keyman(Prism) {\n  Prism.languages.keyman = {\n    comment: /\\bc\\s.*/i,\n    function:\n      /\\[\\s*(?:(?:CTRL|SHIFT|ALT|LCTRL|RCTRL|LALT|RALT|CAPS|NCAPS)\\s+)*(?:[TKU]_[\\w?]+|\".+?\"|'.+?')\\s*\\]/i,\n    // virtual key\n    string: /(\"|').*?\\1/,\n    bold: [\n      // header statements, system stores and variable system stores\n      /&(?:baselayout|bitmap|capsononly|capsalwaysoff|shiftfreescaps|copyright|ethnologuecode|hotkey|includecodes|keyboardversion|kmw_embedcss|kmw_embedjs|kmw_helpfile|kmw_helptext|kmw_rtl|language|layer|layoutfile|message|mnemoniclayout|name|oldcharposmatching|platform|targets|version|visualkeyboard|windowslanguages)\\b/i,\n      /\\b(?:bitmap|bitmaps|caps on only|caps always off|shift frees caps|copyright|hotkey|language|layout|message|name|version)\\b/i\n    ],\n    keyword:\n      /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|return|reset|save|set|store|use)\\b/i,\n    // rule keywords\n    atrule: /\\b(?:ansi|begin|unicode|group|using keys|match|nomatch)\\b/i,\n    // structural keywords\n    number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\n    // U+####, x###, d### characters and numbers\n    operator: /[+>\\\\,()]/,\n    tag: /\\$(?:keyman|kmfl|weaver|keymanweb|keymanonly):/i // prefixes\n  }\n}\n","'use strict'\n\nmodule.exports = kotlin\nkotlin.displayName = 'kotlin'\nkotlin.aliases = ['kt', 'kts']\nfunction kotlin(Prism) {\n  ;(function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern:\n          /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        {\n          pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n          greedy: true\n        },\n        {\n          pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      number:\n        /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator:\n        /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    Prism.languages.insertBefore('kotlin', 'string', {\n      'raw-string': {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        alias: 'string' // See interpolation below\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\b\\w+@|@\\w+\\b/,\n        alias: 'symbol'\n      }\n    })\n    var interpolation = [\n      {\n        pattern: /\\$\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.kotlin\n        }\n      },\n      {\n        pattern: /\\$\\w+/,\n        alias: 'variable'\n      }\n    ]\n    Prism.languages.kotlin['string'].inside = Prism.languages.kotlin[\n      'raw-string'\n    ].inside = {\n      interpolation: interpolation\n    }\n    Prism.languages.kt = Prism.languages.kotlin\n    Prism.languages.kts = Prism.languages.kotlin\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = kumir\nkumir.displayName = 'kumir'\nkumir.aliases = ['kum']\nfunction kumir(Prism) {\n  /* eslint-disable regexp/no-dupe-characters-character-class */\n  ;(function (Prism) {\n    /**\n     * Regular expression for characters that are not allowed in identifiers.\n     *\n     * @type {string}\n     */\n    var nonId = /\\s\\x00-\\x1f\\x22-\\x2f\\x3a-\\x3f\\x5b-\\x5e\\x60\\x7b-\\x7e/.source\n    /**\n     * Surround a regular expression for IDs with patterns for non-ID sequences.\n     *\n     * @param {string} pattern A regular expression for identifiers.\n     * @param {string} [flags] The regular expression flags.\n     * @returns {RegExp} A wrapped regular expression for identifiers.\n     */\n    function wrapId(pattern, flags) {\n      return RegExp(pattern.replace(/<nonId>/g, nonId), flags)\n    }\n    Prism.languages.kumir = {\n      comment: {\n        pattern: /\\|.*/\n      },\n      prolog: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\\n\\r\"]*\"|'[^\\n\\r']*'/,\n        greedy: true\n      },\n      boolean: {\n        pattern: wrapId(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),\n        lookbehind: true\n      },\n      'operator-word': {\n        pattern: wrapId(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'system-variable': {\n        pattern: wrapId(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      type: [\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\\x20*таб)?(?=[<nonId>]|$)/\n              .source\n          ),\n          lookbehind: true,\n          alias: 'builtin'\n        },\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source\n          ),\n          lookbehind: true,\n          alias: 'important'\n        }\n      ],\n      /**\n       * Should be performed after searching for type names because of \"таб\".\n       * \"таб\" is a reserved word, but never used without a preceding type name.\n       * \"НАЗНАЧИТЬ\", \"Фввод\", and \"Фвывод\" are not reserved words.\n       */\n      keyword: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:алг|арг(?:\\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\\x20+|_)исп)?|кц(?:(?:\\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for reserved words. */\n      name: {\n        // eslint-disable-next-line regexp/no-super-linear-backtracking\n        pattern: wrapId(\n          /(^|[<nonId>])[^\\d<nonId>][^<nonId>]*(?:\\x20+[^<nonId>]+)*(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for names. */\n      number: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:\\B\\$[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?=[<nonId>]|$)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for words. */\n      punctuation: /:=|[(),:;\\[\\]]/,\n      /**\n       * Should be performed after searching for\n       * - numeric constants (because of \"+\" and \"-\");\n       * - punctuation marks (because of \":=\" and \"=\").\n       */\n      'operator-char': {\n        pattern: /\\*\\*?|<[=>]?|>=?|[-+/=]/,\n        alias: 'operator'\n      }\n    }\n    Prism.languages.kum = Prism.languages.kumir\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = kusto\nkusto.displayName = 'kusto'\nkusto.aliases = []\nfunction kusto(Prism) {\n  Prism.languages.kusto = {\n    comment: {\n      pattern: /\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /```[\\s\\S]*?```|[hH]?(?:\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\.)*'|@(?:\"[^\\r\\n\"]*\"|'[^\\r\\n']*'))/,\n      greedy: true\n    },\n    verb: {\n      pattern: /(\\|\\s*)[a-z][\\w-]*/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    command: {\n      pattern: /\\.[a-z][a-z\\d-]*\\b/,\n      alias: 'keyword'\n    },\n    'class-name':\n      /\\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\\b/,\n    keyword:\n      /\\b(?:access|alias|and|anti|as|asc|auto|between|by|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|(?:has(?:perfix|suffix)?|contains|(?:starts|ends)with)(?:_cs)?|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|matches\\s+regex|nulls\\s+(?:first|last))(?![\\w-])/,\n    boolean: /\\b(?:true|false|null)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/,\n    datetime: [\n      {\n        // RFC 822 + RFC 850\n        pattern:\n          /\\b(?:(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday)\\s*,\\s*)?\\d{1,2}(?:\\s+|-)(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)(?:\\s+|-)\\d{2}\\s+\\d{2}:\\d{2}(?::\\d{2})?(?:\\s*(?:\\b(?:(?:U|GM|[ECMT][DS])T|[A-Z])|[+-]\\d{4}))?\\b/,\n        alias: 'number'\n      },\n      {\n        // ISO 8601\n        pattern:\n          /[+-]?\\b(?:\\d{4}-\\d{2}-\\d{2}(?:[ T]\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)?|\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)Z?/,\n        alias: 'number'\n      }\n    ],\n    number:\n      /\\b(?:0x[0-9A-Fa-f]+|\\d+(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?)(?:(?:min|sec|[mnµ]s|tick|microsecond|[dhms])\\b)?|[+-]?\\binf\\b/,\n    operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\\.\\./,\n    punctuation: /[()\\[\\]{},;.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = latex\nlatex.displayName = 'latex'\nlatex.aliases = ['tex', 'context']\nfunction latex(Prism) {\n  ;(function (Prism) {\n    var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i\n    var insideEqu = {\n      'equation-command': {\n        pattern: funcPattern,\n        alias: 'regex'\n      }\n    }\n    Prism.languages.latex = {\n      comment: /%.*/m,\n      // the verbatim environment prints whitespace to the document\n      cdata: {\n        pattern:\n          /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n        lookbehind: true\n      },\n      /*\n       * equations can be between $$ $$ or $ $ or \\( \\) or \\[ \\]\n       * (all are multiline)\n       */\n      equation: [\n        {\n          pattern:\n            /\\$\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$\\$|\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n          inside: insideEqu,\n          alias: 'string'\n        },\n        {\n          pattern:\n            /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true,\n          inside: insideEqu,\n          alias: 'string'\n        }\n      ],\n      /*\n       * arguments which are keywords or references are highlighted\n       * as keywords\n       */\n      keyword: {\n        pattern:\n          /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      /*\n       * section or chapter headlines are highlighted as bold so that\n       * they stand out more\n       */\n      headline: {\n        pattern:\n          /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      function: {\n        pattern: funcPattern,\n        alias: 'selector'\n      },\n      punctuation: /[[\\]{}&]/\n    }\n    Prism.languages.tex = Prism.languages.latex\n    Prism.languages.context = Prism.languages.latex\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nvar refractorPhp = require('./php.js')\nmodule.exports = latte\nlatte.displayName = 'latte'\nlatte.aliases = []\nfunction latte(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.register(refractorPhp)\n  ;(function (Prism) {\n    Prism.languages.latte = {\n      comment: /^\\{\\*[\\s\\S]*/,\n      ld: {\n        pattern: /^\\{(?:[=_]|\\/?(?!\\d|\\w+\\()\\w+)?/,\n        inside: {\n          punctuation: /^\\{\\/?/,\n          tag: {\n            pattern: /.+/,\n            alias: 'important'\n          }\n        }\n      },\n      rd: {\n        pattern: /\\}$/,\n        inside: {\n          punctuation: /.+/\n        }\n      },\n      php: {\n        pattern: /\\S(?:[\\s\\S]*\\S)?/,\n        alias: 'language-php',\n        inside: Prism.languages.php\n      }\n    }\n    var markupLatte = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-value',\n      {\n        'n-attr': {\n          pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n          inside: {\n            'attr-name': {\n              pattern: /^[^\\s=]+/,\n              alias: 'important'\n            },\n            'attr-value': {\n              pattern: /=[\\s\\S]+/,\n              inside: {\n                punctuation: [\n                  /^=/,\n                  {\n                    pattern: /^(\\s*)[\"']|[\"']$/,\n                    lookbehind: true\n                  }\n                ],\n                php: {\n                  pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                  inside: Prism.languages.php\n                }\n              }\n            }\n          }\n        }\n      },\n      markupLatte.tag\n    )\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (env.language !== 'latte') {\n        return\n      }\n      var lattePattern =\n        /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'latte',\n        lattePattern\n      )\n      env.grammar = markupLatte\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'latte')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = less\nless.displayName = 'less'\nless.aliases = []\nfunction less(Prism) {\n  /* FIXME :\n:extend() is not handled specifically : its highlighting is buggy.\nMixin usage must be inside a ruleset to be highlighted.\nAt-rules (e.g. import) containing interpolations are buggy.\nDetached rulesets are highlighted as at-rules.\nA comment before a mixin usage prevents the latter to be properly highlighted.\n*/\n  Prism.languages.less = Prism.languages.extend('css', {\n    comment: [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    atrule: {\n      pattern:\n        /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        punctuation: /[:()]/\n      }\n    },\n    // selectors and mixins are considered the same\n    selector: {\n      pattern:\n        /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        // mixin parameters\n        variable: /@+[\\w-]+/\n      }\n    },\n    property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n    operator: /[+\\-*\\/]/\n  })\n  Prism.languages.insertBefore('less', 'property', {\n    variable: [\n      // Variable declaration (the colon must be consumed!)\n      {\n        pattern: /@[\\w-]+\\s*:/,\n        inside: {\n          punctuation: /:/\n        }\n      }, // Variable usage\n      /@@?[\\w-]+/\n    ],\n    'mixin-usage': {\n      pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n      lookbehind: true,\n      alias: 'function'\n    }\n  })\n}\n","'use strict'\nvar refractorScheme = require('./scheme.js')\nmodule.exports = lilypond\nlilypond.displayName = 'lilypond'\nlilypond.aliases = []\nfunction lilypond(Prism) {\n  Prism.register(refractorScheme)\n  ;(function (Prism) {\n    var schemeExpression =\n      /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/\n        .source // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n    // For some reason, this can't be 4\n    var recursivenessLog2 = 5\n    for (var i = 0; i < recursivenessLog2; i++) {\n      schemeExpression = schemeExpression.replace(/<expr>/g, function () {\n        return schemeExpression\n      })\n    }\n    schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var lilypond = (Prism.languages.lilypond = {\n      comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n      'embedded-scheme': {\n        pattern: RegExp(\n          /(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(\n            /<expr>/g,\n            function () {\n              return schemeExpression\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          scheme: {\n            pattern: /^(#)[\\s\\S]+$/,\n            lookbehind: true,\n            alias: 'language-scheme',\n            inside: {\n              'embedded-lilypond': {\n                pattern: /#\\{[\\s\\S]*?#\\}/,\n                greedy: true,\n                inside: {\n                  punctuation: /^#\\{|#\\}$/,\n                  lilypond: {\n                    pattern: /[\\s\\S]+/,\n                    alias: 'language-lilypond',\n                    inside: null // see below\n                  }\n                }\n              },\n              rest: Prism.languages.scheme\n            }\n          },\n          punctuation: /#/\n        }\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /(\\\\new\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern: /\\\\[a-z][-\\w]*/i,\n        inside: {\n          punctuation: /^\\\\/\n        }\n      },\n      operator: /[=|]|<<|>>/,\n      punctuation: {\n        pattern:\n          /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\/\\d+)?\\b/\n    })\n    lilypond['embedded-scheme'].inside['scheme'].inside[\n      'embedded-lilypond'\n    ].inside['lilypond'].inside = lilypond\n    Prism.languages.ly = lilypond\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = liquid\nliquid.displayName = 'liquid'\nliquid.aliases = []\nfunction liquid(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.languages.liquid = {\n    comment: {\n      pattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\n      lookbehind: true\n    },\n    delimiter: {\n      pattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|assign|break|continue|cycle|decrement|echo|else|elsif|(?:end)?(?:capture|case|comment|for|form|if|paginate|style|raw|tablerow|unless)|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\n    object:\n      /\\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|comment|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|form|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|paginate|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|section|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tablerow|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\\b/,\n    function: [\n      {\n        pattern: /(\\|\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'filter'\n      },\n      {\n        // array functions\n        pattern: /(\\.\\s*)(?:first|last|size)/,\n        lookbehind: true\n      }\n    ],\n    boolean: /\\b(?:true|false|nil)\\b/,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    // https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|or|contains(?=\\s))\\b/,\n    punctuation: /[.,\\[\\]()]/,\n    empty: {\n      pattern: /\\bempty\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.hooks.add('before-tokenize', function (env) {\n    var liquidPattern =\n      /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g\n    var insideRaw = false\n    Prism.languages['markup-templating'].buildPlaceholders(\n      env,\n      'liquid',\n      liquidPattern,\n      function (match) {\n        var tagMatch = /^\\{%-?\\s*(\\w+)/.exec(match)\n        if (tagMatch) {\n          var tag = tagMatch[1]\n          if (tag === 'raw' && !insideRaw) {\n            insideRaw = true\n            return true\n          } else if (tag === 'endraw') {\n            insideRaw = false\n            return true\n          }\n        }\n        return !insideRaw\n      }\n    )\n  })\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'liquid')\n  })\n}\n","'use strict'\n\nmodule.exports = lisp\nlisp.displayName = 'lisp'\nlisp.aliases = []\nfunction lisp(Prism) {\n  ;(function (Prism) {\n    // Functions to construct regular expressions\n    // simple form\n    // e.g. (interactive ... or (interactive)\n    function simple_form(name) {\n      return RegExp('(\\\\()' + name + '(?=[\\\\s\\\\)])')\n    } // booleans and numbers\n    function primitive(pattern) {\n      return RegExp('([\\\\s([])' + pattern + '(?=[\\\\s)])')\n    } // Patterns in regular expressions\n    // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n    // & and : are excluded as they are usually used for special purposes\n    var symbol = '[-+*/~!@$%^=<>{}\\\\w]+' // symbol starting with & used in function arguments\n    var marker = '&' + symbol // Open parenthesis for look-behind\n    var par = '(\\\\()'\n    var endpar = '(?=\\\\))' // End the pattern with look-ahead space\n    var space = '(?=\\\\s)'\n    var language = {\n      // Three or four semicolons are considered a heading.\n      // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n      heading: {\n        pattern: /;;;.*/,\n        alias: ['comment', 'title']\n      },\n      comment: /;.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true,\n        inside: {\n          argument: /[-A-Z]+(?=[.,\\s])/,\n          symbol: RegExp('`' + symbol + \"'\")\n        }\n      },\n      'quoted-symbol': {\n        pattern: RegExp(\"#?'\" + symbol),\n        alias: ['variable', 'symbol']\n      },\n      'lisp-property': {\n        pattern: RegExp(':' + symbol),\n        alias: 'property'\n      },\n      splice: {\n        pattern: RegExp(',@?' + symbol),\n        alias: ['symbol', 'variable']\n      },\n      keyword: [\n        {\n          pattern: RegExp(\n            par +\n              '(?:(?:lexical-)?let\\\\*?|(?:cl-)?letf|if|when|while|unless|cons|cl-loop|and|or|not|cond|setq|error|message|null|require|provide|use-package)' +\n              space\n          ),\n          lookbehind: true\n        },\n        {\n          pattern: RegExp(\n            par +\n              '(?:for|do|collect|return|finally|append|concat|in|by)' +\n              space\n          ),\n          lookbehind: true\n        }\n      ],\n      declare: {\n        pattern: simple_form('declare'),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      interactive: {\n        pattern: simple_form('interactive'),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      boolean: {\n        pattern: primitive('(?:t|nil)'),\n        lookbehind: true\n      },\n      number: {\n        pattern: primitive('[-+]?\\\\d+(?:\\\\.\\\\d*)?'),\n        lookbehind: true\n      },\n      defvar: {\n        pattern: RegExp(par + 'def(?:var|const|custom|group)\\\\s+' + symbol),\n        lookbehind: true,\n        inside: {\n          keyword: /^def[a-z]+/,\n          variable: RegExp(symbol)\n        }\n      },\n      defun: {\n        pattern: RegExp(\n          par +\n            '(?:cl-)?(?:defun\\\\*?|defmacro)\\\\s+' +\n            symbol +\n            '\\\\s+\\\\([\\\\s\\\\S]*?\\\\)'\n        ),\n        lookbehind: true,\n        inside: {\n          keyword: /^(?:cl-)?def\\S+/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          function: {\n            pattern: RegExp('(^\\\\s)' + symbol),\n            lookbehind: true\n          },\n          punctuation: /[()]/\n        }\n      },\n      lambda: {\n        pattern: RegExp(\n          par +\n            'lambda\\\\s+\\\\(\\\\s*(?:&?' +\n            symbol +\n            '(?:\\\\s+&?' +\n            symbol +\n            ')*\\\\s*)?\\\\)'\n        ),\n        lookbehind: true,\n        inside: {\n          keyword: /^lambda/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          punctuation: /[()]/\n        }\n      },\n      car: {\n        pattern: RegExp(par + symbol),\n        lookbehind: true\n      },\n      punctuation: [\n        // open paren, brackets, and close paren\n        /(?:['`,]?\\(|[)\\[\\]])/, // cons\n        {\n          pattern: /(\\s)\\.(?=\\s)/,\n          lookbehind: true\n        }\n      ]\n    }\n    var arg = {\n      'lisp-marker': RegExp(marker),\n      rest: {\n        argument: {\n          pattern: RegExp(symbol),\n          alias: 'variable'\n        },\n        varform: {\n          pattern: RegExp(par + symbol + '\\\\s+\\\\S[\\\\s\\\\S]*' + endpar),\n          lookbehind: true,\n          inside: {\n            string: language.string,\n            boolean: language.boolean,\n            number: language.number,\n            symbol: language.symbol,\n            punctuation: /[()]/\n          }\n        }\n      }\n    }\n    var forms = '\\\\S+(?:\\\\s+\\\\S+)*'\n    var arglist = {\n      pattern: RegExp(par + '[\\\\s\\\\S]*' + endpar),\n      lookbehind: true,\n      inside: {\n        'rest-vars': {\n          pattern: RegExp('&(?:rest|body)\\\\s+' + forms),\n          inside: arg\n        },\n        'other-marker-vars': {\n          pattern: RegExp('&(?:optional|aux)\\\\s+' + forms),\n          inside: arg\n        },\n        keys: {\n          pattern: RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n          inside: arg\n        },\n        argument: {\n          pattern: RegExp(symbol),\n          alias: 'variable'\n        },\n        punctuation: /[()]/\n      }\n    }\n    language['lambda'].inside.arguments = arglist\n    language['defun'].inside.arguments = Prism.util.clone(arglist)\n    language['defun'].inside.arguments.inside.sublist = arglist\n    Prism.languages.lisp = language\n    Prism.languages.elisp = language\n    Prism.languages.emacs = language\n    Prism.languages['emacs-lisp'] = language\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = livescript\nlivescript.displayName = 'livescript'\nlivescript.aliases = []\nfunction livescript(Prism) {\n  Prism.languages.livescript = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }\n    ],\n    'interpolated-string': {\n      /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n       * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n      pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n          lookbehind: true\n        },\n        interpolation: {\n          pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^#\\{|\\}$/,\n              alias: 'variable'\n            } // See rest below\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    string: [\n      {\n        pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      {\n        pattern: /<\\[[\\s\\S]*?\\]>/,\n        greedy: true\n      },\n      /\\\\[^\\s,;\\])}]+/\n    ],\n    regex: [\n      {\n        pattern: /\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,\n        greedy: true,\n        inside: {\n          comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n          }\n        }\n      },\n      {\n        pattern: /\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,\n        greedy: true\n      }\n    ],\n    keyword: {\n      pattern:\n        /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n      lookbehind: true\n    },\n    'keyword-operator': {\n      pattern:\n        /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    boolean: {\n      pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n      lookbehind: true\n    },\n    argument: {\n      // Don't match .&. nor &&\n      pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n    identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n    operator: [\n      // Spaced .\n      {\n        pattern: /( )\\.(?= )/,\n        lookbehind: true\n      }, // Full list, in order:\n      // .= .~ .. ...\n      // .&. .^. .<<. .>>. .>>>.\n      // := :: ::=\n      // &&\n      // || |>\n      // < << <<< <<<<\n      // <- <-- <-! <--!\n      // <~ <~~ <~! <~~!\n      // <| <= <?\n      // > >> >= >?\n      // - -- -> -->\n      // + ++\n      // @ @@\n      // % %%\n      // * **\n      // ! != !~=\n      // !~> !~~>\n      // !-> !-->\n      // ~ ~> ~~> ~=\n      // = ==\n      // ^ ^^\n      // / ?\n      /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/\n    ],\n    punctuation: /[(){}\\[\\]|.,:;`]/\n  }\n  Prism.languages.livescript['interpolated-string'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.livescript\n}\n","'use strict'\n\nmodule.exports = llvm\nllvm.displayName = 'llvm'\nllvm.aliases = []\nfunction llvm(Prism) {\n  ;(function (Prism) {\n    Prism.languages.llvm = {\n      comment: /;.*/,\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      boolean: /\\b(?:true|false)\\b/,\n      variable: /[%@!#](?:(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+|\\d+)/i,\n      label: /(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+:/i,\n      type: {\n        pattern:\n          /\\b(?:double|float|fp128|half|i[1-9]\\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\\b/,\n        alias: 'class-name'\n      },\n      keyword: /\\b[a-z_][a-z_0-9]*\\b/,\n      number:\n        /[+-]?\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-Fa-f]+\\b|\\b0xK[\\dA-Fa-f]{20}\\b|\\b0x[ML][\\dA-Fa-f]{32}\\b|\\b0xH[\\dA-Fa-f]{4}\\b/,\n      punctuation: /[{}[\\];(),.!*=<>]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = log\nlog.displayName = 'log'\nlog.aliases = []\nfunction log(Prism) {\n  // This is a language definition for generic log files.\n  // Since there is no one log format, this language definition has to support all formats to some degree.\n  //\n  // Based on https://github.com/MTDL9/vim-log-highlighting\n  Prism.languages.log = {\n    string: {\n      // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    exception: {\n      pattern:\n        /(^|[^\\w.])[a-z][\\w.]*(?:Exception|Error):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['javastacktrace', 'language-javastacktrace'],\n      inside: Prism.languages['javastacktrace'] || {\n        keyword: /\\bat\\b/,\n        function: /[a-z_][\\w$]*(?=\\()/,\n        punctuation: /[.:()]/\n      }\n    },\n    level: [\n      {\n        pattern:\n          /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n        alias: ['error', 'important']\n      },\n      {\n        pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n        alias: ['warning', 'important']\n      },\n      {\n        pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n        alias: ['info', 'keyword']\n      },\n      {\n        pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n        alias: ['debug', 'keyword']\n      },\n      {\n        pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n        alias: ['trace', 'comment']\n      }\n    ],\n    property: {\n      pattern:\n        /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n      lookbehind: true\n    },\n    separator: {\n      pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    url: /\\b(?:https?|ftp|file):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n    email: {\n      pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n      lookbehind: true,\n      alias: 'url'\n    },\n    'ip-address': {\n      pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/i,\n      alias: 'constant'\n    },\n    'mac-address': {\n      pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n      alias: 'constant'\n    },\n    domain: {\n      pattern:\n        /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    uuid: {\n      pattern:\n        /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n      alias: 'constant'\n    },\n    hash: {\n      pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n      alias: 'constant'\n    },\n    'file-path': {\n      pattern:\n        /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n      lookbehind: true,\n      greedy: true,\n      alias: 'string'\n    },\n    date: {\n      pattern: RegExp(\n        /\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\n          '|' +\n          /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[-/ ]\\d{2,4}T?\\b/\n            .source +\n          '|' +\n          /\\b(?:(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun)(?:\\s{1,2}(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec))?|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s{1,2}\\d{1,2}\\b/\n            .source,\n        'i'\n      ),\n      alias: 'number'\n    },\n    time: {\n      pattern:\n        /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n      alias: 'number'\n    },\n    boolean: /\\b(?:true|false|null)\\b/i,\n    number: {\n      pattern:\n        /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n      lookbehind: true\n    },\n    operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n    punctuation: /[\\[\\].,]/\n  }\n}\n","'use strict'\n\nmodule.exports = lolcode\nlolcode.displayName = 'lolcode'\nlolcode.aliases = []\nfunction lolcode(Prism) {\n  Prism.languages.lolcode = {\n    comment: [/\\bOBTW\\s[\\s\\S]*?\\sTLDR\\b/, /\\bBTW.+/],\n    string: {\n      pattern: /\"(?::.|[^\":])*\"/,\n      inside: {\n        variable: /:\\{[^}]+\\}/,\n        symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n      },\n      greedy: true\n    },\n    number: /(?:\\B-)?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)/,\n    symbol: {\n      pattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,\n      lookbehind: true,\n      inside: {\n        keyword: /A(?=\\s)/\n      }\n    },\n    label: {\n      pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,\n      lookbehind: true\n    },\n    keyword: [\n      {\n        pattern:\n          /(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      /'Z(?=\\s|,|$)/\n    ],\n    boolean: {\n      pattern: /(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    variable: {\n      pattern: /(^|\\s)IT(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    operator: {\n      pattern:\n        /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    punctuation: /\\.{3}|…|,|!/\n  }\n}\n","'use strict'\n\nmodule.exports = lua\nlua.displayName = 'lua'\nlua.aliases = []\nfunction lua(Prism) {\n  Prism.languages.lua = {\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n    // \\z may be used to skip the following space\n    string: {\n      pattern:\n        /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n      greedy: true\n    },\n    number:\n      /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n    keyword:\n      /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n    operator: [\n      /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n      {\n        // Match \"..\" but don't break \"...\"\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\n  }\n}\n","'use strict'\n\nmodule.exports = magma\nmagma.displayName = 'magma'\nmagma.aliases = []\nfunction magma(Prism) {\n  Prism.languages.magma = {\n    output: {\n      pattern:\n        /^(>.*(?:\\r(?:\\n|(?!\\n))|\\n))(?!>)(?:.+|(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)(?:(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    // http://magma.maths.usyd.edu.au/magma/handbook/text/82\n    keyword:\n      /\\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    generator: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*<)/i,\n      alias: 'class-name'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    operator: /->|[-+*/^~!|#=]|:=|\\.\\./,\n    punctuation: /[()[\\]{}<>,;.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = makefile\nmakefile.displayName = 'makefile'\nmakefile.aliases = []\nfunction makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    // Built-in target names\n    builtin: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    // Targets\n    symbol: {\n      pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n      inside: {\n        variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    keyword: [\n      // Directives\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n      {\n        pattern:\n          /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n        lookbehind: true\n      }\n    ],\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  }\n}\n","'use strict'\n\nmodule.exports = markdown\nmarkdown.displayName = 'markdown'\nmarkdown.aliases = ['md']\nfunction markdown(Prism) {\n  ;(function (Prism) {\n    // Allow only one line break\n    var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source\n    /**\n     * This function is intended for the creation of the bold or italic pattern.\n     *\n     * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n     *\n     * _Note:_ Keep in mind that this adds a capturing group.\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function createInline(pattern) {\n      pattern = pattern.replace(/<inner>/g, function () {\n        return inner\n      })\n      return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')')\n    }\n    var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/\n      .source\n    var tableRow =\n      /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(\n        /__/g,\n        function () {\n          return tableCell\n        }\n      )\n    var tableLine =\n      /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/\n        .source\n    Prism.languages.markdown = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore('markdown', 'prolog', {\n      'front-matter-block': {\n        pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^---|---$/,\n          'font-matter': {\n            pattern: /\\S+(?:\\s+\\S+)*/,\n            alias: ['yaml', 'language-yaml'],\n            inside: Prism.languages.yaml\n          }\n        }\n      },\n      blockquote: {\n        // > ...\n        pattern: /^>(?:[\\t ]*>)*/m,\n        alias: 'punctuation'\n      },\n      table: {\n        pattern: RegExp(\n          '^' + tableRow + tableLine + '(?:' + tableRow + ')*',\n          'm'\n        ),\n        inside: {\n          'table-data-rows': {\n            pattern: RegExp(\n              '^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'\n            ),\n            lookbehind: true,\n            inside: {\n              'table-data': {\n                pattern: RegExp(tableCell),\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          },\n          'table-line': {\n            pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n            lookbehind: true,\n            inside: {\n              punctuation: /\\||:?-{3,}:?/\n            }\n          },\n          'table-header-row': {\n            pattern: RegExp('^' + tableRow + '$'),\n            inside: {\n              'table-header': {\n                pattern: RegExp(tableCell),\n                alias: 'important',\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          }\n        }\n      },\n      code: [\n        {\n          // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n          pattern:\n            /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        {\n          // ```optional language\n          // code block\n          // ```\n          pattern: /^```[\\s\\S]*?^```$/m,\n          greedy: true,\n          inside: {\n            'code-block': {\n              pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n              lookbehind: true\n            },\n            'code-language': {\n              pattern: /^(```).+/,\n              lookbehind: true\n            },\n            punctuation: /```/\n          }\n        }\n      ],\n      title: [\n        {\n          // title 1\n          // =======\n          // title 2\n          // -------\n          pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n          alias: 'important',\n          inside: {\n            punctuation: /==+$|--+$/\n          }\n        },\n        {\n          // # title 1\n          // ###### title 6\n          pattern: /(^\\s*)#.+/m,\n          lookbehind: true,\n          alias: 'important',\n          inside: {\n            punctuation: /^#+|#+$/\n          }\n        }\n      ],\n      hr: {\n        // ***\n        // ---\n        // * * *\n        // -----------\n        pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      list: {\n        // * item\n        // + item\n        // - item\n        // 1. item\n        pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'url-reference': {\n        // [id]: http://example.com \"Optional title\"\n        // [id]: http://example.com 'Optional title'\n        // [id]: http://example.com (Optional title)\n        // [id]: <http://example.com> \"Optional title\"\n        pattern:\n          /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n        inside: {\n          variable: {\n            pattern: /^(!?\\[)[^\\]]+/,\n            lookbehind: true\n          },\n          string:\n            /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n          punctuation: /^[\\[\\]!:]|[<>]/\n        },\n        alias: 'url'\n      },\n      bold: {\n        // **strong**\n        // __strong__\n        // allow one nested instance of italic text using the same delimiter\n        pattern: createInline(\n          /\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^..)[\\s\\S]+(?=..$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /\\*\\*|__/\n        }\n      },\n      italic: {\n        // *em*\n        // _em_\n        // allow one nested instance of bold text using the same delimiter\n        pattern: createInline(\n          /\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^.)[\\s\\S]+(?=.$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /[*_]/\n        }\n      },\n      strike: {\n        // ~~strike through~~\n        // ~strike~\n        // eslint-disable-next-line regexp/strict\n        pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /~~?/\n        }\n      },\n      'code-snippet': {\n        // `code`\n        // ``code``\n        pattern:\n          /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n        lookbehind: true,\n        greedy: true,\n        alias: ['code', 'keyword']\n      },\n      url: {\n        // [example](http://example.com \"Optional title\")\n        // [example][id]\n        // [example] [id]\n        pattern: createInline(\n          /!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          operator: /^!/,\n          content: {\n            pattern: /(^\\[)[^\\]]+(?=\\])/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          variable: {\n            pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n            lookbehind: true\n          },\n          url: {\n            pattern: /(^\\]\\()[^\\s)]+/,\n            lookbehind: true\n          },\n          string: {\n            pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n            lookbehind: true\n          }\n        }\n      }\n    })\n    ;['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n      ;['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (\n        inside\n      ) {\n        if (token !== inside) {\n          Prism.languages.markdown[token].inside.content.inside[inside] =\n            Prism.languages.markdown[inside]\n        }\n      })\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'markdown' && env.language !== 'md') {\n        return\n      }\n      function walkTokens(tokens) {\n        if (!tokens || typeof tokens === 'string') {\n          return\n        }\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (token.type !== 'code') {\n            walkTokens(token.content)\n            continue\n          }\n          /*\n           * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n           * is optional. But the grammar is defined so that there is only one case we have to handle:\n           *\n           * token.content = [\n           *     <span class=\"punctuation\">```</span>,\n           *     <span class=\"code-language\">xxxx</span>,\n           *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n           *     <span class=\"code-block\">...</span>,\n           *     '\\n', // exactly one new lines again\n           *     <span class=\"punctuation\">```</span>\n           * ];\n           */\n          var codeLang = token.content[1]\n          var codeBlock = token.content[3]\n          if (\n            codeLang &&\n            codeBlock &&\n            codeLang.type === 'code-language' &&\n            codeBlock.type === 'code-block' &&\n            typeof codeLang.content === 'string'\n          ) {\n            // this might be a language that Prism does not support\n            // do some replacements to support C++, C#, and F#\n            var lang = codeLang.content\n              .replace(/\\b#/g, 'sharp')\n              .replace(/\\b\\+\\+/g, 'pp') // only use the first word\n            lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase()\n            var alias = 'language-' + lang // add alias\n            if (!codeBlock.alias) {\n              codeBlock.alias = [alias]\n            } else if (typeof codeBlock.alias === 'string') {\n              codeBlock.alias = [codeBlock.alias, alias]\n            } else {\n              codeBlock.alias.push(alias)\n            }\n          }\n        }\n      }\n      walkTokens(env.tokens)\n    })\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type !== 'code-block') {\n        return\n      }\n      var codeLang = ''\n      for (var i = 0, l = env.classes.length; i < l; i++) {\n        var cls = env.classes[i]\n        var match = /language-(.+)/.exec(cls)\n        if (match) {\n          codeLang = match[1]\n          break\n        }\n      }\n      var grammar = Prism.languages[codeLang]\n      if (!grammar) {\n        if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n          var id =\n            'md-' +\n            new Date().valueOf() +\n            '-' +\n            Math.floor(Math.random() * 1e16)\n          env.attributes['id'] = id\n          Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n            var ele = document.getElementById(id)\n            if (ele) {\n              ele.innerHTML = Prism.highlight(\n                ele.textContent,\n                Prism.languages[codeLang],\n                codeLang\n              )\n            }\n          })\n        }\n      } else {\n        env.content = Prism.highlight(\n          textContent(env.content.value),\n          grammar,\n          codeLang\n        )\n      }\n    })\n    var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi')\n    /**\n     * A list of known entity names.\n     *\n     * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n     *\n     * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n     */\n    var KNOWN_ENTITY_NAMES = {\n      amp: '&',\n      lt: '<',\n      gt: '>',\n      quot: '\"'\n    } // IE 11 doesn't support `String.fromCodePoint`\n    var fromCodePoint = String.fromCodePoint || String.fromCharCode\n    /**\n     * Returns the text content of a given HTML source code string.\n     *\n     * @param {string} html\n     * @returns {string}\n     */\n    function textContent(html) {\n      // remove all tags\n      var text = html.replace(tagPattern, '') // decode known entities\n      text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n        code = code.toLowerCase()\n        if (code[0] === '#') {\n          var value\n          if (code[1] === 'x') {\n            value = parseInt(code.slice(2), 16)\n          } else {\n            value = Number(code.slice(1))\n          }\n          return fromCodePoint(value)\n        } else {\n          var known = KNOWN_ENTITY_NAMES[code]\n          if (known) {\n            return known\n          } // unable to decode\n          return m\n        }\n      })\n      return text\n    }\n    Prism.languages.md = Prism.languages.markdown\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = markupTemplating\nmarkupTemplating.displayName = 'markupTemplating'\nmarkupTemplating.aliases = []\nfunction markupTemplating(Prism) {\n  ;(function (Prism) {\n    /**\n     * Returns the placeholder for the given language id and index.\n     *\n     * @param {string} language\n     * @param {string|number} index\n     * @returns {string}\n     */\n    function getPlaceholder(language, index) {\n      return '___' + language.toUpperCase() + index + '___'\n    }\n    Object.defineProperties((Prism.languages['markup-templating'] = {}), {\n      buildPlaceholders: {\n        /**\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\n         *\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n         * `true` will be replaced.\n         *\n         * @param {object} env The environment of the `before-tokenize` hook.\n         * @param {string} language The language id.\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n         * @param {(match: string) => boolean} [replaceFilter]\n         */\n        value: function (env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return\n          }\n          var tokenStack = (env.tokenStack = [])\n          env.code = env.code.replace(placeholderPattern, function (match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match\n            }\n            var i = tokenStack.length\n            var placeholder // Check for existing strings\n            while (\n              env.code.indexOf((placeholder = getPlaceholder(language, i))) !==\n              -1\n            ) {\n              ++i\n            } // Create a sparse array\n            tokenStack[i] = match\n            return placeholder\n          }) // Switch the grammar to markup\n          env.grammar = Prism.languages.markup\n        }\n      },\n      tokenizePlaceholders: {\n        /**\n         * Replace placeholders with proper tokens after tokenizing.\n         *\n         * @param {object} env The environment of the `after-tokenize` hook.\n         * @param {string} language The language id.\n         */\n        value: function (env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return\n          } // Switch the grammar back\n          env.grammar = Prism.languages[language]\n          var j = 0\n          var keys = Object.keys(env.tokenStack)\n          function walkTokens(tokens) {\n            for (var i = 0; i < tokens.length; i++) {\n              // all placeholders are replaced already\n              if (j >= keys.length) {\n                break\n              }\n              var token = tokens[i]\n              if (\n                typeof token === 'string' ||\n                (token.content && typeof token.content === 'string')\n              ) {\n                var k = keys[j]\n                var t = env.tokenStack[k]\n                var s = typeof token === 'string' ? token : token.content\n                var placeholder = getPlaceholder(language, k)\n                var index = s.indexOf(placeholder)\n                if (index > -1) {\n                  ++j\n                  var before = s.substring(0, index)\n                  var middle = new Prism.Token(\n                    language,\n                    Prism.tokenize(t, env.grammar),\n                    'language-' + language,\n                    t\n                  )\n                  var after = s.substring(index + placeholder.length)\n                  var replacement = []\n                  if (before) {\n                    replacement.push.apply(replacement, walkTokens([before]))\n                  }\n                  replacement.push(middle)\n                  if (after) {\n                    replacement.push.apply(replacement, walkTokens([after]))\n                  }\n                  if (typeof token === 'string') {\n                    tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                  } else {\n                    token.content = replacement\n                  }\n                }\n              } else if (\n                token.content\n                /* && typeof token.content !== 'string' */\n              ) {\n                walkTokens(token.content)\n              }\n            }\n            return tokens\n          }\n          walkTokens(env.tokens)\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = markup\nmarkup.displayName = 'markup'\nmarkup.aliases = ['html', 'mathml', 'svg', 'xml', 'ssml', 'atom', 'rss']\nfunction markup(Prism) {\n  Prism.languages.markup = {\n    comment: {\n      pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n      greedy: true\n    },\n    prolog: {\n      pattern: /<\\?[\\s\\S]+?\\?>/,\n      greedy: true\n    },\n    doctype: {\n      // https://www.w3.org/TR/xml/#NT-doctypedecl\n      pattern:\n        /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n      greedy: true,\n      inside: {\n        'internal-subset': {\n          pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        punctuation: /^<!|>$|[[\\]]/,\n        'doctype-tag': /^DOCTYPE/i,\n        name: /[^\\s<>'\"]+/\n      }\n    },\n    cdata: {\n      pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n      greedy: true\n    },\n    tag: {\n      pattern:\n        /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'special-attr': [],\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n          inside: {\n            punctuation: [\n              {\n                pattern: /^=/,\n                alias: 'attr-equals'\n              },\n              /\"|'/\n            ]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: [\n      {\n        pattern: /&[\\da-z]{1,8};/i,\n        alias: 'named-entity'\n      },\n      /&#x?[\\da-f]{1,8};/i\n    ]\n  }\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n    Prism.languages.markup['entity']\n  Prism.languages.markup['doctype'].inside['internal-subset'].inside =\n    Prism.languages.markup // Plugin to make entity title show the real entity, idea by Roman Komarov\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {}\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      }\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      }\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      }\n      var def = {}\n      def[tagName] = {\n        pattern: RegExp(\n          /(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(\n            /__/g,\n            function () {\n              return tagName\n            }\n          ),\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      }\n      Prism.languages.insertBefore('markup', 'cdata', def)\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n    /**\n     * Adds an pattern to highlight languages embedded in HTML attributes.\n     *\n     * An example of an inlined language is CSS with `style` attributes.\n     *\n     * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addAttribute('style', 'css');\n     */\n    value: function (attrName, lang) {\n      Prism.languages.markup.tag.inside['special-attr'].push({\n        pattern: RegExp(\n          /(^|[\"'\\s])/.source +\n            '(?:' +\n            attrName +\n            ')' +\n            /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n          'i'\n        ),\n        lookbehind: true,\n        inside: {\n          'attr-name': /^[^\\s=]+/,\n          'attr-value': {\n            pattern: /=[\\s\\S]+/,\n            inside: {\n              value: {\n                pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n                lookbehind: true,\n                alias: [lang, 'language-' + lang],\n                inside: Prism.languages[lang]\n              },\n              punctuation: [\n                {\n                  pattern: /^=/,\n                  alias: 'attr-equals'\n                },\n                /\"|'/\n              ]\n            }\n          }\n        }\n      })\n    }\n  })\n  Prism.languages.html = Prism.languages.markup\n  Prism.languages.mathml = Prism.languages.markup\n  Prism.languages.svg = Prism.languages.markup\n  Prism.languages.xml = Prism.languages.extend('markup', {})\n  Prism.languages.ssml = Prism.languages.xml\n  Prism.languages.atom = Prism.languages.xml\n  Prism.languages.rss = Prism.languages.xml\n}\n","'use strict'\n\nmodule.exports = matlab\nmatlab.displayName = 'matlab'\nmatlab.aliases = []\nfunction matlab(Prism) {\n  Prism.languages.matlab = {\n    comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n    string: {\n      pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    // FIXME We could handle imaginary numbers as a whole\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n    keyword:\n      /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n    punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n  }\n}\n","'use strict'\n\nmodule.exports = maxscript\nmaxscript.displayName = 'maxscript'\nmaxscript.aliases = []\nfunction maxscript(Prism) {\n  Prism.languages.maxscript = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    path: {\n      pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\n      greedy: true,\n      alias: 'string'\n    },\n    'function-definition': {\n      pattern: /(\\b(?:function|fn)\\s+)\\w+\\b/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    argument: {\n      pattern: /\\b[a-z_]\\w*(?=:)/i,\n      alias: 'attr-name'\n    },\n    keyword:\n      /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i,\n    boolean: /\\b(?:true|false|on|off)\\b/,\n    time: {\n      pattern:\n        /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    number: [\n      {\n        pattern:\n          /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\n        lookbehind: true\n      },\n      /\\b(?:e|pi)\\b/\n    ],\n    constant: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/,\n    color: {\n      pattern: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/i,\n      alias: 'constant'\n    },\n    operator: /[-+*/<>=!]=?|[&^]|#(?!\\()/,\n    punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\n  }\n}\n","'use strict'\n\nmodule.exports = mel\nmel.displayName = 'mel'\nmel.aliases = []\nfunction mel(Prism) {\n  Prism.languages.mel = {\n    comment: /\\/\\/.*/,\n    code: {\n      pattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\n      greedy: true,\n      alias: 'italic',\n      inside: {\n        delimiter: {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        } // See rest below\n      }\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+/,\n    flag: {\n      pattern: /-[^\\d\\W]\\w*/,\n      alias: 'operator'\n    },\n    keyword:\n      /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n    function:\n      /\\b\\w+(?=\\()|\\b(?:about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|CBG|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|Mayatomr|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,\n    operator: [\n      /\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /<<|>>|[.,:;?\\[\\](){}]/\n  }\n  Prism.languages.mel['code'].inside.rest = Prism.languages.mel\n}\n","'use strict'\n\nmodule.exports = mermaid\nmermaid.displayName = 'mermaid'\nmermaid.aliases = []\nfunction mermaid(Prism) {\n  Prism.languages.mermaid = {\n    comment: {\n      pattern: /%%.*/,\n      greedy: true\n    },\n    style: {\n      pattern:\n        /^([ \\t]*(?:classDef|linkStyle|style)[ \\t]+[\\w$-]+[ \\t]+)\\w.*[^\\s;]/m,\n      lookbehind: true,\n      inside: {\n        property: /\\b\\w[\\w-]*(?=[ \\t]*:)/,\n        operator: /:/,\n        punctuation: /,/\n      }\n    },\n    'inter-arrow-label': {\n      pattern:\n        /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \\t]*(?:\"[^\"\\r\\n]*\"|[^\\s\".=-](?:[^\\r\\n.=-]*[^\\s.=-])?)[ \\t]*(?:\\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        arrow: {\n          pattern: /(?:\\.+->?|--+[->]|==+[=>])$/,\n          alias: 'operator'\n        },\n        label: {\n          pattern: /^([\\s\\S]{2}[ \\t]*)\\S(?:[\\s\\S]*\\S)?/,\n          lookbehind: true,\n          alias: 'property'\n        },\n        'arrow-head': {\n          pattern: /^\\S+/,\n          alias: ['arrow', 'operator']\n        }\n      }\n    },\n    arrow: [\n      // This might look complex but it really isn't.\n      // There are many possible arrows (see tests) and it's impossible to fit all of them into one pattern. The\n      // problem is that we only have one lookbehind per pattern. However, we cannot disallow too many arrow\n      // characters in the one lookbehind because that would create too many false negatives. So we have to split the\n      // arrows into different patterns.\n      {\n        // ER diagram\n        pattern: /(^|[^{}|o.-])[|}][|o](?:--|\\.\\.)[|o][|{](?![{}|o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // flow chart\n        // (?:==+|--+|-\\.*-)\n        pattern:\n          /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\\.*-)[>ox]?|(?:==+|--+|-\\.*-)[>ox]|===+|---+|-\\.+-)(?![<>ox.=-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // sequence diagram\n        pattern:\n          /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // class diagram\n        pattern:\n          /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\\|?(?:--|\\.\\.)|(?:--|\\.\\.)\\|?>|--|\\.\\.)(?![<>|*o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      }\n    ],\n    label: {\n      pattern: /(^|[^|<])\\|(?:[^\\r\\n\"|]|\"[^\"\\r\\n]*\")+\\|/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    text: {\n      pattern: /(?:[(\\[{]+|\\b>)(?:[^\\r\\n\"()\\[\\]{}]|\"[^\"\\r\\n]*\")+(?:[)\\]}]+|>)/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    annotation: {\n      pattern:\n        /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\\[\\[(?:choice|fork|join)\\]\\]/i,\n      alias: 'important'\n    },\n    keyword: [\n      // This language has both case-sensitive and case-insensitive keywords\n      {\n        pattern:\n          /(^[ \\t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\\w$-])/m,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern:\n          /(^[ \\t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \\t]+note)?|loop|opt|par|participant|rect|state|note[ \\t]+(?:over|(?:left|right)[ \\t]+of))(?![\\w$-])/im,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    entity: /#[a-z0-9]+;/,\n    operator: {\n      pattern: /(\\w[ \\t]*)&(?=[ \\t]*\\w)|:::|:/,\n      lookbehind: true\n    },\n    punctuation: /[(){};]/\n  }\n}\n","'use strict'\n\nmodule.exports = mizar\nmizar.displayName = 'mizar'\nmizar.aliases = []\nfunction mizar(Prism) {\n  Prism.languages.mizar = {\n    comment: /::.+/,\n    keyword:\n      /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|equals|end|environ|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:y|ies)|when|where|with|wrt)\\b/,\n    parameter: {\n      pattern: /\\$(?:10|\\d)/,\n      alias: 'variable'\n    },\n    variable: /\\b\\w+(?=:)/,\n    number: /(?:\\b|-)\\d+\\b/,\n    operator: /\\.\\.\\.|->|&|\\.?=/,\n    punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n  }\n}\n","'use strict'\n\nmodule.exports = mongodb\nmongodb.displayName = 'mongodb'\nmongodb.aliases = []\nfunction mongodb(Prism) {\n  ;(function (Prism) {\n    var operators = [\n      // query and projection\n      '$eq',\n      '$gt',\n      '$gte',\n      '$in',\n      '$lt',\n      '$lte',\n      '$ne',\n      '$nin',\n      '$and',\n      '$not',\n      '$nor',\n      '$or',\n      '$exists',\n      '$type',\n      '$expr',\n      '$jsonSchema',\n      '$mod',\n      '$regex',\n      '$text',\n      '$where',\n      '$geoIntersects',\n      '$geoWithin',\n      '$near',\n      '$nearSphere',\n      '$all',\n      '$elemMatch',\n      '$size',\n      '$bitsAllClear',\n      '$bitsAllSet',\n      '$bitsAnyClear',\n      '$bitsAnySet',\n      '$comment',\n      '$elemMatch',\n      '$meta',\n      '$slice', // update\n      '$currentDate',\n      '$inc',\n      '$min',\n      '$max',\n      '$mul',\n      '$rename',\n      '$set',\n      '$setOnInsert',\n      '$unset',\n      '$addToSet',\n      '$pop',\n      '$pull',\n      '$push',\n      '$pullAll',\n      '$each',\n      '$position',\n      '$slice',\n      '$sort',\n      '$bit', // aggregation pipeline stages\n      '$addFields',\n      '$bucket',\n      '$bucketAuto',\n      '$collStats',\n      '$count',\n      '$currentOp',\n      '$facet',\n      '$geoNear',\n      '$graphLookup',\n      '$group',\n      '$indexStats',\n      '$limit',\n      '$listLocalSessions',\n      '$listSessions',\n      '$lookup',\n      '$match',\n      '$merge',\n      '$out',\n      '$planCacheStats',\n      '$project',\n      '$redact',\n      '$replaceRoot',\n      '$replaceWith',\n      '$sample',\n      '$set',\n      '$skip',\n      '$sort',\n      '$sortByCount',\n      '$unionWith',\n      '$unset',\n      '$unwind', // aggregation pipeline operators\n      '$abs',\n      '$accumulator',\n      '$acos',\n      '$acosh',\n      '$add',\n      '$addToSet',\n      '$allElementsTrue',\n      '$and',\n      '$anyElementTrue',\n      '$arrayElemAt',\n      '$arrayToObject',\n      '$asin',\n      '$asinh',\n      '$atan',\n      '$atan2',\n      '$atanh',\n      '$avg',\n      '$binarySize',\n      '$bsonSize',\n      '$ceil',\n      '$cmp',\n      '$concat',\n      '$concatArrays',\n      '$cond',\n      '$convert',\n      '$cos',\n      '$dateFromParts',\n      '$dateToParts',\n      '$dateFromString',\n      '$dateToString',\n      '$dayOfMonth',\n      '$dayOfWeek',\n      '$dayOfYear',\n      '$degreesToRadians',\n      '$divide',\n      '$eq',\n      '$exp',\n      '$filter',\n      '$first',\n      '$floor',\n      '$function',\n      '$gt',\n      '$gte',\n      '$hour',\n      '$ifNull',\n      '$in',\n      '$indexOfArray',\n      '$indexOfBytes',\n      '$indexOfCP',\n      '$isArray',\n      '$isNumber',\n      '$isoDayOfWeek',\n      '$isoWeek',\n      '$isoWeekYear',\n      '$last',\n      '$last',\n      '$let',\n      '$literal',\n      '$ln',\n      '$log',\n      '$log10',\n      '$lt',\n      '$lte',\n      '$ltrim',\n      '$map',\n      '$max',\n      '$mergeObjects',\n      '$meta',\n      '$min',\n      '$millisecond',\n      '$minute',\n      '$mod',\n      '$month',\n      '$multiply',\n      '$ne',\n      '$not',\n      '$objectToArray',\n      '$or',\n      '$pow',\n      '$push',\n      '$radiansToDegrees',\n      '$range',\n      '$reduce',\n      '$regexFind',\n      '$regexFindAll',\n      '$regexMatch',\n      '$replaceOne',\n      '$replaceAll',\n      '$reverseArray',\n      '$round',\n      '$rtrim',\n      '$second',\n      '$setDifference',\n      '$setEquals',\n      '$setIntersection',\n      '$setIsSubset',\n      '$setUnion',\n      '$size',\n      '$sin',\n      '$slice',\n      '$split',\n      '$sqrt',\n      '$stdDevPop',\n      '$stdDevSamp',\n      '$strcasecmp',\n      '$strLenBytes',\n      '$strLenCP',\n      '$substr',\n      '$substrBytes',\n      '$substrCP',\n      '$subtract',\n      '$sum',\n      '$switch',\n      '$tan',\n      '$toBool',\n      '$toDate',\n      '$toDecimal',\n      '$toDouble',\n      '$toInt',\n      '$toLong',\n      '$toObjectId',\n      '$toString',\n      '$toLower',\n      '$toUpper',\n      '$trim',\n      '$trunc',\n      '$type',\n      '$week',\n      '$year',\n      '$zip', // aggregation pipeline query modifiers\n      '$comment',\n      '$explain',\n      '$hint',\n      '$max',\n      '$maxTimeMS',\n      '$min',\n      '$orderby',\n      '$query',\n      '$returnKey',\n      '$showDiskLoc',\n      '$natural'\n    ]\n    var builtinFunctions = [\n      'ObjectId',\n      'Code',\n      'BinData',\n      'DBRef',\n      'Timestamp',\n      'NumberLong',\n      'NumberDecimal',\n      'MaxKey',\n      'MinKey',\n      'RegExp',\n      'ISODate',\n      'UUID'\n    ]\n    operators = operators.map(function (operator) {\n      return operator.replace('$', '\\\\$')\n    })\n    var operatorsSource = '(?:' + operators.join('|') + ')\\\\b'\n    Prism.languages.mongodb = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('mongodb', 'string', {\n      property: {\n        pattern:\n          /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\n        greedy: true,\n        inside: {\n          keyword: RegExp('^([\\'\"])?' + operatorsSource + '(?:\\\\1)?$')\n        }\n      }\n    })\n    Prism.languages.mongodb.string.inside = {\n      url: {\n        // url pattern\n        pattern:\n          /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\n        greedy: true\n      },\n      entity: {\n        // ipv4\n        pattern:\n          /\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b/,\n        greedy: true\n      }\n    }\n    Prism.languages.insertBefore('mongodb', 'constant', {\n      builtin: {\n        pattern: RegExp('\\\\b(?:' + builtinFunctions.join('|') + ')\\\\b'),\n        alias: 'keyword'\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = monkey\nmonkey.displayName = 'monkey'\nmonkey.aliases = []\nfunction monkey(Prism) {\n  Prism.languages.monkey = {\n    string: /\"[^\"\\r\\n]*\"/,\n    comment: [\n      {\n        pattern: /^#Rem\\s[\\s\\S]*?^#End/im,\n        greedy: true\n      },\n      {\n        pattern: /'.+/,\n        greedy: true\n      }\n    ],\n    preprocessor: {\n      pattern: /(^[ \\t]*)#.+/m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    function: /\\b\\w+(?=\\()/,\n    'type-char': {\n      pattern: /(\\w)[?%#$]/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: {\n      pattern:\n        /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\n    operator:\n      /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[.,:;()\\[\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = moonscript\nmoonscript.displayName = 'moonscript'\nmoonscript.aliases = ['moon']\nfunction moonscript(Prism) {\n  Prism.languages.moonscript = {\n    comment: /--.*/,\n    string: [\n      {\n        pattern: /'[^']*'|\\[(=*)\\[[\\s\\S]*?\\]\\1\\]/,\n        greedy: true\n      },\n      {\n        pattern: /\"[^\"]*\"/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /#\\{[^{}]*\\}/,\n            inside: {\n              moonscript: {\n                pattern: /(^#\\{)[\\s\\S]+(?=\\})/,\n                lookbehind: true,\n                inside: null // see beow\n              },\n              'interpolation-punctuation': {\n                pattern: /#\\{|\\}/,\n                alias: 'punctuation'\n              }\n            }\n          }\n        }\n      }\n    ],\n    'class-name': [\n      {\n        pattern: /(\\b(?:class|extends)[ \\t]+)\\w+/,\n        lookbehind: true\n      }, // class-like names start with a capital letter\n      /\\b[A-Z]\\w*/\n    ],\n    keyword:\n      /\\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\\b/,\n    variable: /@@?\\w*/,\n    property: {\n      pattern: /\\b(?!\\d)\\w+(?=:)|(:)(?!\\d)\\w+/,\n      lookbehind: true\n    },\n    function: {\n      pattern:\n        /\\b(?:_G|_VERSION|assert|collectgarbage|coroutine\\.(?:running|create|resume|status|wrap|yield)|debug\\.(?:debug|gethook|getinfo|getlocal|getupvalue|setlocal|setupvalue|sethook|traceback|getfenv|getmetatable|getregistry|setfenv|setmetatable)|dofile|error|getfenv|getmetatable|io\\.(?:stdin|stdout|stderr|close|flush|input|lines|open|output|popen|read|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\\.(?:abs|acos|asin|atan|atan2|ceil|sin|cos|tan|deg|exp|floor|log|log10|max|min|fmod|modf|cosh|sinh|tanh|pow|rad|sqrt|frexp|ldexp|random|randomseed|pi)|module|next|os\\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\\.(?:byte|char|dump|find|len|lower|rep|sub|upper|format|gsub|gmatch|match|reverse)|table\\.(?:maxn|concat|sort|insert|remove)|tonumber|tostring|type|unpack|xpcall)\\b/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /(?:\\B\\.\\d+|\\b\\d+\\.\\d+|\\b\\d+(?=[eE]))(?:[eE][-+]?\\d+)?\\b|\\b(?:0x[a-fA-F\\d]+|\\d+)(?:U?LL)?\\b/,\n    operator:\n      /\\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\\.\\.)=?|[:#^]|\\b(?:and|or)\\b=?|\\b(?:not)\\b/,\n    punctuation: /[.,()[\\]{}\\\\]/\n  }\n  Prism.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside =\n    Prism.languages.moonscript\n  Prism.languages.moon = Prism.languages.moonscript\n}\n","'use strict'\n\nmodule.exports = n1ql\nn1ql.displayName = 'n1ql'\nn1ql.aliases = []\nfunction n1ql(Prism) {\n  Prism.languages.n1ql = {\n    comment: /\\/\\*[\\s\\S]*?(?:$|\\*\\/)/,\n    parameter: /\\$[\\w.]+/,\n    string: {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\]|\\1\\1)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`]|``)*`/,\n      greedy: true\n    },\n    function:\n      /\\b(?:ABS|ACOS|ARRAY_AGG|ARRAY_APPEND|ARRAY_AVG|ARRAY_CONCAT|ARRAY_CONTAINS|ARRAY_COUNT|ARRAY_DISTINCT|ARRAY_FLATTEN|ARRAY_IFNULL|ARRAY_INSERT|ARRAY_INTERSECT|ARRAY_LENGTH|ARRAY_MAX|ARRAY_MIN|ARRAY_POSITION|ARRAY_PREPEND|ARRAY_PUT|ARRAY_RANGE|ARRAY_REMOVE|ARRAY_REPEAT|ARRAY_REPLACE|ARRAY_REVERSE|ARRAY_SORT|ARRAY_STAR|ARRAY_SUM|ARRAY_SYMDIFF|ARRAY_SYMDIFFN|ARRAY_UNION|ASIN|ATAN|ATAN2|AVG|BASE64|BASE64_DECODE|BASE64_ENCODE|BITAND|BITCLEAR|BITNOT|BITOR|BITSET|BITSHIFT|BITTEST|BITXOR|CEIL|CLOCK_LOCAL|CLOCK_MILLIS|CLOCK_STR|CLOCK_TZ|CLOCK_UTC|CONTAINS|CONTAINS_TOKEN|CONTAINS_TOKEN_LIKE|CONTAINS_TOKEN_REGEXP|COS|COUNT|CURL|DATE_ADD_MILLIS|DATE_ADD_STR|DATE_DIFF_MILLIS|DATE_DIFF_STR|DATE_FORMAT_STR|DATE_PART_MILLIS|DATE_PART_STR|DATE_RANGE_MILLIS|DATE_RANGE_STR|DATE_TRUNC_MILLIS|DATE_TRUNC_STR|DECODE_JSON|DEGREES|DURATION_TO_STR|E|ENCODED_SIZE|ENCODE_JSON|EXP|FLOOR|GREATEST|HAS_TOKEN|IFINF|IFMISSING|IFMISSINGORNULL|IFNAN|IFNANORINF|IFNULL|INITCAP|ISARRAY|ISATOM|ISBOOLEAN|ISNUMBER|ISOBJECT|ISSTRING|IsBitSET|LEAST|LENGTH|LN|LOG|LOWER|LTRIM|MAX|META|MILLIS|MILLIS_TO_LOCAL|MILLIS_TO_STR|MILLIS_TO_TZ|MILLIS_TO_UTC|MILLIS_TO_ZONE_NAME|MIN|MISSINGIF|NANIF|NEGINFIF|NOW_LOCAL|NOW_MILLIS|NOW_STR|NOW_TZ|NOW_UTC|NULLIF|OBJECT_ADD|OBJECT_CONCAT|OBJECT_INNER_PAIRS|OBJECT_INNER_VALUES|OBJECT_LENGTH|OBJECT_NAMES|OBJECT_PAIRS|OBJECT_PUT|OBJECT_REMOVE|OBJECT_RENAME|OBJECT_REPLACE|OBJECT_UNWRAP|OBJECT_VALUES|PAIRS|PI|POLY_LENGTH|POSINFIF|POSITION|POWER|RADIANS|RANDOM|REGEXP_CONTAINS|REGEXP_LIKE|REGEXP_POSITION|REGEXP_REPLACE|REPEAT|REPLACE|REVERSE|ROUND|RTRIM|SIGN|SIN|SPLIT|SQRT|STR_TO_DURATION|STR_TO_MILLIS|STR_TO_TZ|STR_TO_UTC|STR_TO_ZONE_NAME|SUBSTR|SUFFIXES|SUM|TAN|TITLE|TOARRAY|TOATOM|TOBOOLEAN|TOKENS|TONUMBER|TOOBJECT|TOSTRING|TRIM|TRUNC|TYPE|UPPER|WEEKDAY_MILLIS|WEEKDAY_STR)(?=\\s*\\()/i,\n    keyword:\n      /\\b(?:ALL|ALTER|ANALYZE|AS|ASC|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|CONNECT|CONTINUE|CORRELATE|COVER|CREATE|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FLATTEN|FOR|FORCE|FROM|FUNCTION|GRANT|GROUP|GSI|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LAST|LEFT|LET|LETTING|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NULL|NUMBER|OBJECT|OFFSET|ON|OPTION|ORDER|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROCEDURE|PUBLIC|RAW|REALM|REDUCE|RENAME|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|SATISFIES|SCHEMA|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TO|TRANSACTION|TRIGGER|TRUNCATE|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WITH|WORK|XOR)\\b/i,\n    boolean: /\\b(?:TRUE|FALSE)\\b/i,\n    number: /(?:\\b\\d+\\.|\\B\\.)\\d+e[+\\-]?\\d+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/%]|!=|==?|\\|\\||<[>=]?|>=?|\\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\\b/i,\n    punctuation: /[;[\\](),.{}:]/\n  }\n}\n","'use strict'\n\nmodule.exports = n4js\nn4js.displayName = 'n4js'\nn4js.aliases = ['n4jsd']\nfunction n4js(Prism) {\n  Prism.languages.n4js = Prism.languages.extend('javascript', {\n    // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n    keyword:\n      /\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n  })\n  Prism.languages.insertBefore('n4js', 'constant', {\n    // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n    annotation: {\n      pattern: /@+\\w+/,\n      alias: 'operator'\n    }\n  })\n  Prism.languages.n4jsd = Prism.languages.n4js\n}\n","'use strict'\n\nmodule.exports = nand2tetrisHdl\nnand2tetrisHdl.displayName = 'nand2tetrisHdl'\nnand2tetrisHdl.aliases = []\nfunction nand2tetrisHdl(Prism) {\n  Prism.languages['nand2tetris-hdl'] = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    keyword: /\\b(?:CHIP|IN|OUT|PARTS|BUILTIN|CLOCKED)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    function: /\\b[A-Za-z][A-Za-z0-9]*(?=\\()/,\n    number: /\\b\\d+\\b/,\n    operator: /=|\\.\\./,\n    punctuation: /[{}[\\];(),:]/\n  }\n}\n","'use strict'\n\nmodule.exports = naniscript\nnaniscript.displayName = 'naniscript'\nnaniscript.aliases = []\nfunction naniscript(Prism) {\n  ;(function (Prism) {\n    var expressionDef = /\\{[^\\r\\n\\[\\]{}]*\\}/\n    var params = {\n      'quoted-string': {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        alias: 'operator'\n      },\n      'command-param-id': {\n        pattern: /(\\s)\\w+:/,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'command-param-value': [\n        {\n          pattern: expressionDef,\n          alias: 'selector'\n        },\n        {\n          pattern: /([\\t ])\\S+/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'operator'\n        },\n        {\n          pattern: /\\S(?:.*\\S)?/,\n          alias: 'operator'\n        }\n      ]\n    }\n    Prism.languages.naniscript = {\n      // ; ...\n      comment: {\n        pattern: /^([\\t ]*);.*/m,\n        lookbehind: true\n      },\n      // > ...\n      // Define is a control line starting with '>' followed by a word, a space and a text.\n      define: {\n        pattern: /^>.+/m,\n        alias: 'tag',\n        inside: {\n          value: {\n            pattern: /(^>\\w+[\\t ]+)(?!\\s)[^{}\\r\\n]+/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          key: {\n            pattern: /(^>)\\w+/,\n            lookbehind: true\n          }\n        }\n      },\n      // # ...\n      label: {\n        pattern: /^([\\t ]*)#[\\t ]*\\w+[\\t ]*$/m,\n        lookbehind: true,\n        alias: 'regex'\n      },\n      command: {\n        pattern: /^([\\t ]*)@\\w+(?=[\\t ]|$).*/m,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          'command-name': /^@\\w+/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'command-params': {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            inside: params\n          }\n        }\n      },\n      // Generic is any line that doesn't start with operators: ;>#@\n      'generic-text': {\n        pattern: /(^[ \\t]*)[^#@>;\\s].*/m,\n        lookbehind: true,\n        alias: 'punctuation',\n        inside: {\n          // \\{ ... \\} ... \\[ ... \\] ... \\\"\n          'escaped-char': /\\\\[{}\\[\\]\"]/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'inline-command': {\n            pattern: /\\[[\\t ]*\\w[^\\r\\n\\[\\]]*\\]/,\n            greedy: true,\n            alias: 'function',\n            inside: {\n              'command-params': {\n                pattern: /(^\\[[\\t ]*\\w+\\b)[\\s\\S]+(?=\\]$)/,\n                lookbehind: true,\n                inside: params\n              },\n              'command-param-name': {\n                pattern: /^(\\[[\\t ]*)\\w+/,\n                lookbehind: true,\n                alias: 'name'\n              },\n              'start-stop-char': /[\\[\\]]/\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.nani = Prism.languages['naniscript']\n    /** @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token */\n    /**\n     * This hook is used to validate generic-text tokens for balanced brackets.\n     * Mark token as bad-line when contains not balanced brackets: {},[]\n     */\n    Prism.hooks.add('after-tokenize', function (env) {\n      /** @type {(Token | string)[]} */\n      var tokens = env.tokens\n      tokens.forEach(function (token) {\n        if (typeof token !== 'string' && token.type === 'generic-text') {\n          var content = getTextContent(token)\n          if (!isBracketsBalanced(content)) {\n            token.type = 'bad-line'\n            token.content = content\n          }\n        }\n      })\n    })\n    /**\n     * @param {string} input\n     * @returns {boolean}\n     */\n    function isBracketsBalanced(input) {\n      var brackets = '[]{}'\n      var stack = []\n      for (var i = 0; i < input.length; i++) {\n        var bracket = input[i]\n        var bracketsIndex = brackets.indexOf(bracket)\n        if (bracketsIndex !== -1) {\n          if (bracketsIndex % 2 === 0) {\n            stack.push(bracketsIndex + 1)\n          } else if (stack.pop() !== bracketsIndex) {\n            return false\n          }\n        }\n      }\n      return stack.length === 0\n    }\n    /**\n     * @param {string | Token | (string | Token)[]} token\n     * @returns {string}\n     */\n    function getTextContent(token) {\n      if (typeof token === 'string') {\n        return token\n      } else if (Array.isArray(token)) {\n        return token.map(getTextContent).join('')\n      } else {\n        return getTextContent(token.content)\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = nasm\nnasm.displayName = 'nasm'\nnasm.aliases = []\nfunction nasm(Prism) {\n  Prism.languages.nasm = {\n    comment: /;.*$/m,\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    label: {\n      pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: [\n      /\\[?BITS (?:16|32|64)\\]?/,\n      {\n        pattern: /(^\\s*)section\\s*[a-z.]+:?/im,\n        lookbehind: true\n      },\n      /(?:extern|global)[^;\\r\\n]*/i,\n      /(?:CPU|FLOAT|DEFAULT).*$/m\n    ],\n    register: {\n      pattern:\n        /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s)\\b/i,\n      alias: 'variable'\n    },\n    number:\n      /(?:\\b|(?=\\$))(?:0[hx](?:\\.[\\da-f]+|[\\da-f]+(?:\\.[\\da-f]+)?)(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n    operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n  }\n}\n","'use strict'\n\nmodule.exports = neon\nneon.displayName = 'neon'\nneon.aliases = []\nfunction neon(Prism) {\n  Prism.languages.neon = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    datetime: {\n      pattern:\n        /(^|[[{(=:,\\s])\\d\\d\\d\\d-\\d\\d?-\\d\\d?(?:(?:[Tt]| +)\\d\\d?:\\d\\d:\\d\\d(?:\\.\\d*)? *(?:Z|[-+]\\d\\d?(?::?\\d\\d)?)?)?(?=$|[\\]}),\\s])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    key: {\n      pattern: /(^|[[{(,\\s])[^,:=[\\]{}()'\"\\s]+(?=\\s*:(?:$|[\\]}),\\s])|\\s*=)/,\n      lookbehind: true,\n      alias: 'atrule'\n    },\n    number: {\n      pattern:\n        /(^|[[{(=:,\\s])[+-]?(?:0x[\\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:[eE][+-]?\\d+)?)(?=$|[\\]}),:=\\s])/,\n      lookbehind: true\n    },\n    boolean: {\n      pattern: /(^|[[{(=:,\\s])(?:true|false|yes|no)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true\n    },\n    null: {\n      pattern: /(^|[[{(=:,\\s])(?:null)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    string: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:('''|\"\"\")\\r?\\n(?:(?:[^\\r\\n]|\\r?\\n(?![\\t ]*\\2))*\\r?\\n)?[\\t ]*\\2|'[^'\\r\\n]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    literal: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:[^#\"',:=[\\]{}()\\s`-]|[:-][^\"',=[\\]{}()\\s])(?:[^,:=\\]})(\\s]|:(?![\\s,\\]})]|$)|[ \\t]+[^#,:=\\]})(\\s])*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    punctuation: /[,:=[\\]{}()-]/\n  }\n}\n","'use strict'\n\nmodule.exports = nevod\nnevod.displayName = 'nevod'\nnevod.aliases = []\nfunction nevod(Prism) {\n  Prism.languages.nevod = {\n    comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n    string: {\n      pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n      greedy: true,\n      inside: {\n        'string-attrs': /!$|!\\*$|\\*$/\n      }\n    },\n    namespace: {\n      pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n      lookbehind: true\n    },\n    pattern: {\n      pattern:\n        /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      inside: {\n        'pattern-name': {\n          pattern: /^#?[a-zA-Z0-9\\-.]+/,\n          alias: 'class-name'\n        },\n        fields: {\n          pattern: /\\(.*\\)/,\n          inside: {\n            'field-name': {\n              pattern: /[a-zA-Z0-9\\-.]+/,\n              alias: 'variable'\n            },\n            punctuation: /[,()]/,\n            operator: {\n              pattern: /~/,\n              alias: 'field-hidden-mark'\n            }\n          }\n        }\n      }\n    },\n    search: {\n      pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n      alias: 'function',\n      lookbehind: true\n    },\n    keyword:\n      /@(?:require|namespace|pattern|search|inside|outside|having|where)\\b/,\n    'standard-pattern': {\n      pattern:\n        /\\b(?:Word|Punct|Symbol|Space|LineBreak|Start|End|Alpha|AlphaNum|Num|NumAlpha|Blank|WordBreak|Any)(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n      inside: {\n        'standard-pattern-name': {\n          pattern: /^[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        quantifier: {\n          pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n          alias: 'number'\n        },\n        'standard-pattern-attr': {\n          pattern: /[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        punctuation: /[,()]/\n      }\n    },\n    quantifier: {\n      pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n      alias: 'number'\n    },\n    operator: [\n      {\n        pattern: /=/,\n        alias: 'pattern-def'\n      },\n      {\n        pattern: /&/,\n        alias: 'conjunction'\n      },\n      {\n        pattern: /~/,\n        alias: 'exception'\n      },\n      {\n        pattern: /\\?/,\n        alias: 'optionality'\n      },\n      {\n        pattern: /[[\\]]/,\n        alias: 'repetition'\n      },\n      {\n        pattern: /[{}]/,\n        alias: 'variation'\n      },\n      {\n        pattern: /[+_]/,\n        alias: 'sequence'\n      },\n      {\n        pattern: /\\.{2,3}/,\n        alias: 'span'\n      }\n    ],\n    'field-capture': [\n      {\n        pattern:\n          /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      },\n      {\n        pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      }\n    ],\n    punctuation: /[:;,()]/,\n    name: /[a-zA-Z0-9\\-.]+/\n  }\n}\n","'use strict'\n\nmodule.exports = nginx\nnginx.displayName = 'nginx'\nnginx.aliases = []\nfunction nginx(Prism) {\n  ;(function (Prism) {\n    var variable =\n      /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i\n    Prism.languages.nginx = {\n      comment: {\n        pattern: /(^|[\\s{};])#.*/,\n        lookbehind: true\n      },\n      directive: {\n        pattern:\n          /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\n            lookbehind: true,\n            inside: {\n              escape: {\n                pattern: /\\\\[\"'\\\\nrt]/,\n                alias: 'entity'\n              },\n              variable: variable\n            }\n          },\n          comment: {\n            pattern: /(\\s)#.*/,\n            lookbehind: true,\n            greedy: true\n          },\n          keyword: {\n            pattern: /^\\S+/,\n            greedy: true\n          },\n          // other patterns\n          boolean: {\n            pattern: /(\\s)(?:off|on)(?!\\S)/,\n            lookbehind: true\n          },\n          number: {\n            pattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\n            lookbehind: true\n          },\n          variable: variable\n        }\n      },\n      punctuation: /[{};]/\n    }\n  })(Prism)\n}\n"],"names":["cil","Prism","languages","comment","string","pattern","greedy","directive","lookbehind","alias","variable","keyword","function","boolean","number","punctuation","module","exports","displayName","aliases","clike","inside","operator","clojure","symbol","cmake","interpolation","property","namespace","inserted","cobol","level","coffeescript","extend","insertBefore","delimiter","script","javascript","coffee","concurnas","langext","annotation","conc","coq","commentSource","source","i","replace","RegExp","attribute","punct","refractorC","require","cpp","register","modName","generic","refractorRuby","crystal","rest","expansion","csharp","replacements","m","index","re","flags","nested","depthLog2","keywordKinds","keywordsToPattern","words","trim","typeDeclarationKeywords","keywords","nonTypeKeywords","nonContextualKeywords","nestedRound","name","genericName","identifier","array","typeExpressionWithoutTuple","tupleElement","tuple","typeExpression","typeInside","character","regularString","verbatimString","range","preprocessor","regularStringOrCharacter","regularStringCharacterOrComment","roundExpression","attrTarget","attr","target","formatString","mInterpolationRound","mInterpolation","sInterpolationRound","sInterpolation","createInterpolationInside","interpolationRound","expression","dotnet","cs","refractorCsharp","cshtml","commentLike","stringLike","round","square","curly","angle","tagAttrs","tagContent","tagRegion","html","block","join","value","razor","csp","safe","unsafe","cssExtras","selectorInside","css","selector","class","id","combinator","unit","hexcode","color","entity","atrule","rule","url","important","markup","tag","addInlined","addAttribute","csv","cypher","relationship","d","dart","packagePrefix","className","metadata","generics","dataweave","date","regex","dax","measure","dhall","label","env","hash","builtin","diff","coord","PREFIXES","unchanged","Object","keys","forEach","prefix","test","push","exec","line","defineProperty","refractorMarkupTemplating","django","filter","markupTemplating","hooks","add","buildPlaceholders","tokenizePlaceholders","jinja2","dnsZoneFile","type","docker","spaceAfterBackSlash","space","option","stringRule","commentRule","instruction","options","dockerfile","dot","ID","IDInside","withID","node","gv","ebnf","special","definition","editorconfig","section","eiffel","char","ejs","eta","elixir","doc","atom","argument","o","elm","hvariable","constant","erb","erlang","refractorLua","etlua","lua","excelFormula","reference","sheet","file","path","cell","column","row","factor","comment_inside","string_inside","regexp","combinators","escape","str","arrToWordsRegExp","arr","map","builtins","k","$false","firestoreSecurityRules","method","flow","Array","isArray","unshift","fortran","fsharp","ftl","FTL_EXPR","content","gap","shell","continuation","gcode","checksum","gdscript","gedcom","pointer","gherkin","tableRow","pystring","feature","scenario","outline","td","th","git","deleted","command","parameter","glsl","gml","gamemakerlanguage","gn","gni","go","graphql","description","markdown","scalar","fragment","object","language","validTokens","tokens","token","currentIndex","length","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","t","addAlias","mutationEnd","varToken","indexOf","offset","types","open","close","stackHeight","groovy","shebang","highlight","classes","haml","ruby","doctype","attributes","code","filters","all_filters","l","handlebars","brackets","hbs","haskell","hs","haxe","reification","hcl","heredoc","hlsl","c","hoon","hpkp","hsts","http","uri","langs","httpLanguages","json","xml","suffixTypes","getSuffixPattern","contentType","suffix","ichigojam","icon","icuMessageFormat","stringPattern","argumentSource","nestedMessage","message","refractorHaskell","idris","undefined","idr","iecst","ignore","entry","gitignore","hgignore","npmignore","inform7","substitution","title","verb","position","text","ini","header","key","io","j","adverb","conjunction","java","classNamePrefix","refractorJava","refractorJavadoclike","javadoc","codeLinePattern","memberReference","field","javadoclike","addSupport","javaDocLike","docLanguage","lang","callback","tokenName","grammar","docCommentSupport","hashbang","js","javastacktrace","summary","exceptions","version","more","jexl","transform","jolie","aggregates","redirects","jq","stringInterpolation","jsExtras","withId","imports","spread","arrow","dom","console","maybeClassNameTokens","util","jsTemplates","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","counter","toUpperCase","tokenizeWithHooks","run","tokenize","tokenizeInterpolationExpression","tempGrammar","args","apply","splice","Token","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","placeholder","interpolationExpression","placeholders","walkTokens","s","before","substring","middle","after","replacement","afterTokens","concat","Boolean","supportedLanguages","typescript","ts","jsx","tsx","stringContent","findTemplateStrings","embedded","refractorTypescript","jsdoc","parameterPrefix","example","null","webmanifest","refractorJson","json5","jsonp","jsstacktrace","filename","clone","braces","stringifyToken","openedTags","notTagNorBrace","tagName","pop","openedBraces","plainText","julia","keyman","bold","kotlin","kt","kts","kumir","nonId","wrapId","prolog","kum","kusto","datetime","latex","funcPattern","insideEqu","cdata","equation","headline","tex","context","refractorPhp","latte","ld","rd","php","markupLatte","less","refractorScheme","lilypond","schemeExpression","scheme","ly","liquid","empty","insideRaw","match","tagMatch","lisp","simple_form","primitive","par","endpar","heading","declare","interactive","defvar","defun","arguments","lambda","car","arg","varform","forms","arglist","sublist","elisp","emacs","livescript","llvm","log","exception","separator","email","domain","uuid","time","lolcode","magma","output","generator","makefile","inner","createInline","tableCell","tableLine","yaml","blockquote","table","hr","list","italic","strike","codeLang","codeBlock","toLowerCase","cls","tagPattern","parseInt","slice","Number","fromCodePoint","known","KNOWN_ENTITY_NAMES","textContent","plugins","autoloader","Date","valueOf","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","amp","lt","gt","quot","String","fromCharCode","md","defineProperties","placeholderPattern","replaceFilter","tokenStack","includedCdataInside","def","attrName","mathml","svg","ssml","rss","matlab","maxscript","mel","flag","mermaid","style","mizar","mongodb","operators","operatorsSource","monkey","moonscript","moon","n1ql","n4js","n4jsd","nand2tetrisHdl","naniscript","expressionDef","params","getTextContent","define","nani","input","stack","bracket","bracketsIndex","isBracketsBalanced","nasm","neon","literal","nevod","fields","search","quantifier","colon","nginx"],"sourceRoot":""}